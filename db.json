{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay-reward-image.jpg","path":"images/alipay-reward-image.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/particle.js","path":"js/src/particle.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"2f6d7a7551aa497aaf9c48bd599791e45192c088","modified":1463629696216},{"_id":"source/CNAME","hash":"1c6f46638f0ca08be7b4da06a5c49337340d4b29","modified":1463750590983},{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1463717891361},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1463717891361},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1463717891363},{"_id":"themes/next/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1463717891363},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1463717891363},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1463717891364},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1463717891364},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1463717891365},{"_id":"themes/next/_config.yml","hash":"32dbbfda2fb00ae1d11281561cbf9c7ef7f50c9b","modified":1474426233533},{"_id":"themes/next/_config_bak.yml","hash":"5bdfdc383a7726e010c400bc143e5e3a8687ce17","modified":1463717891366},{"_id":"themes/next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1463717891366},{"_id":"themes/next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1463717891366},{"_id":"themes/next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1463885644754},{"_id":"source/_posts/Android Studio常用插件整理(大图预警!).md","hash":"439cea95f45fb1eedfa0ee099aa271f8ab109db9","modified":1472608674685},{"_id":"source/_posts/Android-ORMLite-框架用法.md","hash":"86fc39ca708f192c2bcba32efd68bb2590030653","modified":1468565928433},{"_id":"source/_posts/Android-shape.md","hash":"c29bdbf2bae679a982a94e0eaa9b7e5724781a3c","modified":1466407729887},{"_id":"source/_posts/Android-常用方法摘记.md","hash":"f23af11dde5d2d8db71dda09a76f312951c9df87","modified":1474423620297},{"_id":"source/_posts/Android-踩过的坑.md","hash":"a5e554edf8c63a124e9d0ef26f404880289cedb3","modified":1474368953000},{"_id":"source/_posts/Android-studio常用的引用jar整理-for-自用.md","hash":"7be5fac0363e24e0bba485ed0e0b40c5dc228817","modified":1468565610011},{"_id":"source/_posts/Android中使用Gson解析稍复杂的JSON数据.md","hash":"d7931b9cd01d17d2fca8538edc06bc238c2cc11f","modified":1468566058370},{"_id":"source/_posts/Android沉浸式状态栏-md.md","hash":"7aef62f05f294a5c50d7f286881554bbcf63f2a3","modified":1468564986133},{"_id":"source/_posts/Athena项目启动.md","hash":"027d55bc97b1e7b7a04fb2b4f1182804cd1f4315","modified":1468567876316},{"_id":"source/_posts/Birt级联参数设置.md","hash":"77df071304745c280717edc41278c6066d0649bd","modified":1468565038111},{"_id":"source/_posts/Birt多选参数设置.md","hash":"0dfa550c4dd15354bf8b711a24bb061f6b92a528","modified":1468565017976},{"_id":"source/_posts/Git使用.md","hash":"ac12694db498c2de28533b54c23433117f7187d5","modified":1470211795178},{"_id":"source/_posts/Git语法.md","hash":"94da65f3462c830e678e4c2803bdc0b31c305505","modified":1474255249621},{"_id":"source/_posts/Hexo个人博客搭建.md","hash":"21f7f4d9acec422847f8ec2b5e6f61d040b6b1c1","modified":1474426660769},{"_id":"source/_posts/MumuXi安卓版开发.md","hash":"ea65032a4e3f3a341d6a13bc1806f09bf85bfed1","modified":1474356626327},{"_id":"source/_posts/bughd让bug无处遁形.md","hash":"f8682d5908bc73daa3c50d6265e464225ed0529b","modified":1473474963330},{"_id":"source/_posts/daocloud持续集成个人博客.md","hash":"2b109ca953d67da87215377844e8ddbfee70ee2a","modified":1474351812690},{"_id":"source/_posts/使用gradle命令打包apk.md","hash":"01a5feeb915f6c70bb14a58b0d878060a898a996","modified":1463634334553},{"_id":"source/_posts/实现多行多列的RadioButton.md","hash":"eb6565739dab9f584ccef2d931d240c004df2cf8","modified":1470296281273},{"_id":"source/_posts/开源项目收集.md","hash":"8702df0cccbcf1ce339d5918b716552ec1123f2d","modified":1473824893688},{"_id":"source/_posts/技术文档收集.md","hash":"01b14a751033de78a6aa1040b46977a9e7dd332a","modified":1470296199304},{"_id":"source/_posts/网易music-2016-5-22.md","hash":"9456cdf16503e4a348b8515f266d48151b72733f","modified":1468565951044},{"_id":"source/_posts/网易music_剑三.md","hash":"fe51dfdac8364031b6a8821bf431ad8d9b3134f9","modified":1473474914886},{"_id":"source/_posts/自定义Button(图文居中).md","hash":"3fe6e3ef6c5f07668e89c693e8efc47248aef880","modified":1468565053094},{"_id":"source/_posts/酷炫的android-dialog弹出框.md","hash":"8f19c8b8906230ac34832f5d49371747be44ff25","modified":1468565045864},{"_id":"source/about/index.md","hash":"3350359776604aef832235c53797708773085c3e","modified":1474426581838},{"_id":"source/categories/index.md","hash":"179d7dc4b35e99a4a1a1b5a97823a678560a10e7","modified":1463633186671},{"_id":"source/music/index.md","hash":"7b223a961590d250d241f99e9599cad1ad845764","modified":1463890280134},{"_id":"source/guestbook/index.md","hash":"0d864b56c3215459b162d318b5ef0f55a32a4030","modified":1463884067056},{"_id":"source/tags/index.md","hash":"0a62ca2f4646be100c8459f4df568af81bf6fe56","modified":1462866948000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1463717891362},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1463717891362},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1463717891367},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1463717891367},{"_id":"themes/next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1463717891368},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1463717891368},{"_id":"themes/next/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1463717891368},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1463717891369},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1463717891370},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1463717891370},{"_id":"themes/next/languages/zh-Hans.yml","hash":"2dc68c7024b38f2789a521d04241d248c8a119b4","modified":1463887826045},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1463717891371},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1463717891371},{"_id":"themes/next/layout/_layout.swig","hash":"6a463531840dd369342d647fdf214074ccecc8b9","modified":1474429501402},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1463717891390},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1463717891390},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1463717891391},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1463717891391},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1463717891391},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1463717891391},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1463717891392},{"_id":"themes/next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1463717891498},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1463717891498},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1463717891499},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891443},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1463717891372},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1463717891373},{"_id":"themes/next/layout/_macro/post.swig","hash":"843389ec3cb4c2baa6a6a2bb916f803c89ca723b","modified":1463717891373},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9fc9f89c169439d7584197930359b758eb198a1c","modified":1463717891374},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"d569af20d20a960d534a5b60f90c20fef519d351","modified":1463717891374},{"_id":"themes/next/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1463717891375},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1463717891375},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7ddbb0a1848aa37e59888e586c6632fb1f6c6bbe","modified":1474354670410},{"_id":"themes/next/layout/_partials/head.swig","hash":"0065ae49406ade2848b86bd4cd520af9d2148ece","modified":1463717891376},{"_id":"themes/next/layout/_partials/header.swig","hash":"46f8bbe51c0334c64c3a237bc0fe8ef73c6e58e1","modified":1466491546619},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1463717891377},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1463717891377},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1463717891380},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1463717891381},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1463717891381},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1463717891389},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1463717891393},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1463717891393},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1463717891393},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1463717891443},{"_id":"themes/next/source/images/alipay-reward-image.jpg","hash":"3005df3e713af928507db8de414a72664edeefd4","modified":1466407587407},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1463717891444},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1463717891445},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1463717891445},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1463717891446},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1463717891446},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1463717891447},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1463717891447},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1463717891447},{"_id":"themes/next/source/images/favicon.png","hash":"f76b0a554a76561f47cec2398724e2db979a1b07","modified":1467795625436},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1463717891448},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1463717891448},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1463717891449},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1463717891449},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1463717891449},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891383},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891383},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891429},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891429},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891431},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891440},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463717891442},{"_id":"themes/next/source/images/wechatpay.jpg","hash":"779a90ae1c9c0058d2295020269f335ef5e9b832","modified":1463885233334},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1463717891376},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1463717891378},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1463717891378},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1463717891378},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1463717891379},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1463717891379},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1463717891379},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1463717891380},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1463717891383},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1463717891383},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1463717891384},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1463717891387},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"3bb70d8d68142ee27f3cc98c2a4339757e7af3d3","modified":1463717891388},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1463717891388},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1463717891389},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1463717891389},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1463717891429},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1463717891430},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1463717891430},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1463717891440},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"b8e3663996b39590509d843f674360872b0242ac","modified":1463717891441},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a7ae72e846393493385275d934eaa78534d9834c","modified":1463717891441},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1463717891450},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1463717891450},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1463717891451},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1463717891451},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1463717891452},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1463717891453},{"_id":"themes/next/source/js/src/utils.js","hash":"418d09eb4df5dcc5e8d13d7f6245b1888200b51c","modified":1463717891454},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1463717891454},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1463717891455},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1463717891467},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1463717891467},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1463717891468},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1463717891468},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1463717891468},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1463717891480},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1463717891463},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1463717891462},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1463717891463},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1463717891464},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1463717891482},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1463717891482},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1463717891483},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1463717891483},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1463717891485},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1463717891486},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1463717891488},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1463717891490},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1463717891496},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1463717891497},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1463717891497},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1463717891481},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1463717891385},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1463717891385},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1463717891386},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1463717891386},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1463717891386},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1463717891386},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1463717891387},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"2338be12ffee58bc08197cb9da8aaf31737aaf5c","modified":1463717891388},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1463717891395},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1463717891395},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1463717891396},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1463717891397},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1463717891411},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1463717891420},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1463717891426},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1463717891426},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1463717891427},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1463717891428},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1463717891428},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1463717891428},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1463717891432},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1463717891432},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1463717891432},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1463717891433},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1463717891433},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1463717891433},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1463717891434},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1463717891436},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1463717891436},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1463717891436},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1463717891437},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1463717891437},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1463717891438},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1463717891438},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1463717891439},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1463717891439},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1463717891439},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1463717891440},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1463717891440},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1463717891453},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1463717891455},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1463717891455},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1463717891456},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1463717891456},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1463717891457},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1463717891457},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1463717891460},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1463717891461},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1463717891461},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1463717891469},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1463717891469},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1463717891470},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1463717891479},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1463717891466},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1463717891466},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1463717891487},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1463717891488},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1463717891472},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1463717891473},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1463717891478},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1463717891495},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1463717891397},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1463717891406},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1463717891406},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1463717891406},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1463717891408},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1463717891408},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1463717891409},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1463717891410},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1463717891410},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1463717891411},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"70ec8d38d2b3ee1906793d1dcb68032adfa65f03","modified":1463717891408},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1463717891409},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1463717891417},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1463717891417},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1463717891418},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1463717891418},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1463717891419},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1463717891419},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1463717891419},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1463717891420},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1463717891420},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1463717891412},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1463717891412},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1463717891413},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1463717891413},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1463717891414},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1463717891414},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1463717891415},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1463717891415},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1463717891415},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1463717891415},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1463717891416},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1463717891416},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1463717891421},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1463717891421},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1463717891422},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1463717891422},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1463717891423},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1463717891424},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1463717891424},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1463717891425},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1463717891425},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1463717891425},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1463717891435},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1463717891435},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1463717891438},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1463717891458},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1463717891458},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1463717891459},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1463717891459},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1463717891460},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1463717891460},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1463717891478},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1463717891476},{"_id":"themes/next/source/js/src/love.js","hash":"e4e3686069a0f0bc6d16ac47e310f2c6fc8813cf","modified":1474429400116},{"_id":"themes/next/source/js/src/particle.js","hash":"914c8e99af756e7004359aaa71fee4e59f214649","modified":1474429289699}],"Category":[{"name":"Android Studio插件","_id":"citbcwfx40006gwagxh3qg6d8"},{"name":"Android","_id":"citbcwfxp000dgwagx5kb1qjz"},{"name":"APP开发记","_id":"citbcwfyk0013gwagg4g8h562"},{"name":"Birt","_id":"citbcwfyv001bgwagbyqfkkxw"},{"name":"Git","_id":"citbcwfz8001pgwagxqi14zhb"},{"name":"Hexo","_id":"citbcwfzw0026gwagnzgwei08"},{"name":"BugHD","_id":"citbcwg00002cgwagrt4gj85n"},{"name":"持续集成","_id":"citbcwg02002jgwagj7v8cm13"},{"name":"开源项目","_id":"citbcwg0f002qgwag6us8ac8z"},{"name":"技术文档","_id":"citbcwg0i002vgwag0l3cjonc"},{"name":"Music","_id":"citbcwg0j002zgwagdwjmhanj"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"�ص��ҵ���ҳ\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"�ص��ҵ���ҳ\">\n</script>\n\n</body>\n</html>","date":"2016-09-20T02:37:37.680Z","updated":"2016-05-19T03:48:16.216Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"citbcwfv40000gwagxg12i3qq","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"�ص��ҵ���ҳ\">\n</script>\n\n</body>\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"�ص��ҵ���ҳ\">\n</script>\n\n</body>\n</html>"},{"title":"About","layout":"page","comments":0,"_content":"<!-- 标签 方式，要求版本在0.4.5或以上 -->\n{% centerquote %}爱技术、爱生活。{% endcenterquote %}\n\nHey，我是**Bruce Yang**，Android 开发者 & 独立开发者，[南京信息工程大学](http://www.nuist.edu.cn/) · 计算机科学与技术 2015届毕业。\n\n目前就职于[中兴软创](http://www.ztesoft.com/cn)。\n\n喜欢技术，热爱分享。\n\n一些作品和开源项目，👉 戳 [Mumuxi](https://github.com/yangxiaoge/MumuXi) 与 [Github](https://github.com/yangxiaoge)\n\n喜欢听歌，喜欢的国内歌手有 **陈奕迅** **林宥嘉** **周杰伦** **王菲** **林俊杰** **王力宏** **薛之谦**。\n\n喜欢运动，也喜欢户外，登山等等。","source":"about/index.md","raw":"title: \"About\"\nlayout: \"page\"\ncomments: false\n---\n<!-- 标签 方式，要求版本在0.4.5或以上 -->\n{% centerquote %}爱技术、爱生活。{% endcenterquote %}\n\nHey，我是**Bruce Yang**，Android 开发者 & 独立开发者，[南京信息工程大学](http://www.nuist.edu.cn/) · 计算机科学与技术 2015届毕业。\n\n目前就职于[中兴软创](http://www.ztesoft.com/cn)。\n\n喜欢技术，热爱分享。\n\n一些作品和开源项目，👉 戳 [Mumuxi](https://github.com/yangxiaoge/MumuXi) 与 [Github](https://github.com/yangxiaoge)\n\n喜欢听歌，喜欢的国内歌手有 **陈奕迅** **林宥嘉** **周杰伦** **王菲** **林俊杰** **王力宏** **薛之谦**。\n\n喜欢运动，也喜欢户外，登山等等。","date":"2016-09-21T02:56:21.838Z","updated":"2016-09-21T02:56:21.838Z","path":"about/index.html","_id":"citbcwfws0002gwagg7t56jsq","content":"<!-- 标签 方式，要求版本在0.4.5或以上 -->\n<blockquote class=\"blockquote-center\"><p>爱技术、爱生活。</p>\n</blockquote>\n<p>Hey，我是<strong>Bruce Yang</strong>，Android 开发者 &amp; 独立开发者，<a href=\"http://www.nuist.edu.cn/\" target=\"_blank\" rel=\"external\">南京信息工程大学</a> · 计算机科学与技术 2015届毕业。</p>\n<p>目前就职于<a href=\"http://www.ztesoft.com/cn\" target=\"_blank\" rel=\"external\">中兴软创</a>。</p>\n<p>喜欢技术，热爱分享。</p>\n<p>一些作品和开源项目，👉 戳 <a href=\"https://github.com/yangxiaoge/MumuXi\" target=\"_blank\" rel=\"external\">Mumuxi</a> 与 <a href=\"https://github.com/yangxiaoge\" target=\"_blank\" rel=\"external\">Github</a></p>\n<p>喜欢听歌，喜欢的国内歌手有 <strong>陈奕迅</strong> <strong>林宥嘉</strong> <strong>周杰伦</strong> <strong>王菲</strong> <strong>林俊杰</strong> <strong>王力宏</strong> <strong>薛之谦</strong>。</p>\n<p>喜欢运动，也喜欢户外，登山等等。</p>\n","excerpt":"","more":"<!-- 标签 方式，要求版本在0.4.5或以上 -->\n<blockquote class=\"blockquote-center\"><p>爱技术、爱生活。</p>\n</blockquote>\n<p>Hey，我是<strong>Bruce Yang</strong>，Android 开发者 &amp; 独立开发者，<a href=\"http://www.nuist.edu.cn/\">南京信息工程大学</a> · 计算机科学与技术 2015届毕业。</p>\n<p>目前就职于<a href=\"http://www.ztesoft.com/cn\">中兴软创</a>。</p>\n<p>喜欢技术，热爱分享。</p>\n<p>一些作品和开源项目，👉 戳 <a href=\"https://github.com/yangxiaoge/MumuXi\">Mumuxi</a> 与 <a href=\"https://github.com/yangxiaoge\">Github</a></p>\n<p>喜欢听歌，喜欢的国内歌手有 <strong>陈奕迅</strong> <strong>林宥嘉</strong> <strong>周杰伦</strong> <strong>王菲</strong> <strong>林俊杰</strong> <strong>王力宏</strong> <strong>薛之谦</strong>。</p>\n<p>喜欢运动，也喜欢户外，登山等等。</p>\n"},{"title":"categories","date":"2016-05-19T04:43:10.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-05-19 12:43:10\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-05-19T04:46:26.671Z","path":"categories/index.html","layout":"page","_id":"citbcwfwx0004gwagi6j80zvg","content":"","excerpt":"","more":""},{"title":"music","date":"2016-05-22T03:28:07.000Z","comments":1,"_content":"","source":"music/index.md","raw":"---\ntitle: music\ndate: 2016-05-22 11:28:07\ncomments: true\n---\n","updated":"2016-05-22T04:11:20.134Z","path":"music/index.html","layout":"page","_id":"citbcwfx70008gwagvlxq0i1m","content":"","excerpt":"","more":""},{"title":"guestbook","date":"2016-05-22T02:10:24.000Z","comments":1,"_content":"\n> 最近访客\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n\n","source":"guestbook/index.md","raw":"---\ntitle: guestbook\ndate: 2016-05-22 10:10:24\ncomments: true\n---\n\n> 最近访客\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n\n","updated":"2016-05-22T02:27:47.056Z","path":"guestbook/index.html","layout":"page","_id":"citbcwfxj000agwagay1s11qu","content":"<blockquote>\n<p>最近访客</p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>最近访客</p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n\n</blockquote>\n"},{"type":"tags","noDate":true,"comments":0,"_content":"","source":"tags/index.md","raw":"type: \"tags\"\nnoDate: true\ncomments: false\n---\n","date":"2016-09-20T02:37:37.684Z","updated":"2016-05-10T07:55:48.000Z","path":"tags/index.html","title":"","layout":"page","_id":"citbcwg4u003hgwagd3pme0r9","content":"","excerpt":"","more":""}],"Post":[{"title":"Android Studio常用插件整理(大图预警!)","date":"2016-08-31T01:51:51.000Z","top":10,"_content":"\n>详情见:[习惯沉默的Blog](https://ydmmocoo.github.io/2016/06/28/Android-Studio%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/#comments)\n","source":"_posts/Android Studio常用插件整理(大图预警!).md","raw":"---\ntitle: Android Studio常用插件整理(大图预警!)\ndate: 2016-08-31 09:51:51\ntags: Android Studio\ncategories: Android Studio插件\ntop: 10\n---\n\n>详情见:[习惯沉默的Blog](https://ydmmocoo.github.io/2016/06/28/Android-Studio%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/#comments)\n","slug":"Android Studio常用插件整理(大图预警!)","published":1,"updated":"2016-08-31T01:57:54.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfwn0001gwag939fr9kf","content":"<blockquote>\n<p>详情见:<a href=\"https://ydmmocoo.github.io/2016/06/28/Android-Studio%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/#comments\" target=\"_blank\" rel=\"external\">习惯沉默的Blog</a></p>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>详情见:<a href=\"https://ydmmocoo.github.io/2016/06/28/Android-Studio%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/#comments\">习惯沉默的Blog</a></p>\n</blockquote>\n"},{"title":"Android ORMLite 框架用法","date":"2016-06-21T06:02:55.000Z","_content":">本文摘自 [鸿神](http://blog.csdn.net/lmj623565791/article/details/39121377)博客,自己偷懒没写,鸿神的写的很详细,他的博客还有 [ORMLite 框架最佳实践](http://blog.csdn.net/lmj623565791/article/details/39122981).\n\n基于鸿神教程运用了ORMLite框架详见我的[Github_QueryCityId](https://github.com/yangxiaoge/queryCityId)\n\n转载请标明出处：http://blog.csdn.net/lmj623565791/article/details/39121377\n\n大家在Android项目中或多或少的都会使用数据库，为了提高我们的开发效率，当然少不了数据库ORM框架了，尤其是某些数据库操作特别频繁的app；本篇博客将详细介绍ORMLite的简易用法。\n<!-- more -->\n下面开始介绍ORMLite的入门用法~\n\n# 下载 ORMLite Jar\n首先去[ORMLite官网下载jar包](http://ormlite.com/releases/)，对于Android为：`ormlite-android-4.48.jar` 和 `ormlite-core-4.48.jar` ；\n\nps:访问不了的朋友，文章末尾会把jar、源码、doc与本篇博客例子一起打包提供给大家下载。\n# 配置Bean类\n有了jar,我们直接新建一个项目为：zhy_ormlite，然后把jar拷贝到libs下。\n\n然后新建一个包：com.zhy.zhy_ormlite.bean专门用于存放项目中的Bean，首先新建一个`User.Java`\n```\npackage com.zhy.zhy_ormlite.bean;\n\nimport com.j256.ormlite.field.DatabaseField;\nimport com.j256.ormlite.table.DatabaseTable;\n\n@DatabaseTable(tableName = \"tb_user\")\npublic class User\n{\n\t@DatabaseField(generatedId = true)\n\tprivate int id;\n\t@DatabaseField(columnName = \"name\")\n\tprivate String name;\n\t@DatabaseField(columnName = \"desc\")\n\tprivate String desc;\n\n\tpublic User()\n\t{\n\t}\n\n\tpublic User(String name, String desc)\n\t{\n\t\tthis.name = name;\n\t\tthis.desc = desc;\n\t}\n\n\tpublic int getId()\n\t{\n\t\treturn id;\n\t}\n\n\tpublic void setId(int id)\n\t{\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName()\n\t{\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name)\n\t{\n\t\tthis.name = name;\n\t}\n\n\tpublic String getDesc()\n\t{\n\t\treturn desc;\n\t}\n\n\tpublic void setDesc(String desc)\n\t{\n\t\tthis.desc = desc;\n\t}\n\n}\n\n```\n首先在User类上添加@DatabaseTable(tableName = \"tb_user\")，标明这是数据库中的一张表，标明为tb_user\n然后分别在属性上添加@DatabaseField(columnName = \"name\") ，columnName的值为该字段在数据中的列名\n@DatabaseField(generatedId = true) ，generatedId 表示id为主键且自动生成\n\n# 编写DAO类\n原生的数据库操作，需要继承SQLiteOpenHelper，`这里`我们需要`继承OrmLiteSqliteOpenHelper`，看代码：\n```\npackage com.zhy.zhy_ormlite.db;\n\nimport java.sql.SQLException;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;\nimport com.j256.ormlite.dao.Dao;\nimport com.j256.ormlite.support.ConnectionSource;\nimport com.j256.ormlite.table.TableUtils;\nimport com.zhy.zhy_ormlite.bean.User;\n\npublic class DatabaseHelper extends OrmLiteSqliteOpenHelper\n{\n\n\tprivate static final String TABLE_NAME = \"sqlite-test.db\";\n\t/**\n\t * userDao ，每张表对于一个\n\t */\n\tprivate Dao<User, Integer> userDao;\n\n\tprivate DatabaseHelper(Context context)\n\t{\n\t\tsuper(context, TABLE_NAME, null, 2);\n\t}\n\n\t@Override\n\tpublic void onCreate(SQLiteDatabase database,\n\t\t\tConnectionSource connectionSource)\n\t{\n\t\ttry\n\t\t{\n\t\t\tTableUtils.createTable(connectionSource, User.class);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t@Override\n\tpublic void onUpgrade(SQLiteDatabase database,\n\t\t\tConnectionSource connectionSource, int oldVersion, int newVersion)\n\t{\n\t\ttry\n\t\t{\n\t\t\tTableUtils.dropTable(connectionSource, User.class, true);\n\t\t\tonCreate(database, connectionSource);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tprivate static DatabaseHelper instance;\n\n\t/**\n\t * 单例获取该Helper\n\t * \n\t * @param context\n\t * @return\n\t */\n\tpublic static synchronized DatabaseHelper getHelper(Context context)\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tsynchronized (DatabaseHelper.class)\n\t\t\t{\n\t\t\t\tif (instance == null)\n\t\t\t\t\tinstance = new DatabaseHelper(context);\n\t\t\t}\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\t/**\n\t * 获得userDao\n\t * \n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic Dao<User, Integer> getUserDao() throws SQLException\n\t{\n\t\tif (userDao == null)\n\t\t{\n\t\t\tuserDao = getDao(User.class);\n\t\t}\n\t\treturn userDao;\n\t}\n\n\t/**\n\t * 释放资源\n\t */\n\t@Override\n\tpublic void close()\n\t{\n\t\tsuper.close();\n\t\tuserDao = null;\n\t}\n\n}\n```\n这里我们需要继承OrmLiteSqliteOpenHelper，`其实`就是`间接继承`了SQLiteOpenHelper\n然后需要实现两个方法：\n1、onCreate(SQLiteDatabase database,ConnectionSource connectionSource)\n创建表，我们直接使用ormlite提供的TableUtils.createTable(connectionSource, User.class);进行创建~\n2、onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion)\n更新表，使用ormlite提供的TableUtils.dropTable(connectionSource, User.class, true);进行删除操作~\n删除完成后，别忘了，创建操作：onCreate(database, connectionSource);\n\n然后使用单例公布出一个创建实例的方法，getHelper用于获取我们的help实例；\n最后我们可能会有很多表嘛，每个表一般我们都会单独写个Dao用于操作，这里为了简单我并没有抽取出来，直接写在helper中：\n比如UserDao的获取：\n```\n/**\n\t * 获得userDao\n\t * \n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic Dao<User, Integer> getUserDao() throws SQLException\n\t{\n\t\tif (userDao == null)\n\t\t{\n\t\t\tuserDao = getDao(User.class);\n\t\t}\n\t\treturn userDao;\n\t}\n```\n然后通过获取到的Dao就可以进行User的一些常用的操作了。\n# 测试\n最后是`测试`，我们直接创建了一个`测试类`进行测试~~~\n```\npackage com.zhy.zhy_ormlite.test;\n\nimport java.sql.SQLException;\nimport java.util.List;\n\nimport com.zhy.zhy_ormlite.bean.User;\nimport com.zhy.zhy_ormlite.db.DatabaseHelper;\n\nimport android.test.AndroidTestCase;\nimport android.util.Log;\n\npublic class OrmLiteDbTest extends AndroidTestCase\n{\n\n\tpublic void testAddUser()\n\t{\n\n\t\tUser u1 = new User(\"zhy\", \"2B青年\");\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy2\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy3\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy4\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy5\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy6\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\t\n\t\t\ttestList();\n\t\t\t\n\t\t\t\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void testDeleteUser()\n\t{\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\thelper.getUserDao().deleteById(2);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void testUpdateUser()\n\t{\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\tUser u1 = new User(\"zhy-android\", \"2B青年\");\n\t\t\tu1.setId(3);\n\t\t\thelper.getUserDao().update(u1);\n\t\t\t\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void testList()\n\t{\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\tUser u1 = new User(\"zhy-android\", \"2B青年\");\n\t\t\tu1.setId(2);\n\t\t\tList<User> users = helper.getUserDao().queryForAll();\n\t\t\tLog.e(\"TAG\", users.toString());\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n}\n```\n`简单测试`了下CURD，使用`AndroidTestCase`记得配置下环境~~~\n用起来是不是还是非常方便的，不过还是建议大家例如User的数据库操作，单独抽取出来为UserDao，如下：\n```\npackage com.zhy.zhy_ormlite.db;\n\nimport java.sql.SQLException;\n\nimport android.content.Context;\n\nimport com.zhy.zhy_ormlite.bean.User;\n\npublic class UserDao\n{\n\tprivate Context context;\n\n\tpublic UserDao(Context context)\n\t{\n\t\tthis.context = context;\n\t}\n\n\tpublic void add(User user)\n\t{\n\t\ttry\n\t\t{\n\t\t\tDatabaseHelper.getHelper(context).getUserDao().create(user);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t}\n\t}//......\n\n}\n```\n注：ORMLite还提供了一些基类ORMLiteBaseActivity，ORMLiteBaseService之类的，便于数据库操作的，这里不做考虑，毕竟项目中很大可能自己也需要继承自己的BaseActvity之类的。\n\n上面简单介绍了如何使用ORMLite框架，[Android 快速开发系列 ORMLite 框架的使用](http://blog.csdn.net/lmj623565791/article/details/39122981) 将对其用法进行深入的介绍。\n\n#[源码点击下载](http://download.csdn.net/detail/lmj623565791/7878003)\n","source":"_posts/Android-ORMLite-框架用法.md","raw":"---\ntitle: Android ORMLite 框架用法\ndate: 2016-06-21 14:02:55\ntags: [Android,ORMLite]\ncategories: Android\n---\n>本文摘自 [鸿神](http://blog.csdn.net/lmj623565791/article/details/39121377)博客,自己偷懒没写,鸿神的写的很详细,他的博客还有 [ORMLite 框架最佳实践](http://blog.csdn.net/lmj623565791/article/details/39122981).\n\n基于鸿神教程运用了ORMLite框架详见我的[Github_QueryCityId](https://github.com/yangxiaoge/queryCityId)\n\n转载请标明出处：http://blog.csdn.net/lmj623565791/article/details/39121377\n\n大家在Android项目中或多或少的都会使用数据库，为了提高我们的开发效率，当然少不了数据库ORM框架了，尤其是某些数据库操作特别频繁的app；本篇博客将详细介绍ORMLite的简易用法。\n<!-- more -->\n下面开始介绍ORMLite的入门用法~\n\n# 下载 ORMLite Jar\n首先去[ORMLite官网下载jar包](http://ormlite.com/releases/)，对于Android为：`ormlite-android-4.48.jar` 和 `ormlite-core-4.48.jar` ；\n\nps:访问不了的朋友，文章末尾会把jar、源码、doc与本篇博客例子一起打包提供给大家下载。\n# 配置Bean类\n有了jar,我们直接新建一个项目为：zhy_ormlite，然后把jar拷贝到libs下。\n\n然后新建一个包：com.zhy.zhy_ormlite.bean专门用于存放项目中的Bean，首先新建一个`User.Java`\n```\npackage com.zhy.zhy_ormlite.bean;\n\nimport com.j256.ormlite.field.DatabaseField;\nimport com.j256.ormlite.table.DatabaseTable;\n\n@DatabaseTable(tableName = \"tb_user\")\npublic class User\n{\n\t@DatabaseField(generatedId = true)\n\tprivate int id;\n\t@DatabaseField(columnName = \"name\")\n\tprivate String name;\n\t@DatabaseField(columnName = \"desc\")\n\tprivate String desc;\n\n\tpublic User()\n\t{\n\t}\n\n\tpublic User(String name, String desc)\n\t{\n\t\tthis.name = name;\n\t\tthis.desc = desc;\n\t}\n\n\tpublic int getId()\n\t{\n\t\treturn id;\n\t}\n\n\tpublic void setId(int id)\n\t{\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName()\n\t{\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name)\n\t{\n\t\tthis.name = name;\n\t}\n\n\tpublic String getDesc()\n\t{\n\t\treturn desc;\n\t}\n\n\tpublic void setDesc(String desc)\n\t{\n\t\tthis.desc = desc;\n\t}\n\n}\n\n```\n首先在User类上添加@DatabaseTable(tableName = \"tb_user\")，标明这是数据库中的一张表，标明为tb_user\n然后分别在属性上添加@DatabaseField(columnName = \"name\") ，columnName的值为该字段在数据中的列名\n@DatabaseField(generatedId = true) ，generatedId 表示id为主键且自动生成\n\n# 编写DAO类\n原生的数据库操作，需要继承SQLiteOpenHelper，`这里`我们需要`继承OrmLiteSqliteOpenHelper`，看代码：\n```\npackage com.zhy.zhy_ormlite.db;\n\nimport java.sql.SQLException;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;\nimport com.j256.ormlite.dao.Dao;\nimport com.j256.ormlite.support.ConnectionSource;\nimport com.j256.ormlite.table.TableUtils;\nimport com.zhy.zhy_ormlite.bean.User;\n\npublic class DatabaseHelper extends OrmLiteSqliteOpenHelper\n{\n\n\tprivate static final String TABLE_NAME = \"sqlite-test.db\";\n\t/**\n\t * userDao ，每张表对于一个\n\t */\n\tprivate Dao<User, Integer> userDao;\n\n\tprivate DatabaseHelper(Context context)\n\t{\n\t\tsuper(context, TABLE_NAME, null, 2);\n\t}\n\n\t@Override\n\tpublic void onCreate(SQLiteDatabase database,\n\t\t\tConnectionSource connectionSource)\n\t{\n\t\ttry\n\t\t{\n\t\t\tTableUtils.createTable(connectionSource, User.class);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t@Override\n\tpublic void onUpgrade(SQLiteDatabase database,\n\t\t\tConnectionSource connectionSource, int oldVersion, int newVersion)\n\t{\n\t\ttry\n\t\t{\n\t\t\tTableUtils.dropTable(connectionSource, User.class, true);\n\t\t\tonCreate(database, connectionSource);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tprivate static DatabaseHelper instance;\n\n\t/**\n\t * 单例获取该Helper\n\t * \n\t * @param context\n\t * @return\n\t */\n\tpublic static synchronized DatabaseHelper getHelper(Context context)\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tsynchronized (DatabaseHelper.class)\n\t\t\t{\n\t\t\t\tif (instance == null)\n\t\t\t\t\tinstance = new DatabaseHelper(context);\n\t\t\t}\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\t/**\n\t * 获得userDao\n\t * \n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic Dao<User, Integer> getUserDao() throws SQLException\n\t{\n\t\tif (userDao == null)\n\t\t{\n\t\t\tuserDao = getDao(User.class);\n\t\t}\n\t\treturn userDao;\n\t}\n\n\t/**\n\t * 释放资源\n\t */\n\t@Override\n\tpublic void close()\n\t{\n\t\tsuper.close();\n\t\tuserDao = null;\n\t}\n\n}\n```\n这里我们需要继承OrmLiteSqliteOpenHelper，`其实`就是`间接继承`了SQLiteOpenHelper\n然后需要实现两个方法：\n1、onCreate(SQLiteDatabase database,ConnectionSource connectionSource)\n创建表，我们直接使用ormlite提供的TableUtils.createTable(connectionSource, User.class);进行创建~\n2、onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion)\n更新表，使用ormlite提供的TableUtils.dropTable(connectionSource, User.class, true);进行删除操作~\n删除完成后，别忘了，创建操作：onCreate(database, connectionSource);\n\n然后使用单例公布出一个创建实例的方法，getHelper用于获取我们的help实例；\n最后我们可能会有很多表嘛，每个表一般我们都会单独写个Dao用于操作，这里为了简单我并没有抽取出来，直接写在helper中：\n比如UserDao的获取：\n```\n/**\n\t * 获得userDao\n\t * \n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic Dao<User, Integer> getUserDao() throws SQLException\n\t{\n\t\tif (userDao == null)\n\t\t{\n\t\t\tuserDao = getDao(User.class);\n\t\t}\n\t\treturn userDao;\n\t}\n```\n然后通过获取到的Dao就可以进行User的一些常用的操作了。\n# 测试\n最后是`测试`，我们直接创建了一个`测试类`进行测试~~~\n```\npackage com.zhy.zhy_ormlite.test;\n\nimport java.sql.SQLException;\nimport java.util.List;\n\nimport com.zhy.zhy_ormlite.bean.User;\nimport com.zhy.zhy_ormlite.db.DatabaseHelper;\n\nimport android.test.AndroidTestCase;\nimport android.util.Log;\n\npublic class OrmLiteDbTest extends AndroidTestCase\n{\n\n\tpublic void testAddUser()\n\t{\n\n\t\tUser u1 = new User(\"zhy\", \"2B青年\");\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy2\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy3\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy4\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy5\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\tu1 = new User(\"zhy6\", \"2B青年\");\n\t\t\thelper.getUserDao().create(u1);\n\t\t\t\n\t\t\ttestList();\n\t\t\t\n\t\t\t\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void testDeleteUser()\n\t{\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\thelper.getUserDao().deleteById(2);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void testUpdateUser()\n\t{\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\tUser u1 = new User(\"zhy-android\", \"2B青年\");\n\t\t\tu1.setId(3);\n\t\t\thelper.getUserDao().update(u1);\n\t\t\t\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void testList()\n\t{\n\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());\n\t\ttry\n\t\t{\n\t\t\tUser u1 = new User(\"zhy-android\", \"2B青年\");\n\t\t\tu1.setId(2);\n\t\t\tList<User> users = helper.getUserDao().queryForAll();\n\t\t\tLog.e(\"TAG\", users.toString());\n\t\t} catch (SQLException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n}\n```\n`简单测试`了下CURD，使用`AndroidTestCase`记得配置下环境~~~\n用起来是不是还是非常方便的，不过还是建议大家例如User的数据库操作，单独抽取出来为UserDao，如下：\n```\npackage com.zhy.zhy_ormlite.db;\n\nimport java.sql.SQLException;\n\nimport android.content.Context;\n\nimport com.zhy.zhy_ormlite.bean.User;\n\npublic class UserDao\n{\n\tprivate Context context;\n\n\tpublic UserDao(Context context)\n\t{\n\t\tthis.context = context;\n\t}\n\n\tpublic void add(User user)\n\t{\n\t\ttry\n\t\t{\n\t\t\tDatabaseHelper.getHelper(context).getUserDao().create(user);\n\t\t} catch (SQLException e)\n\t\t{\n\t\t}\n\t}//......\n\n}\n```\n注：ORMLite还提供了一些基类ORMLiteBaseActivity，ORMLiteBaseService之类的，便于数据库操作的，这里不做考虑，毕竟项目中很大可能自己也需要继承自己的BaseActvity之类的。\n\n上面简单介绍了如何使用ORMLite框架，[Android 快速开发系列 ORMLite 框架的使用](http://blog.csdn.net/lmj623565791/article/details/39122981) 将对其用法进行深入的介绍。\n\n#[源码点击下载](http://download.csdn.net/detail/lmj623565791/7878003)\n","slug":"Android-ORMLite-框架用法","published":1,"updated":"2016-07-15T06:58:48.433Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfwu0003gwagbxrqvbua","content":"<blockquote>\n<p>本文摘自 <a href=\"http://blog.csdn.net/lmj623565791/article/details/39121377\" target=\"_blank\" rel=\"external\">鸿神</a>博客,自己偷懒没写,鸿神的写的很详细,他的博客还有 <a href=\"http://blog.csdn.net/lmj623565791/article/details/39122981\" target=\"_blank\" rel=\"external\">ORMLite 框架最佳实践</a>.</p>\n</blockquote>\n<p>基于鸿神教程运用了ORMLite框架详见我的<a href=\"https://github.com/yangxiaoge/queryCityId\" target=\"_blank\" rel=\"external\">Github_QueryCityId</a></p>\n<p>转载请标明出处：<a href=\"http://blog.csdn.net/lmj623565791/article/details/39121377\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/lmj623565791/article/details/39121377</a></p>\n<p>大家在Android项目中或多或少的都会使用数据库，为了提高我们的开发效率，当然少不了数据库ORM框架了，尤其是某些数据库操作特别频繁的app；本篇博客将详细介绍ORMLite的简易用法。<br><a id=\"more\"></a><br>下面开始介绍ORMLite的入门用法~</p>\n<h1 id=\"下载-ORMLite-Jar\"><a href=\"#下载-ORMLite-Jar\" class=\"headerlink\" title=\"下载 ORMLite Jar\"></a>下载 ORMLite Jar</h1><p>首先去<a href=\"http://ormlite.com/releases/\" target=\"_blank\" rel=\"external\">ORMLite官网下载jar包</a>，对于Android为：<code>ormlite-android-4.48.jar</code> 和 <code>ormlite-core-4.48.jar</code> ；</p>\n<p>ps:访问不了的朋友，文章末尾会把jar、源码、doc与本篇博客例子一起打包提供给大家下载。</p>\n<h1 id=\"配置Bean类\"><a href=\"#配置Bean类\" class=\"headerlink\" title=\"配置Bean类\"></a>配置Bean类</h1><p>有了jar,我们直接新建一个项目为：zhy_ormlite，然后把jar拷贝到libs下。</p>\n<p>然后新建一个包：com.zhy.zhy_ormlite.bean专门用于存放项目中的Bean，首先新建一个<code>User.Java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.bean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.field.DatabaseField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.table.DatabaseTable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@DatabaseTable</span>(tableName = <span class=\"string\">\"tb_user\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@DatabaseField</span>(generatedId = <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">\t<span class=\"meta\">@DatabaseField</span>(columnName = <span class=\"string\">\"name\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"meta\">@DatabaseField</span>(columnName = <span class=\"string\">\"desc\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String desc;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(String name, String desc)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.desc = desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> id;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getDesc</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDesc</span><span class=\"params\">(String desc)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.desc = desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>首先在User类上添加@DatabaseTable(tableName = “tb_user”)，标明这是数据库中的一张表，标明为tb_user<br>然后分别在属性上添加@DatabaseField(columnName = “name”) ，columnName的值为该字段在数据中的列名<br>@DatabaseField(generatedId = true) ，generatedId 表示id为主键且自动生成</p>\n<h1 id=\"编写DAO类\"><a href=\"#编写DAO类\" class=\"headerlink\" title=\"编写DAO类\"></a>编写DAO类</h1><p>原生的数据库操作，需要继承SQLiteOpenHelper，<code>这里</code>我们需要<code>继承OrmLiteSqliteOpenHelper</code>，看代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.db;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.dao.Dao;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.support.ConnectionSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.table.TableUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.bean.User;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DatabaseHelper</span> <span class=\"keyword\">extends</span> <span class=\"title\">OrmLiteSqliteOpenHelper</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TABLE_NAME = <span class=\"string\">\"sqlite-test.db\"</span>;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * userDao ，每张表对于一个</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Dao&lt;User, Integer&gt; userDao;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">DatabaseHelper</span><span class=\"params\">(Context context)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(context, TABLE_NAME, <span class=\"keyword\">null</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(SQLiteDatabase database,</span><br><span class=\"line\">\t\t\tConnectionSource connectionSource)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tTableUtils.createTable(connectionSource, User.class);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase database,</span><br><span class=\"line\">\t\t\tConnectionSource connectionSource, <span class=\"keyword\">int</span> oldVersion, <span class=\"keyword\">int</span> newVersion)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tTableUtils.dropTable(connectionSource, User.class, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\tonCreate(database, connectionSource);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DatabaseHelper instance;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * 单例获取该Helper</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * <span class=\"doctag\">@param</span> context</span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span></span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> DatabaseHelper <span class=\"title\">getHelper</span><span class=\"params\">(Context context)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (instance == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">synchronized</span> (DatabaseHelper.class)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (instance == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t\t\t\tinstance = <span class=\"keyword\">new</span> DatabaseHelper(context);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> instance;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * 获得userDao</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span></span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Dao&lt;User, Integer&gt; <span class=\"title\">getUserDao</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (userDao == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tuserDao = getDao(User.class);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> userDao;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * 释放资源</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.close();</span><br><span class=\"line\">\t\tuserDao = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里我们需要继承OrmLiteSqliteOpenHelper，<code>其实</code>就是<code>间接继承</code>了SQLiteOpenHelper<br>然后需要实现两个方法：<br>1、onCreate(SQLiteDatabase database,ConnectionSource connectionSource)<br>创建表，我们直接使用ormlite提供的TableUtils.createTable(connectionSource, User.class);进行创建~<br>2、onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion)<br>更新表，使用ormlite提供的TableUtils.dropTable(connectionSource, User.class, true);进行删除操作~<br>删除完成后，别忘了，创建操作：onCreate(database, connectionSource);</p>\n<p>然后使用单例公布出一个创建实例的方法，getHelper用于获取我们的help实例；<br>最后我们可能会有很多表嘛，每个表一般我们都会单独写个Dao用于操作，这里为了简单我并没有抽取出来，直接写在helper中：<br>比如UserDao的获取：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">\t * 获得userDao</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span></span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Dao&lt;User, Integer&gt; getUserDao() <span class=\"keyword\">throws</span> SQLException</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (userDao == <span class=\"literal\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tuserDao = getDao(User.<span class=\"keyword\">class</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> userDao;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后通过获取到的Dao就可以进行User的一些常用的操作了。</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>最后是<code>测试</code>，我们直接创建了一个<code>测试类</code>进行测试<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.bean.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.db.DatabaseHelper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.test.AndroidTestCase;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OrmLiteDbTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAddUser</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tUser u1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy2\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy3\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy4\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy5\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy6\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\ttestList();</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testDeleteUser</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\thelper.getUserDao().deleteById(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUpdateUser</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tUser u1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy-android\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\tu1.setId(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().update(u1);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testList</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tUser u1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy-android\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\tu1.setId(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\tList&lt;User&gt; users = helper.getUserDao().queryForAll();</span><br><span class=\"line\">\t\t\tLog.e(<span class=\"string\">\"TAG\"</span>, users.toString());</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">```</span><br><span class=\"line\">`简单测试`了下CURD，使用`AndroidTestCase`记得配置下环境</span><br></pre></td></tr></table></figure></p>\n<p>用起来是不是还是非常方便的，不过还是建议大家例如User的数据库操作，单独抽取出来为UserDao，如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.db;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.bean.User;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDao</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Context context;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">UserDao</span><span class=\"params\">(Context context)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.context = context;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(User user)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tDatabaseHelper.getHelper(context).getUserDao().create(user);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"comment\">//......</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注：ORMLite还提供了一些基类ORMLiteBaseActivity，ORMLiteBaseService之类的，便于数据库操作的，这里不做考虑，毕竟项目中很大可能自己也需要继承自己的BaseActvity之类的。</p>\n<p>上面简单介绍了如何使用ORMLite框架，<a href=\"http://blog.csdn.net/lmj623565791/article/details/39122981\" target=\"_blank\" rel=\"external\">Android 快速开发系列 ORMLite 框架的使用</a> 将对其用法进行深入的介绍。</p>\n<p>#<a href=\"http://download.csdn.net/detail/lmj623565791/7878003\" target=\"_blank\" rel=\"external\">源码点击下载</a></p>\n","excerpt":"<blockquote>\n<p>本文摘自 <a href=\"http://blog.csdn.net/lmj623565791/article/details/39121377\">鸿神</a>博客,自己偷懒没写,鸿神的写的很详细,他的博客还有 <a href=\"http://blog.csdn.net/lmj623565791/article/details/39122981\">ORMLite 框架最佳实践</a>.</p>\n</blockquote>\n<p>基于鸿神教程运用了ORMLite框架详见我的<a href=\"https://github.com/yangxiaoge/queryCityId\">Github_QueryCityId</a></p>\n<p>转载请标明出处：<a href=\"http://blog.csdn.net/lmj623565791/article/details/39121377\">http://blog.csdn.net/lmj623565791/article/details/39121377</a></p>\n<p>大家在Android项目中或多或少的都会使用数据库，为了提高我们的开发效率，当然少不了数据库ORM框架了，尤其是某些数据库操作特别频繁的app；本篇博客将详细介绍ORMLite的简易用法。<br>","more":"<br>下面开始介绍ORMLite的入门用法~</p>\n<h1 id=\"下载-ORMLite-Jar\"><a href=\"#下载-ORMLite-Jar\" class=\"headerlink\" title=\"下载 ORMLite Jar\"></a>下载 ORMLite Jar</h1><p>首先去<a href=\"http://ormlite.com/releases/\">ORMLite官网下载jar包</a>，对于Android为：<code>ormlite-android-4.48.jar</code> 和 <code>ormlite-core-4.48.jar</code> ；</p>\n<p>ps:访问不了的朋友，文章末尾会把jar、源码、doc与本篇博客例子一起打包提供给大家下载。</p>\n<h1 id=\"配置Bean类\"><a href=\"#配置Bean类\" class=\"headerlink\" title=\"配置Bean类\"></a>配置Bean类</h1><p>有了jar,我们直接新建一个项目为：zhy_ormlite，然后把jar拷贝到libs下。</p>\n<p>然后新建一个包：com.zhy.zhy_ormlite.bean专门用于存放项目中的Bean，首先新建一个<code>User.Java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.bean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.field.DatabaseField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.table.DatabaseTable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@DatabaseTable</span>(tableName = <span class=\"string\">\"tb_user\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@DatabaseField</span>(generatedId = <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">\t<span class=\"meta\">@DatabaseField</span>(columnName = <span class=\"string\">\"name\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"meta\">@DatabaseField</span>(columnName = <span class=\"string\">\"desc\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String desc;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(String name, String desc)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.desc = desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> id;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getDesc</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDesc</span><span class=\"params\">(String desc)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.desc = desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>首先在User类上添加@DatabaseTable(tableName = “tb_user”)，标明这是数据库中的一张表，标明为tb_user<br>然后分别在属性上添加@DatabaseField(columnName = “name”) ，columnName的值为该字段在数据中的列名<br>@DatabaseField(generatedId = true) ，generatedId 表示id为主键且自动生成</p>\n<h1 id=\"编写DAO类\"><a href=\"#编写DAO类\" class=\"headerlink\" title=\"编写DAO类\"></a>编写DAO类</h1><p>原生的数据库操作，需要继承SQLiteOpenHelper，<code>这里</code>我们需要<code>继承OrmLiteSqliteOpenHelper</code>，看代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.db;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.dao.Dao;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.support.ConnectionSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.j256.ormlite.table.TableUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.bean.User;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DatabaseHelper</span> <span class=\"keyword\">extends</span> <span class=\"title\">OrmLiteSqliteOpenHelper</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TABLE_NAME = <span class=\"string\">\"sqlite-test.db\"</span>;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * userDao ，每张表对于一个</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Dao&lt;User, Integer&gt; userDao;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">DatabaseHelper</span><span class=\"params\">(Context context)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(context, TABLE_NAME, <span class=\"keyword\">null</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(SQLiteDatabase database,</span><br><span class=\"line\">\t\t\tConnectionSource connectionSource)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tTableUtils.createTable(connectionSource, User.class);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase database,</span><br><span class=\"line\">\t\t\tConnectionSource connectionSource, <span class=\"keyword\">int</span> oldVersion, <span class=\"keyword\">int</span> newVersion)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tTableUtils.dropTable(connectionSource, User.class, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\tonCreate(database, connectionSource);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DatabaseHelper instance;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * 单例获取该Helper</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * <span class=\"doctag\">@param</span> context</span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span></span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> DatabaseHelper <span class=\"title\">getHelper</span><span class=\"params\">(Context context)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (instance == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">synchronized</span> (DatabaseHelper.class)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (instance == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t\t\t\tinstance = <span class=\"keyword\">new</span> DatabaseHelper(context);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> instance;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * 获得userDao</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span></span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Dao&lt;User, Integer&gt; <span class=\"title\">getUserDao</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (userDao == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tuserDao = getDao(User.class);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> userDao;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * 释放资源</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.close();</span><br><span class=\"line\">\t\tuserDao = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里我们需要继承OrmLiteSqliteOpenHelper，<code>其实</code>就是<code>间接继承</code>了SQLiteOpenHelper<br>然后需要实现两个方法：<br>1、onCreate(SQLiteDatabase database,ConnectionSource connectionSource)<br>创建表，我们直接使用ormlite提供的TableUtils.createTable(connectionSource, User.class);进行创建~<br>2、onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion)<br>更新表，使用ormlite提供的TableUtils.dropTable(connectionSource, User.class, true);进行删除操作~<br>删除完成后，别忘了，创建操作：onCreate(database, connectionSource);</p>\n<p>然后使用单例公布出一个创建实例的方法，getHelper用于获取我们的help实例；<br>最后我们可能会有很多表嘛，每个表一般我们都会单独写个Dao用于操作，这里为了简单我并没有抽取出来，直接写在helper中：<br>比如UserDao的获取：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">\t * 获得userDao</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span></span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Dao&lt;User, Integer&gt; getUserDao() <span class=\"keyword\">throws</span> SQLException</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (userDao == <span class=\"literal\">null</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tuserDao = getDao(User.<span class=\"keyword\">class</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> userDao;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后通过获取到的Dao就可以进行User的一些常用的操作了。</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>最后是<code>测试</code>，我们直接创建了一个<code>测试类</code>进行测试<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.bean.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.db.DatabaseHelper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.test.AndroidTestCase;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OrmLiteDbTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAddUser</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tUser u1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy2\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy3\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy4\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy5\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\tu1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy6\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().create(u1);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\ttestList();</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testDeleteUser</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\thelper.getUserDao().deleteById(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUpdateUser</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tUser u1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy-android\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\tu1.setId(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t\thelper.getUserDao().update(u1);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testList</span><span class=\"params\">()</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabaseHelper helper = DatabaseHelper.getHelper(getContext());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tUser u1 = <span class=\"keyword\">new</span> User(<span class=\"string\">\"zhy-android\"</span>, <span class=\"string\">\"2B青年\"</span>);</span><br><span class=\"line\">\t\t\tu1.setId(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\tList&lt;User&gt; users = helper.getUserDao().queryForAll();</span><br><span class=\"line\">\t\t\tLog.e(<span class=\"string\">\"TAG\"</span>, users.toString());</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">```</span><br><span class=\"line\">`简单测试`了下CURD，使用`AndroidTestCase`记得配置下环境</span><br></pre></td></tr></table></figure></p>\n<p>用起来是不是还是非常方便的，不过还是建议大家例如User的数据库操作，单独抽取出来为UserDao，如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zhy.zhy_ormlite.db;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zhy.zhy_ormlite.bean.User;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDao</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Context context;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">UserDao</span><span class=\"params\">(Context context)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.context = context;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(User user)</span></span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tDatabaseHelper.getHelper(context).getUserDao().create(user);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"comment\">//......</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注：ORMLite还提供了一些基类ORMLiteBaseActivity，ORMLiteBaseService之类的，便于数据库操作的，这里不做考虑，毕竟项目中很大可能自己也需要继承自己的BaseActvity之类的。</p>\n<p>上面简单介绍了如何使用ORMLite框架，<a href=\"http://blog.csdn.net/lmj623565791/article/details/39122981\">Android 快速开发系列 ORMLite 框架的使用</a> 将对其用法进行深入的介绍。</p>\n<p>#<a href=\"http://download.csdn.net/detail/lmj623565791/7878003\">源码点击下载</a></p>"},{"title":"Android shape","date":"2016-06-20T03:25:51.000Z","_content":"\n使用`shape`可以`自定义形状`，可以定义下面`四种类型`的形状，通过`android:shape` `属性`指定：\n1. `rectangle`: `矩形`，`默认的形状`，可以画出直角矩形、圆角矩形、弧形等\n2. `oval`: `椭圆形`，用得比较多的是画正圆\n3. `line`: `线形`，可以画实线和虚线\n4. `ring`: `环形`，可以画环形进度条\n\n`gradient`代表渐变，可以按照如下的使用：\n<!-- more -->\n```\n<gradient\n       android:angle=\"0\"\n       android:centerColor=\"#ff0f00\"\n       android:endColor=\"#ff00ff\"\n       android:startColor=\"#00ff00\" />\n\n```\n\n`solid`代表实心，可以按照如下的使用：\n```\n<stroke\n       android:width=\"10dp\"\n       android:color=\"#00FFFF\"\n       android:dashGap=\"5dp\"\n       android:dashWidth=\"5dp\" />\n```\n\n`corners`代表圆角，可以按照如下的使用：\n```\n<corners android:radius=\"5dp\" />\n```\n\n看下完整的shape(drawable/...xml)文件:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\"  四种类型 >\n    \n    <!-- 渐变 -->\n    <gradient\n        android:angle=\"0\"\n        android:centerColor=\"#ff0f00\"\n        android:endColor=\"#ff00ff\"\n        android:startColor=\"#00ff00\" />\n\n    <!-- 实心 -->\n    <solid android:color=\"#F0FFFF\" />\n\n    <!-- 描边 -->\n    <stroke\n        android:width=\"10dp\"\n        android:color=\"#00FFFF\"\n        android:dashGap=\"5dp\"\n        android:dashWidth=\"5dp\" />\n\n    <!-- 圆角 -->\n    <corners android:radius=\"100dp\" />\n</shape>\n```","source":"_posts/Android-shape.md","raw":"---\ntitle: Android shape\ndate: 2016-06-20 11:25:51\ntags: Android\ncategories: Android\n---\n\n使用`shape`可以`自定义形状`，可以定义下面`四种类型`的形状，通过`android:shape` `属性`指定：\n1. `rectangle`: `矩形`，`默认的形状`，可以画出直角矩形、圆角矩形、弧形等\n2. `oval`: `椭圆形`，用得比较多的是画正圆\n3. `line`: `线形`，可以画实线和虚线\n4. `ring`: `环形`，可以画环形进度条\n\n`gradient`代表渐变，可以按照如下的使用：\n<!-- more -->\n```\n<gradient\n       android:angle=\"0\"\n       android:centerColor=\"#ff0f00\"\n       android:endColor=\"#ff00ff\"\n       android:startColor=\"#00ff00\" />\n\n```\n\n`solid`代表实心，可以按照如下的使用：\n```\n<stroke\n       android:width=\"10dp\"\n       android:color=\"#00FFFF\"\n       android:dashGap=\"5dp\"\n       android:dashWidth=\"5dp\" />\n```\n\n`corners`代表圆角，可以按照如下的使用：\n```\n<corners android:radius=\"5dp\" />\n```\n\n看下完整的shape(drawable/...xml)文件:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\"  四种类型 >\n    \n    <!-- 渐变 -->\n    <gradient\n        android:angle=\"0\"\n        android:centerColor=\"#ff0f00\"\n        android:endColor=\"#ff00ff\"\n        android:startColor=\"#00ff00\" />\n\n    <!-- 实心 -->\n    <solid android:color=\"#F0FFFF\" />\n\n    <!-- 描边 -->\n    <stroke\n        android:width=\"10dp\"\n        android:color=\"#00FFFF\"\n        android:dashGap=\"5dp\"\n        android:dashWidth=\"5dp\" />\n\n    <!-- 圆角 -->\n    <corners android:radius=\"100dp\" />\n</shape>\n```","slug":"Android-shape","published":1,"updated":"2016-06-20T07:28:49.887Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfx50007gwag594c22of","content":"<p>使用<code>shape</code>可以<code>自定义形状</code>，可以定义下面<code>四种类型</code>的形状，通过<code>android:shape</code> <code>属性</code>指定：</p>\n<ol>\n<li><code>rectangle</code>: <code>矩形</code>，<code>默认的形状</code>，可以画出直角矩形、圆角矩形、弧形等</li>\n<li><code>oval</code>: <code>椭圆形</code>，用得比较多的是画正圆</li>\n<li><code>line</code>: <code>线形</code>，可以画实线和虚线</li>\n<li><code>ring</code>: <code>环形</code>，可以画环形进度条</li>\n</ol>\n<p><code>gradient</code>代表渐变，可以按照如下的使用：<br><a id=\"more\"></a><br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;gradient</span><br><span class=\"line\">       android:angle=<span class=\"string\">\"0\"</span></span><br><span class=\"line\">       android:centerColor=<span class=\"string\">\"<span class=\"subst\">#ff0f00</span>\"</span></span><br><span class=\"line\">       android:endColor=<span class=\"string\">\"<span class=\"subst\">#ff00ff</span>\"</span></span><br><span class=\"line\">       android:startColor=<span class=\"string\">\"#00ff00\"</span> /&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>solid</code>代表实心，可以按照如下的使用：<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"built_in\">stroke</span></span><br><span class=\"line\">       android:<span class=\"built_in\">width</span>=<span class=\"string\">\"10dp\"</span></span><br><span class=\"line\">       android:<span class=\"built_in\">color</span>=<span class=\"string\">\"#00FFFF\"</span></span><br><span class=\"line\">       android:dashGap=<span class=\"string\">\"5dp\"</span></span><br><span class=\"line\">       android:dashWidth=<span class=\"string\">\"5dp\"</span> /&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>corners</code>代表圆角，可以按照如下的使用：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"5dp\"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>看下完整的shape(drawable/…xml)文件:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>  四种类型 &gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 渐变 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">gradient</span></span><br><span class=\"line\">        <span class=\"attr\">android:angle</span>=<span class=\"string\">\"0\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:centerColor</span>=<span class=\"string\">\"#ff0f00\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:endColor</span>=<span class=\"string\">\"#ff00ff\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:startColor</span>=<span class=\"string\">\"#00ff00\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 实心 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#F0FFFF\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 描边 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">stroke</span></span><br><span class=\"line\">        <span class=\"attr\">android:width</span>=<span class=\"string\">\"10dp\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:color</span>=<span class=\"string\">\"#00FFFF\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:dashGap</span>=<span class=\"string\">\"5dp\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:dashWidth</span>=<span class=\"string\">\"5dp\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 圆角 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"100dp\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n","excerpt":"<p>使用<code>shape</code>可以<code>自定义形状</code>，可以定义下面<code>四种类型</code>的形状，通过<code>android:shape</code> <code>属性</code>指定：</p>\n<ol>\n<li><code>rectangle</code>: <code>矩形</code>，<code>默认的形状</code>，可以画出直角矩形、圆角矩形、弧形等</li>\n<li><code>oval</code>: <code>椭圆形</code>，用得比较多的是画正圆</li>\n<li><code>line</code>: <code>线形</code>，可以画实线和虚线</li>\n<li><code>ring</code>: <code>环形</code>，可以画环形进度条</li>\n</ol>\n<p><code>gradient</code>代表渐变，可以按照如下的使用：<br>","more":"<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;gradient</span><br><span class=\"line\">       android:angle=<span class=\"string\">\"0\"</span></span><br><span class=\"line\">       android:centerColor=<span class=\"string\">\"<span class=\"subst\">#ff0f00</span>\"</span></span><br><span class=\"line\">       android:endColor=<span class=\"string\">\"<span class=\"subst\">#ff00ff</span>\"</span></span><br><span class=\"line\">       android:startColor=<span class=\"string\">\"#00ff00\"</span> /&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>solid</code>代表实心，可以按照如下的使用：<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"built_in\">stroke</span></span><br><span class=\"line\">       android:<span class=\"built_in\">width</span>=<span class=\"string\">\"10dp\"</span></span><br><span class=\"line\">       android:<span class=\"built_in\">color</span>=<span class=\"string\">\"#00FFFF\"</span></span><br><span class=\"line\">       android:dashGap=<span class=\"string\">\"5dp\"</span></span><br><span class=\"line\">       android:dashWidth=<span class=\"string\">\"5dp\"</span> /&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>corners</code>代表圆角，可以按照如下的使用：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"5dp\"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>看下完整的shape(drawable/…xml)文件:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>  四种类型 &gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 渐变 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">gradient</span></span><br><span class=\"line\">        <span class=\"attr\">android:angle</span>=<span class=\"string\">\"0\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:centerColor</span>=<span class=\"string\">\"#ff0f00\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:endColor</span>=<span class=\"string\">\"#ff00ff\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:startColor</span>=<span class=\"string\">\"#00ff00\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 实心 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#F0FFFF\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 描边 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">stroke</span></span><br><span class=\"line\">        <span class=\"attr\">android:width</span>=<span class=\"string\">\"10dp\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:color</span>=<span class=\"string\">\"#00FFFF\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:dashGap</span>=<span class=\"string\">\"5dp\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:dashWidth</span>=<span class=\"string\">\"5dp\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 圆角 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"100dp\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></p>"},{"title":"Android常用方法摘记以及收集","date":"2016-01-08T02:50:55.000Z","top":100,"_content":"## Android调用微信扫一扫和支付宝扫一扫(2016-9-20 19:01:47)\n摘自:[习惯沉默的Blog\n](https://ydmmocoo.github.io/2016/06/30/Android%E8%B0%83%E7%94%A8%E5%BE%AE%E4%BF%A1%E6%89%AB%E4%B8%80%E6%89%AB%E5%92%8C%E6%94%AF%E4%BB%98%E5%AE%9D%E6%89%AB%E4%B8%80%E6%89%AB/)\n现在微信不能直接跳转到微信扫一扫:详见 [Android调用微信扫一扫_CSDN](http://blog.csdn.net/l_lhc/article/details/51636130)\n## 访问或者下载单个github文件(2016-9-20 18:43:37)\n**用途:**可以用来存一些配置文件,图片等.\nurl固定格式: https://raw.githubusercontent.com/username/repository/branch/filename \n例如: https://raw.githubusercontent.com/yangxiaoge/MumuXi/master/README.md\n> 参考stackoverflow:[Download single files from GitHub](http://stackoverflow.com/questions/4604663/download-single-files-from-github)\n\n<!-- more -->\n\n## Gson构造JsonArray(2016-8-23 16:11:25)\n最近项目中请求参数传参用到了 JsonArray对象\n构造方法如下:\n\n```\n    Object[] object = new Object[]{\"111\", \"222\", \"24G\"};\n    JsonArray jsonArr = new JsonArray();\n    for (Object anObject : object) {\n        JsonObject jo = new JsonObject(); //构造json\n        jo.addProperty(\"offerCode\", (String) anObject);\n        jsonArr.add(jo);\n    }\n    Toast.makeText(this, \"jsonArr:  \" + jsonArr.toString(), Toast.LENGTH_SHORT).show();\n    System.out.println(\"jsonArr:  \" + jsonArr.toString());\n```\n\n\n## LICEcap录制Gif工具(2016-8-2 18:57:50)\n[官网地址](http://www.cockos.com/licecap/)\n\n![录制的gif图](http://www.cockos.com/licecap/licecap_rules.gif)\n\n## 读取Assets( 下面 cityId查询天气 中的是另一种读取方法)目录下文件(`2016-06-12`)\n\n*[例如:](http://www.jianshu.com/p/b87fee2f7a23)*\n\n>简书:http://www.jianshu.com/p/b87fee2f7a23\n\n\n```\nInputStreamReader isr = new InputStreamReader(this.getClass()\n\t\t\t\t\t.getClassLoader()\n\t\t\t\t\t.getResourceAsStream(\"assets/\" + \"student.json\")\n\t\t\t\t\t,\"utf-8\"\n\t\t\t\t\t);\n//从assets获取json文件\nBufferedReader bfr = new BufferedReader(isr);\n```\n\n## cityId查询天气(`2016-6-20 19:00:35`)\n1. citycode.txt是cityid文件(数据 101190101=南京 ) \n2. 下面代码是 逐行根据\"=\"分隔符,读写城市id跟name,可以写到文件中\n\n```\n\t/**\n     * 根据城市名找到对应的id如果没有则说明在中国气象网不存在该城市\n     *\n     * @param cityname\n     * @return\n     */\n    private String findId(String cityname) {\n        if (null == cityname || \"\".equals(cityname))\n            return null;\n        try {\n            InputStreamReader inputReader = new InputStreamReader(getResources().getAssets().open(\"citycode.txt\"));\n            BufferedReader bufReader = new BufferedReader(inputReader);\n            String line = \"\";\n            String[] str = new String[2];\n            while ((line = bufReader.readLine()) != null) {\n                str = line.split(\"=\");\n                if (str.length == 2 && null != str[1] && !\"\".equals(str[1]) && cityname.equals(str[1])) {\n                    //返回对应city编号\n                    return str[0];\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n        return null;\n    }\n```\n\n\n## 双击两次返回键退出 (2秒内退出)\n``` \nprivate long exitTime = 0; // 返回键 退出时间\n /**\n     *  返回键 (2秒内退出)\n     * @param keyCode 返回键code\n     * @param event keyEvent\n     * @return true\n     */\n @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n\n        if (keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_DOWN) {\n            //两秒之内按返回键就会退出\n            if (System.currentTimeMillis() - exitTime > 2000) {\n                Toast.makeText(this, \"再按一次退出\", Toast.LENGTH_SHORT).show();\n                exitTime = System.currentTimeMillis();\n            } else {\n                finish();\n            }\n            return true; // 不要忘记 return true\n        }\n\n        return super.onKeyDown(keyCode, event);\n}\n```\n下面是点击返回键 关闭DrawerLayout等等\n```\n/**\n     * 系统返回键监听,事件处理\n     * @return\n     */\n    @Override\n    public void onBackPressed() {\n        HomeViewPagerFragment homeFragment = null;\n        boolean isDrawerOpen = false;\n        boolean isPopFragment = false;\n        String currentTabTag = mTabHost.getCurrentTabTag();\n\n        String homeName = getResources().getString(MainTab.HOME.getResName());\n\n        String bundleName = getResources().getString(MainTab.BUNDLES.getResName());\n\n        String billName = getResources().getString(MainTab.BILL.getResName());\n\n        if (currentTabTag.equals(bundleName)) {\n            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager().findFragmentByTag(bundleName)).popFragment();\n        } else if (currentTabTag.equals(billName)) {\n            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager().findFragmentByTag(billName)).popFragment();\n        }\n\n        if(currentTabTag.equals(homeName)){\n            homeFragment= ((HomeViewPagerFragment)getSupportFragmentManager().findFragmentByTag(homeName));\n            isDrawerOpen = homeFragment.isDrawerOpen();\n        }\n\n        if(isDrawerOpen){\n            homeFragment.closeDrawer();\n        }else if(!isPopFragment){\n            finish();\n        }\n}\n```\n\n\n\n## RadioButton 点击事件 (`2016-06-08`)\n\n>借助[`ButterKnife`](https://github.com/JakeWharton/butterknife)快速实现\n\n```\n@OnCheckedChanged({R.id.searchRb1, R.id.searchRb2, R.id.searchRb3, R.id.searchRb4})\nvoid onTagChecked(RadioButton searchRb, boolean checked) {\n    if (checked) {\n        //实现代码...\n    }\n}\n```\n\n## 夜神 模拟器连接(`2016-6-22 13:44:46`)\n`流畅度杠杆的!`\n```\nadb connect 127.0.0.1:62001\n```\n`Fiddler抓包设置`: `具体参考`👉[trinea分享](http://www.trinea.cn/android/android-network-sniffer/)\n1)![模拟器抓包配置](http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f567o10j00j209r0ag0t8.jpg)\n2)(实验证明已经不需要这一步了,只要设置好代理服务器主机名就行了!! add 2016-8-16 16:09:01) 模拟器浏览器打开: http://10.45.16.34:8888/(10.45.16.34就是本机地址, 所有模拟器都是这么访问)\n\n## 海马玩 模拟器连接(`2016-06-14`)\n> http://www.jianshu.com/p/c2e6a4e7e9c4/comments/2742091#comment-2742091\n```\nadb connect 127.0.0.1:26944\n```\n`抓包设置`: 代理服务器主机名: 10.0.3.2 (genymotion也是这个), 夜神的是电脑ip\n\n## app启动页面(AlphaAnimation渐变) (`2016-06-14`)\n\n`效果图:`![AlphaAnimation透明到不透明](http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f4x1cf5056g20kb0k3nb0.gif)\n\n> 完整代码如下↓↓↓↓↓↓\n\n\n```\npublic class StartActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        final View view = View.inflate(this, R.layout.activity_start, null);\n        setContentView(view);\n        // 渐变展示启动屏 , 0.0-1.0 透明到不透明\n        AlphaAnimation aa = new AlphaAnimation(0.1f, 1.0f);\n        aa.setDuration(3000);\n        view.startAnimation(aa);\n        aa.setAnimationListener(new Animation.AnimationListener() {\n            @Override\n            public void onAnimationEnd(Animation animation) {\n                // 动画结束跳转登陆界面\n                redirectTo();\n            }\n\n            @Override\n            public void onAnimationRepeat(Animation animation) {\n            }\n\n            @Override\n            public void onAnimationStart(Animation animation) {\n            }\n        });\n    }\n\n    private void redirectTo() {\n        Intent intent = new Intent(this, LoginActivity.class);\n        startActivity(intent);\n        finish();\n    }\n}\n```\n## adapter中setTag()的使用\n\n可以用来当前方法中传数据\n\n```\n\t@Override\n    public View getView(final int position, View convertView, ViewGroup parent) {\n        final ViewHolder holder;\n        if (convertView == null) {\n            holder = new ViewHolder();\n            convertView = LayoutInflater.from(context).inflate(R.layout.temp, parent, false);\n            holder.nameTv = (TextView) convertView.findViewById(R.id.name);\n            holder.group = (RadioGroup) convertView.findViewById(R.id.group);\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n\n        HashMap<String, Object> map = getItem(position);\n        map.put(\"position\", position);\n --->   holder.group.setTag(map); // 通过group视图设置setTag(map)\n\t\t...\n\t\t...\n\t\t...\n ---> \tHashMap<String, Object> radioMap = (HashMap<String, Object>) group.getTag(); // getTag()\n```\n\n## Gson把JsonArray的字符串转成bean实体类\n\n```\n\tString offerItemGroupStr;\n\t\n\tJsonArray array = (JsonArray) new JsonParser().parse(offerItemGroupStr);\n\n    List<OfferItemGroup> offerDepGroupsList = new Gson().fromJson(array.toString(), new TypeToken<List<OfferItemGroup>>() {\n        }.getType());\n```\n\n## [圆形进度条](https://github.com/DmitryMalkovich/circular-with-floating-action-button)(`2016-7-1 13:20:24`)\n![Float Button 圆形进度条效果](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f809mvxj8uj209x0bvq36.jpg)\n\n`week`开源啦!! [alibaba-week入口](https://github.com/alibaba/weex)\n\n## 保存图片到本地文件(2016-7-11 12:35:51)\n参考: [Mumuxi代码](https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/java/com/yang/bruce/mumuxi/util/ImgSaveUtil.java)\n\n```\n/**\n * Created by allen on 2016/6/19.\n *\n *  Here reference is https://github.com/gaolonglong/GankGirl/blob/master/app/src/main/java/com/app/gaolonglong/gankgirl/util/ImageUtil.java\n */\npublic class ImgSaveUtil {\n\n        public static Uri saveImage(Context context, String url, Bitmap bitmap, ImageView imageView, String tag){\n            //妹纸保存路径\n            String imgDir = Environment.getExternalStorageDirectory().getPath() + \"/GankGirl\";\n            //图片名称处理\n            String[] fileNameArr = url.substring(url.lastIndexOf(\"/\") + 1).split(\"\\\\.\");\n            String fileName = fileNameArr[0] + \".png\";\n            //创建文件路径\n            File fileDir = new File(imgDir);\n            if (!fileDir.exists()){\n                fileDir.mkdir();\n            }\n            //创建文件\n            File imageFile = new File(fileDir,fileName);\n            try {\n                FileOutputStream fos = new FileOutputStream(imageFile);\n                boolean compress = bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);\n                Snackbar.make(imageView,\"妹纸已经躺在你的图库里啦.. ( ＞ω＜)\", Snackbar.LENGTH_SHORT).show();\n\n                fos.flush();\n                fos.close();\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            Uri uri = Uri.fromFile(imageFile);\n            //发送广播，通知图库更新\n            context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE,uri));\n            return uri;\n        }\n}\n```\n\n## 样式统一设置 (2016-7-12 15:06:40)\n>例如:\n\n```\n <!--全边框 输入框样式-->\n    <style name=\"edittext_style\">\n        <item name=\"android:layout_width\">match_parent</item>\n        <item name=\"android:layout_height\">wrap_content</item>\n        <item name=\"android:layout_marginLeft\">@dimen/space_20</item>\n        <item name=\"android:layout_marginRight\">@dimen/space_20</item>\n        <item name=\"android:layout_marginTop\">@dimen/space_10</item>\n        <item name=\"android:background\">@drawable/input_bg</item>\n        <item name=\"android:singleLine\">true</item>\n    </style>\n\n    <!--只有底边边框 输入框样式-->\n    <style name=\"edittext_style1\" parent=\"edittext_style\">\n        <item name=\"android:background\">?attr/editTextBackground</item>\n    </style>\n```\n\n## touch事件监听之tab页再次点击刷新数据 (2016-7-15 14:23:06)\n\n>具体可以看 开源中国源码: [MainActivity](http://git.oschina.net/oschina/android-app/blob/v2.6.3/app/src/main/java/net/oschina/app/ui/MainActivity.java?dir=0&filepath=app%2Fsrc%2Fmain%2Fjava%2Fnet%2Foschina%2Fapp%2Fui%2FMainActivity.java&oid=b7ab17b172b074e42015b3f5d806473216aec919&sha=0e04398d8fd738c25abf7a0a61f988d15cbf2a08)中\n\n```\n @Override\n    public boolean onTouch(View v, MotionEvent event) {\n        super.onTouchEvent(event);\n        boolean consumed = false;\n        // use getTabHost().getCurrentTabView to decide if the current tab is\n        // touched again\n        if (event.getAction() == MotionEvent.ACTION_DOWN\n                && v.equals(mTabHost.getCurrentTabView())) {\n            // use getTabHost().getCurrentView() to get a handle to the view\n            // which is displayed in the tab - and to get this views context\n            Fragment currentFragment = getCurrentFragment();\n            if (currentFragment != null\n                    && currentFragment instanceof OnTabReselectListener) {\n                OnTabReselectListener listener = (OnTabReselectListener) currentFragment;\n                listener.onTabReselect();\n                consumed = true;\n            }\n        }\n        return consumed;\n    }\n```\n\n## ProgressDialog使用:例如登录等待时 (2016-7-15 14:55:24)\n`下面的代码可以参考 Afrimax或者MPT的[BaseActivity](https://coding.net/u/yangxiaoge/p/AfrimaxMI/git/blob/master/app/src/main/java/com/ztesoft/zsmart/datamall/app/base/BaseActivity.java)`\n\n```\n// =======================DIALOG_CONTROL_INTERFACE START========================\n\n    // dialog 是否处于可见状态\n    private boolean _isVisible;\n\n    private ProgressDialog _waitDialog;\n\n    @Override\n    public void hideWaitDialog() {\n        if (_isVisible && _waitDialog != null) {\n            try {\n                _waitDialog.dismiss();\n                _waitDialog = null;\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n        }\n    }\n\n    @Override\n    public ProgressDialog showWaitDialog() {\n        return showWaitDialog(R.string.loading);\n    }\n\n    @Override\n    public ProgressDialog showWaitDialog(int resid) {\n        return showWaitDialog(getString(resid));\n    }\n\n    /**\n     * 显示耗时操作等待弹出框\n     *\n     * @param message 提示消息\n     * @return ProgressDialog\n     */\n    @Override\n    public ProgressDialog showWaitDialog(String message) {\n        if (_isVisible) {\n            if (_waitDialog == null) {\n                _waitDialog = DialogHelp.getWaitDialog(this, message);\n            } else if (_waitDialog != null) {\n                _waitDialog.setMessage(message);\n            }\n            _waitDialog.show();\n            return _waitDialog;\n        }\n        return null;\n    }\n\n\n    // =======================DIALOG_CONTROL_INTERFACE END==========================\n```\n\n## 远程调试App或者WiFi调试(2016-7-19 19:34:09)\n>http://www.jianshu.com/p/e9c243b5060b\n\n![效果图](http://upload-images.jianshu.io/upload_images/721315-6978db5b6f2c1c75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/400)\n\n## ScrollView初始化数据时不置顶(2016-7-20 16:36:01)\n>ScrollView布局设置一个属性即可!如果不设置,那么默认显示位置在ListView(等等..)底部\n具体可以参考: [ScrollView嵌套ListView不置顶显示](http://blog.csdn.net/ronaldong99/article/details/50736423)\n```\nmScrollView.smoothScrollTo(0, 0);\n```\n\n## 使用BroadCast发送广播,通知home页刷新数据(2016-7-29 13:05:32)\n```\n //----------------发送广播 , intent传值--------------//\n private void sendRefreshAccountBroadcast() {\n        Intent intent = new Intent(Constants.REFRESH_HOME_ACCOUNT_LIST);\n        intent.putExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, true);\n        getBaseContext().sendBroadcast(intent);\n    }\n\t\n\t\n\n//----------------------接收广播 start------------------//\n private final BroadcastReceiver mReceiver = new BroadcastReceiver() {\n        @Override\n        public void onReceive(Context context, Intent intent) {\n            if (intent.getBooleanExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, false)) {\n                // 刷新数据\n\t\t\t\tinitExpendListViewData();\n            }\n        }\n    };\n\n\t\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        // 注册广播监听\n        IntentFilter filter = new IntentFilter(Constants.REFRESH_HOME_ACCOUNT_LIST);\n        getActivity().registerReceiver(mReceiver, filter);\n    }\n//-------------------接收广播 end------------------------//\n\t\n\n```\n\n## EditText数据监听!登录模块,动态搜索模块等(2016-7-30 14:29:58)\n```\n\tetUsertel.addTextChangedListener(new TextChange());\n    etPassword.addTextChangedListener(new TextChange());\n\n\t// EditText监听器\n    class TextChange implements TextWatcher {\n\n        @Override\n        public void afterTextChanged(Editable arg0) {\n\n        }\n\n        @Override\n        public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,\n                int arg3) {\n\n        }\n\n        @Override\n        public void onTextChanged(CharSequence cs, int start, int before,\n                int count) {\n\n            boolean Sign2 = et_usertel.getText().length() > 0;\n            boolean Sign3 = et_password.getText().length() > 0;\n\n\t\t\t// 设置登录按钮的颜色,以及是否可点击!\n            if (Sign2 & Sign3) {\n                btnLogin.setTextColor(0xFFFFFFFF);\n                btnLogin.setEnabled(true);\n            }\n            // 在layout文件中，对Button的text属性应预先设置默认值，否则刚打开程序的时候Button是无显示的\n            else {\n                btnLogin.setTextColor(0xFFD0EFC6);\n                btnLogin.setEnabled(false);\n            }\n        }\n\n    }\n```\n\n## AS快捷键(2016-8-2 18:58:02)\n![android_studio快捷键](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkhxh18yj214k0pw4bs.jpg)\n","source":"_posts/Android-常用方法摘记.md","raw":"---\ntitle: Android常用方法摘记以及收集\ndate: 2016-01-08 10:50:55\ntags: Android\ncategories: Android\ntop: 100\n---\n## Android调用微信扫一扫和支付宝扫一扫(2016-9-20 19:01:47)\n摘自:[习惯沉默的Blog\n](https://ydmmocoo.github.io/2016/06/30/Android%E8%B0%83%E7%94%A8%E5%BE%AE%E4%BF%A1%E6%89%AB%E4%B8%80%E6%89%AB%E5%92%8C%E6%94%AF%E4%BB%98%E5%AE%9D%E6%89%AB%E4%B8%80%E6%89%AB/)\n现在微信不能直接跳转到微信扫一扫:详见 [Android调用微信扫一扫_CSDN](http://blog.csdn.net/l_lhc/article/details/51636130)\n## 访问或者下载单个github文件(2016-9-20 18:43:37)\n**用途:**可以用来存一些配置文件,图片等.\nurl固定格式: https://raw.githubusercontent.com/username/repository/branch/filename \n例如: https://raw.githubusercontent.com/yangxiaoge/MumuXi/master/README.md\n> 参考stackoverflow:[Download single files from GitHub](http://stackoverflow.com/questions/4604663/download-single-files-from-github)\n\n<!-- more -->\n\n## Gson构造JsonArray(2016-8-23 16:11:25)\n最近项目中请求参数传参用到了 JsonArray对象\n构造方法如下:\n\n```\n    Object[] object = new Object[]{\"111\", \"222\", \"24G\"};\n    JsonArray jsonArr = new JsonArray();\n    for (Object anObject : object) {\n        JsonObject jo = new JsonObject(); //构造json\n        jo.addProperty(\"offerCode\", (String) anObject);\n        jsonArr.add(jo);\n    }\n    Toast.makeText(this, \"jsonArr:  \" + jsonArr.toString(), Toast.LENGTH_SHORT).show();\n    System.out.println(\"jsonArr:  \" + jsonArr.toString());\n```\n\n\n## LICEcap录制Gif工具(2016-8-2 18:57:50)\n[官网地址](http://www.cockos.com/licecap/)\n\n![录制的gif图](http://www.cockos.com/licecap/licecap_rules.gif)\n\n## 读取Assets( 下面 cityId查询天气 中的是另一种读取方法)目录下文件(`2016-06-12`)\n\n*[例如:](http://www.jianshu.com/p/b87fee2f7a23)*\n\n>简书:http://www.jianshu.com/p/b87fee2f7a23\n\n\n```\nInputStreamReader isr = new InputStreamReader(this.getClass()\n\t\t\t\t\t.getClassLoader()\n\t\t\t\t\t.getResourceAsStream(\"assets/\" + \"student.json\")\n\t\t\t\t\t,\"utf-8\"\n\t\t\t\t\t);\n//从assets获取json文件\nBufferedReader bfr = new BufferedReader(isr);\n```\n\n## cityId查询天气(`2016-6-20 19:00:35`)\n1. citycode.txt是cityid文件(数据 101190101=南京 ) \n2. 下面代码是 逐行根据\"=\"分隔符,读写城市id跟name,可以写到文件中\n\n```\n\t/**\n     * 根据城市名找到对应的id如果没有则说明在中国气象网不存在该城市\n     *\n     * @param cityname\n     * @return\n     */\n    private String findId(String cityname) {\n        if (null == cityname || \"\".equals(cityname))\n            return null;\n        try {\n            InputStreamReader inputReader = new InputStreamReader(getResources().getAssets().open(\"citycode.txt\"));\n            BufferedReader bufReader = new BufferedReader(inputReader);\n            String line = \"\";\n            String[] str = new String[2];\n            while ((line = bufReader.readLine()) != null) {\n                str = line.split(\"=\");\n                if (str.length == 2 && null != str[1] && !\"\".equals(str[1]) && cityname.equals(str[1])) {\n                    //返回对应city编号\n                    return str[0];\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n        return null;\n    }\n```\n\n\n## 双击两次返回键退出 (2秒内退出)\n``` \nprivate long exitTime = 0; // 返回键 退出时间\n /**\n     *  返回键 (2秒内退出)\n     * @param keyCode 返回键code\n     * @param event keyEvent\n     * @return true\n     */\n @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n\n        if (keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_DOWN) {\n            //两秒之内按返回键就会退出\n            if (System.currentTimeMillis() - exitTime > 2000) {\n                Toast.makeText(this, \"再按一次退出\", Toast.LENGTH_SHORT).show();\n                exitTime = System.currentTimeMillis();\n            } else {\n                finish();\n            }\n            return true; // 不要忘记 return true\n        }\n\n        return super.onKeyDown(keyCode, event);\n}\n```\n下面是点击返回键 关闭DrawerLayout等等\n```\n/**\n     * 系统返回键监听,事件处理\n     * @return\n     */\n    @Override\n    public void onBackPressed() {\n        HomeViewPagerFragment homeFragment = null;\n        boolean isDrawerOpen = false;\n        boolean isPopFragment = false;\n        String currentTabTag = mTabHost.getCurrentTabTag();\n\n        String homeName = getResources().getString(MainTab.HOME.getResName());\n\n        String bundleName = getResources().getString(MainTab.BUNDLES.getResName());\n\n        String billName = getResources().getString(MainTab.BILL.getResName());\n\n        if (currentTabTag.equals(bundleName)) {\n            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager().findFragmentByTag(bundleName)).popFragment();\n        } else if (currentTabTag.equals(billName)) {\n            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager().findFragmentByTag(billName)).popFragment();\n        }\n\n        if(currentTabTag.equals(homeName)){\n            homeFragment= ((HomeViewPagerFragment)getSupportFragmentManager().findFragmentByTag(homeName));\n            isDrawerOpen = homeFragment.isDrawerOpen();\n        }\n\n        if(isDrawerOpen){\n            homeFragment.closeDrawer();\n        }else if(!isPopFragment){\n            finish();\n        }\n}\n```\n\n\n\n## RadioButton 点击事件 (`2016-06-08`)\n\n>借助[`ButterKnife`](https://github.com/JakeWharton/butterknife)快速实现\n\n```\n@OnCheckedChanged({R.id.searchRb1, R.id.searchRb2, R.id.searchRb3, R.id.searchRb4})\nvoid onTagChecked(RadioButton searchRb, boolean checked) {\n    if (checked) {\n        //实现代码...\n    }\n}\n```\n\n## 夜神 模拟器连接(`2016-6-22 13:44:46`)\n`流畅度杠杆的!`\n```\nadb connect 127.0.0.1:62001\n```\n`Fiddler抓包设置`: `具体参考`👉[trinea分享](http://www.trinea.cn/android/android-network-sniffer/)\n1)![模拟器抓包配置](http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f567o10j00j209r0ag0t8.jpg)\n2)(实验证明已经不需要这一步了,只要设置好代理服务器主机名就行了!! add 2016-8-16 16:09:01) 模拟器浏览器打开: http://10.45.16.34:8888/(10.45.16.34就是本机地址, 所有模拟器都是这么访问)\n\n## 海马玩 模拟器连接(`2016-06-14`)\n> http://www.jianshu.com/p/c2e6a4e7e9c4/comments/2742091#comment-2742091\n```\nadb connect 127.0.0.1:26944\n```\n`抓包设置`: 代理服务器主机名: 10.0.3.2 (genymotion也是这个), 夜神的是电脑ip\n\n## app启动页面(AlphaAnimation渐变) (`2016-06-14`)\n\n`效果图:`![AlphaAnimation透明到不透明](http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f4x1cf5056g20kb0k3nb0.gif)\n\n> 完整代码如下↓↓↓↓↓↓\n\n\n```\npublic class StartActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        final View view = View.inflate(this, R.layout.activity_start, null);\n        setContentView(view);\n        // 渐变展示启动屏 , 0.0-1.0 透明到不透明\n        AlphaAnimation aa = new AlphaAnimation(0.1f, 1.0f);\n        aa.setDuration(3000);\n        view.startAnimation(aa);\n        aa.setAnimationListener(new Animation.AnimationListener() {\n            @Override\n            public void onAnimationEnd(Animation animation) {\n                // 动画结束跳转登陆界面\n                redirectTo();\n            }\n\n            @Override\n            public void onAnimationRepeat(Animation animation) {\n            }\n\n            @Override\n            public void onAnimationStart(Animation animation) {\n            }\n        });\n    }\n\n    private void redirectTo() {\n        Intent intent = new Intent(this, LoginActivity.class);\n        startActivity(intent);\n        finish();\n    }\n}\n```\n## adapter中setTag()的使用\n\n可以用来当前方法中传数据\n\n```\n\t@Override\n    public View getView(final int position, View convertView, ViewGroup parent) {\n        final ViewHolder holder;\n        if (convertView == null) {\n            holder = new ViewHolder();\n            convertView = LayoutInflater.from(context).inflate(R.layout.temp, parent, false);\n            holder.nameTv = (TextView) convertView.findViewById(R.id.name);\n            holder.group = (RadioGroup) convertView.findViewById(R.id.group);\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n\n        HashMap<String, Object> map = getItem(position);\n        map.put(\"position\", position);\n --->   holder.group.setTag(map); // 通过group视图设置setTag(map)\n\t\t...\n\t\t...\n\t\t...\n ---> \tHashMap<String, Object> radioMap = (HashMap<String, Object>) group.getTag(); // getTag()\n```\n\n## Gson把JsonArray的字符串转成bean实体类\n\n```\n\tString offerItemGroupStr;\n\t\n\tJsonArray array = (JsonArray) new JsonParser().parse(offerItemGroupStr);\n\n    List<OfferItemGroup> offerDepGroupsList = new Gson().fromJson(array.toString(), new TypeToken<List<OfferItemGroup>>() {\n        }.getType());\n```\n\n## [圆形进度条](https://github.com/DmitryMalkovich/circular-with-floating-action-button)(`2016-7-1 13:20:24`)\n![Float Button 圆形进度条效果](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f809mvxj8uj209x0bvq36.jpg)\n\n`week`开源啦!! [alibaba-week入口](https://github.com/alibaba/weex)\n\n## 保存图片到本地文件(2016-7-11 12:35:51)\n参考: [Mumuxi代码](https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/java/com/yang/bruce/mumuxi/util/ImgSaveUtil.java)\n\n```\n/**\n * Created by allen on 2016/6/19.\n *\n *  Here reference is https://github.com/gaolonglong/GankGirl/blob/master/app/src/main/java/com/app/gaolonglong/gankgirl/util/ImageUtil.java\n */\npublic class ImgSaveUtil {\n\n        public static Uri saveImage(Context context, String url, Bitmap bitmap, ImageView imageView, String tag){\n            //妹纸保存路径\n            String imgDir = Environment.getExternalStorageDirectory().getPath() + \"/GankGirl\";\n            //图片名称处理\n            String[] fileNameArr = url.substring(url.lastIndexOf(\"/\") + 1).split(\"\\\\.\");\n            String fileName = fileNameArr[0] + \".png\";\n            //创建文件路径\n            File fileDir = new File(imgDir);\n            if (!fileDir.exists()){\n                fileDir.mkdir();\n            }\n            //创建文件\n            File imageFile = new File(fileDir,fileName);\n            try {\n                FileOutputStream fos = new FileOutputStream(imageFile);\n                boolean compress = bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);\n                Snackbar.make(imageView,\"妹纸已经躺在你的图库里啦.. ( ＞ω＜)\", Snackbar.LENGTH_SHORT).show();\n\n                fos.flush();\n                fos.close();\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            Uri uri = Uri.fromFile(imageFile);\n            //发送广播，通知图库更新\n            context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE,uri));\n            return uri;\n        }\n}\n```\n\n## 样式统一设置 (2016-7-12 15:06:40)\n>例如:\n\n```\n <!--全边框 输入框样式-->\n    <style name=\"edittext_style\">\n        <item name=\"android:layout_width\">match_parent</item>\n        <item name=\"android:layout_height\">wrap_content</item>\n        <item name=\"android:layout_marginLeft\">@dimen/space_20</item>\n        <item name=\"android:layout_marginRight\">@dimen/space_20</item>\n        <item name=\"android:layout_marginTop\">@dimen/space_10</item>\n        <item name=\"android:background\">@drawable/input_bg</item>\n        <item name=\"android:singleLine\">true</item>\n    </style>\n\n    <!--只有底边边框 输入框样式-->\n    <style name=\"edittext_style1\" parent=\"edittext_style\">\n        <item name=\"android:background\">?attr/editTextBackground</item>\n    </style>\n```\n\n## touch事件监听之tab页再次点击刷新数据 (2016-7-15 14:23:06)\n\n>具体可以看 开源中国源码: [MainActivity](http://git.oschina.net/oschina/android-app/blob/v2.6.3/app/src/main/java/net/oschina/app/ui/MainActivity.java?dir=0&filepath=app%2Fsrc%2Fmain%2Fjava%2Fnet%2Foschina%2Fapp%2Fui%2FMainActivity.java&oid=b7ab17b172b074e42015b3f5d806473216aec919&sha=0e04398d8fd738c25abf7a0a61f988d15cbf2a08)中\n\n```\n @Override\n    public boolean onTouch(View v, MotionEvent event) {\n        super.onTouchEvent(event);\n        boolean consumed = false;\n        // use getTabHost().getCurrentTabView to decide if the current tab is\n        // touched again\n        if (event.getAction() == MotionEvent.ACTION_DOWN\n                && v.equals(mTabHost.getCurrentTabView())) {\n            // use getTabHost().getCurrentView() to get a handle to the view\n            // which is displayed in the tab - and to get this views context\n            Fragment currentFragment = getCurrentFragment();\n            if (currentFragment != null\n                    && currentFragment instanceof OnTabReselectListener) {\n                OnTabReselectListener listener = (OnTabReselectListener) currentFragment;\n                listener.onTabReselect();\n                consumed = true;\n            }\n        }\n        return consumed;\n    }\n```\n\n## ProgressDialog使用:例如登录等待时 (2016-7-15 14:55:24)\n`下面的代码可以参考 Afrimax或者MPT的[BaseActivity](https://coding.net/u/yangxiaoge/p/AfrimaxMI/git/blob/master/app/src/main/java/com/ztesoft/zsmart/datamall/app/base/BaseActivity.java)`\n\n```\n// =======================DIALOG_CONTROL_INTERFACE START========================\n\n    // dialog 是否处于可见状态\n    private boolean _isVisible;\n\n    private ProgressDialog _waitDialog;\n\n    @Override\n    public void hideWaitDialog() {\n        if (_isVisible && _waitDialog != null) {\n            try {\n                _waitDialog.dismiss();\n                _waitDialog = null;\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n        }\n    }\n\n    @Override\n    public ProgressDialog showWaitDialog() {\n        return showWaitDialog(R.string.loading);\n    }\n\n    @Override\n    public ProgressDialog showWaitDialog(int resid) {\n        return showWaitDialog(getString(resid));\n    }\n\n    /**\n     * 显示耗时操作等待弹出框\n     *\n     * @param message 提示消息\n     * @return ProgressDialog\n     */\n    @Override\n    public ProgressDialog showWaitDialog(String message) {\n        if (_isVisible) {\n            if (_waitDialog == null) {\n                _waitDialog = DialogHelp.getWaitDialog(this, message);\n            } else if (_waitDialog != null) {\n                _waitDialog.setMessage(message);\n            }\n            _waitDialog.show();\n            return _waitDialog;\n        }\n        return null;\n    }\n\n\n    // =======================DIALOG_CONTROL_INTERFACE END==========================\n```\n\n## 远程调试App或者WiFi调试(2016-7-19 19:34:09)\n>http://www.jianshu.com/p/e9c243b5060b\n\n![效果图](http://upload-images.jianshu.io/upload_images/721315-6978db5b6f2c1c75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/400)\n\n## ScrollView初始化数据时不置顶(2016-7-20 16:36:01)\n>ScrollView布局设置一个属性即可!如果不设置,那么默认显示位置在ListView(等等..)底部\n具体可以参考: [ScrollView嵌套ListView不置顶显示](http://blog.csdn.net/ronaldong99/article/details/50736423)\n```\nmScrollView.smoothScrollTo(0, 0);\n```\n\n## 使用BroadCast发送广播,通知home页刷新数据(2016-7-29 13:05:32)\n```\n //----------------发送广播 , intent传值--------------//\n private void sendRefreshAccountBroadcast() {\n        Intent intent = new Intent(Constants.REFRESH_HOME_ACCOUNT_LIST);\n        intent.putExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, true);\n        getBaseContext().sendBroadcast(intent);\n    }\n\t\n\t\n\n//----------------------接收广播 start------------------//\n private final BroadcastReceiver mReceiver = new BroadcastReceiver() {\n        @Override\n        public void onReceive(Context context, Intent intent) {\n            if (intent.getBooleanExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, false)) {\n                // 刷新数据\n\t\t\t\tinitExpendListViewData();\n            }\n        }\n    };\n\n\t\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        // 注册广播监听\n        IntentFilter filter = new IntentFilter(Constants.REFRESH_HOME_ACCOUNT_LIST);\n        getActivity().registerReceiver(mReceiver, filter);\n    }\n//-------------------接收广播 end------------------------//\n\t\n\n```\n\n## EditText数据监听!登录模块,动态搜索模块等(2016-7-30 14:29:58)\n```\n\tetUsertel.addTextChangedListener(new TextChange());\n    etPassword.addTextChangedListener(new TextChange());\n\n\t// EditText监听器\n    class TextChange implements TextWatcher {\n\n        @Override\n        public void afterTextChanged(Editable arg0) {\n\n        }\n\n        @Override\n        public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,\n                int arg3) {\n\n        }\n\n        @Override\n        public void onTextChanged(CharSequence cs, int start, int before,\n                int count) {\n\n            boolean Sign2 = et_usertel.getText().length() > 0;\n            boolean Sign3 = et_password.getText().length() > 0;\n\n\t\t\t// 设置登录按钮的颜色,以及是否可点击!\n            if (Sign2 & Sign3) {\n                btnLogin.setTextColor(0xFFFFFFFF);\n                btnLogin.setEnabled(true);\n            }\n            // 在layout文件中，对Button的text属性应预先设置默认值，否则刚打开程序的时候Button是无显示的\n            else {\n                btnLogin.setTextColor(0xFFD0EFC6);\n                btnLogin.setEnabled(false);\n            }\n        }\n\n    }\n```\n\n## AS快捷键(2016-8-2 18:58:02)\n![android_studio快捷键](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkhxh18yj214k0pw4bs.jpg)\n","slug":"Android-常用方法摘记","published":1,"updated":"2016-09-21T02:07:00.297Z","_id":"citbcwfxe0009gwag5axl8y27","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Android调用微信扫一扫和支付宝扫一扫-2016-9-20-19-01-47\"><a href=\"#Android调用微信扫一扫和支付宝扫一扫-2016-9-20-19-01-47\" class=\"headerlink\" title=\"Android调用微信扫一扫和支付宝扫一扫(2016-9-20 19:01:47)\"></a>Android调用微信扫一扫和支付宝扫一扫(2016-9-20 19:01:47)</h2><p>摘自:<a href=\"https://ydmmocoo.github.io/2016/06/30/Android%E8%B0%83%E7%94%A8%E5%BE%AE%E4%BF%A1%E6%89%AB%E4%B8%80%E6%89%AB%E5%92%8C%E6%94%AF%E4%BB%98%E5%AE%9D%E6%89%AB%E4%B8%80%E6%89%AB/\" target=\"_blank\" rel=\"external\">习惯沉默的Blog\n</a><br>现在微信不能直接跳转到微信扫一扫:详见 <a href=\"http://blog.csdn.net/l_lhc/article/details/51636130\" target=\"_blank\" rel=\"external\">Android调用微信扫一扫_CSDN</a></p>\n<h2 id=\"访问或者下载单个github文件-2016-9-20-18-43-37\"><a href=\"#访问或者下载单个github文件-2016-9-20-18-43-37\" class=\"headerlink\" title=\"访问或者下载单个github文件(2016-9-20 18:43:37)\"></a>访问或者下载单个github文件(2016-9-20 18:43:37)</h2><p><strong>用途:</strong>可以用来存一些配置文件,图片等.<br>url固定格式: <a href=\"https://raw.githubusercontent.com/username/repository/branch/filename\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/username/repository/branch/filename</a><br>例如: <a href=\"https://raw.githubusercontent.com/yangxiaoge/MumuXi/master/README.md\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/yangxiaoge/MumuXi/master/README.md</a></p>\n<blockquote>\n<p>参考stackoverflow:<a href=\"http://stackoverflow.com/questions/4604663/download-single-files-from-github\" target=\"_blank\" rel=\"external\">Download single files from GitHub</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"Gson构造JsonArray-2016-8-23-16-11-25\"><a href=\"#Gson构造JsonArray-2016-8-23-16-11-25\" class=\"headerlink\" title=\"Gson构造JsonArray(2016-8-23 16:11:25)\"></a>Gson构造JsonArray(2016-8-23 16:11:25)</h2><p>最近项目中请求参数传参用到了 JsonArray对象<br>构造方法如下:</p>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Object</span>[] object = <span class=\"keyword\">new</span> <span class=\"keyword\">Object</span>[]&#123;<span class=\"string\">\"111\"</span>, <span class=\"string\">\"222\"</span>, <span class=\"string\">\"24G\"</span>&#125;;</span><br><span class=\"line\">JsonArray jsonArr = <span class=\"keyword\">new</span> JsonArray();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">Object</span> anObject : object) &#123;</span><br><span class=\"line\">    JsonObject jo = <span class=\"keyword\">new</span> JsonObject(); <span class=\"comment\">//构造json</span></span><br><span class=\"line\">    jo.addProperty(<span class=\"string\">\"offerCode\"</span>, (<span class=\"keyword\">String</span>) anObject);</span><br><span class=\"line\">    jsonArr.<span class=\"built_in\">add</span>(jo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Toast.makeText(<span class=\"keyword\">this</span>, <span class=\"string\">\"jsonArr:  \"</span> + jsonArr.toString(), Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"jsonArr:  \"</span> + jsonArr.toString());</span><br></pre></td></tr></table></figure>\n<h2 id=\"LICEcap录制Gif工具-2016-8-2-18-57-50\"><a href=\"#LICEcap录制Gif工具-2016-8-2-18-57-50\" class=\"headerlink\" title=\"LICEcap录制Gif工具(2016-8-2 18:57:50)\"></a>LICEcap录制Gif工具(2016-8-2 18:57:50)</h2><p><a href=\"http://www.cockos.com/licecap/\" target=\"_blank\" rel=\"external\">官网地址</a></p>\n<p><img src=\"http://www.cockos.com/licecap/licecap_rules.gif\" alt=\"录制的gif图\"></p>\n<h2 id=\"读取Assets-下面-cityId查询天气-中的是另一种读取方法-目录下文件-2016-06-12\"><a href=\"#读取Assets-下面-cityId查询天气-中的是另一种读取方法-目录下文件-2016-06-12\" class=\"headerlink\" title=\"读取Assets( 下面 cityId查询天气 中的是另一种读取方法)目录下文件(2016-06-12)\"></a>读取Assets( 下面 cityId查询天气 中的是另一种读取方法)目录下文件(<code>2016-06-12</code>)</h2><p><em><a href=\"http://www.jianshu.com/p/b87fee2f7a23\" target=\"_blank\" rel=\"external\">例如:</a></em></p>\n<blockquote>\n<p>简书:<a href=\"http://www.jianshu.com/p/b87fee2f7a23\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/b87fee2f7a23</a></p>\n</blockquote>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">InputStreamReader isr = <span class=\"keyword\">new</span> InputStreamReader(<span class=\"keyword\">this</span>.getClass()</span><br><span class=\"line\">\t\t\t\t\t.getClassLoader()</span><br><span class=\"line\">\t\t\t\t\t.getResourceAsStream(<span class=\"string\">\"assets/\"</span> + <span class=\"string\">\"student.json\"</span>)</span><br><span class=\"line\">\t\t\t\t\t,<span class=\"string\">\"utf-8\"</span></span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\"><span class=\"comment\">//从assets获取json文件</span></span><br><span class=\"line\"><span class=\"keyword\">BufferedReader</span> bfr = <span class=\"keyword\">new</span> <span class=\"keyword\">BufferedReader</span>(isr);</span><br></pre></td></tr></table></figure>\n<h2 id=\"cityId查询天气-2016-6-20-19-00-35\"><a href=\"#cityId查询天气-2016-6-20-19-00-35\" class=\"headerlink\" title=\"cityId查询天气(2016-6-20 19:00:35)\"></a>cityId查询天气(<code>2016-6-20 19:00:35</code>)</h2><ol>\n<li>citycode.txt是cityid文件(数据 101190101=南京 ) </li>\n<li>下面代码是 逐行根据”=”分隔符,读写城市id跟name,可以写到文件中</li>\n</ol>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">    * 根据城市名找到对应的id如果没有则说明在中国气象网不存在该城市</span><br><span class=\"line\">    *</span><br><span class=\"line\">    * @param cityname</span><br><span class=\"line\">    * @return</span><br><span class=\"line\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> findId(<span class=\"keyword\">String</span> cityname) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == cityname || <span class=\"string\">\"\"</span>.equals(cityname))</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">       <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">           InputStreamReader inputReader = <span class=\"keyword\">new</span> InputStreamReader(getResources().getAssets().<span class=\"built_in\">open</span>(<span class=\"string\">\"citycode.txt\"</span>));</span><br><span class=\"line\">           <span class=\"keyword\">BufferedReader</span> bufReader = <span class=\"keyword\">new</span> <span class=\"keyword\">BufferedReader</span>(inputReader);</span><br><span class=\"line\">           <span class=\"keyword\">String</span> <span class=\"built_in\">line</span> = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">           <span class=\"keyword\">String</span>[] <span class=\"built_in\">str</span> = <span class=\"keyword\">new</span> <span class=\"keyword\">String</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">           <span class=\"keyword\">while</span> ((<span class=\"built_in\">line</span> = bufReader.readLine()) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">               <span class=\"built_in\">str</span> = <span class=\"built_in\">line</span>.<span class=\"built_in\">split</span>(<span class=\"string\">\"=\"</span>);</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (<span class=\"built_in\">str</span>.length == <span class=\"number\">2</span> &amp;&amp; <span class=\"keyword\">null</span> != <span class=\"built_in\">str</span>[<span class=\"number\">1</span>] &amp;&amp; !<span class=\"string\">\"\"</span>.equals(<span class=\"built_in\">str</span>[<span class=\"number\">1</span>]) &amp;&amp; cityname.equals(<span class=\"built_in\">str</span>[<span class=\"number\">1</span>])) &#123;</span><br><span class=\"line\">                   <span class=\"comment\">//返回对应city编号</span></span><br><span class=\"line\">                   <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">           e.printStackTrace();</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"双击两次返回键退出-2秒内退出\"><a href=\"#双击两次返回键退出-2秒内退出\" class=\"headerlink\" title=\"双击两次返回键退出 (2秒内退出)\"></a>双击两次返回键退出 (2秒内退出)</h2><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">long</span> exitTime = <span class=\"number\">0</span>; <span class=\"comment\">// 返回键 退出时间</span></span><br><span class=\"line\"> <span class=\"comment\">/**</span><br><span class=\"line\">     *  返回键 (2秒内退出)</span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> keyCode 返回键code</span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> event keyEvent</span><br><span class=\"line\">     * <span class=\"doctag\">@return</span> true</span><br><span class=\"line\">     */</span></span><br><span class=\"line\"> <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; event.getAction() == KeyEvent.ACTION_DOWN) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//两秒之内按返回键就会退出</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (System.currentTimeMillis() - exitTime &gt; <span class=\"number\">2000</span>) &#123;</span><br><span class=\"line\">                Toast.makeText(<span class=\"keyword\">this</span>, <span class=\"string\">\"再按一次退出\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">                exitTime = System.currentTimeMillis();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                finish();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>; <span class=\"comment\">// 不要忘记 return true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.<span class=\"title\">onKeyDown</span><span class=\"params\">(keyCode, event)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是点击返回键 关闭DrawerLayout等等<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">     * 系统返回键监听,事件处理</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public void onBackPressed() &#123;</span><br><span class=\"line\">        HomeViewPagerFragment homeFragment = null;</span><br><span class=\"line\">        boolean isDrawerOpen = false;</span><br><span class=\"line\">        boolean isPopFragment = false;</span><br><span class=\"line\">        String currentTabTag = mTabHost<span class=\"selector-class\">.getCurrentTabTag</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        String homeName = getResources()<span class=\"selector-class\">.getString</span>(MainTab.HOME.getResName());</span><br><span class=\"line\"></span><br><span class=\"line\">        String bundleName = getResources()<span class=\"selector-class\">.getString</span>(MainTab.BUNDLES.getResName());</span><br><span class=\"line\"></span><br><span class=\"line\">        String billName = getResources()<span class=\"selector-class\">.getString</span>(MainTab.BILL.getResName());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">if</span> (currentTabTag.equals(bundleName)) &#123;</span><br><span class=\"line\">            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager()<span class=\"selector-class\">.findFragmentByTag</span>(bundleName))<span class=\"selector-class\">.popFragment</span>();</span><br><span class=\"line\">        &#125; else if (currentTabTag.equals(billName)) &#123;</span><br><span class=\"line\">            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager()<span class=\"selector-class\">.findFragmentByTag</span>(billName))<span class=\"selector-class\">.popFragment</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(currentTabTag.equals(homeName))&#123;</span><br><span class=\"line\">            homeFragment= ((HomeViewPagerFragment)getSupportFragmentManager()<span class=\"selector-class\">.findFragmentByTag</span>(homeName));</span><br><span class=\"line\">            isDrawerOpen = homeFragment<span class=\"selector-class\">.isDrawerOpen</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(isDrawerOpen)&#123;</span><br><span class=\"line\">            homeFragment<span class=\"selector-class\">.closeDrawer</span>();</span><br><span class=\"line\">        &#125;else if(!isPopFragment)&#123;</span><br><span class=\"line\">            finish();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"RadioButton-点击事件-2016-06-08\"><a href=\"#RadioButton-点击事件-2016-06-08\" class=\"headerlink\" title=\"RadioButton 点击事件 (2016-06-08)\"></a>RadioButton 点击事件 (<code>2016-06-08</code>)</h2><blockquote>\n<p>借助<a href=\"https://github.com/JakeWharton/butterknife\" target=\"_blank\" rel=\"external\"><code>ButterKnife</code></a>快速实现</p>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@OnCheckedChanged(&#123;R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb1</span>, R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb2</span>, R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb3</span>, R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb4</span>&#125;)</span><br><span class=\"line\">void onTagChecked(RadioButton searchRb, boolean checked) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (checked) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//实现代码...</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"夜神-模拟器连接-2016-6-22-13-44-46\"><a href=\"#夜神-模拟器连接-2016-6-22-13-44-46\" class=\"headerlink\" title=\"夜神 模拟器连接(2016-6-22 13:44:46)\"></a>夜神 模拟器连接(<code>2016-6-22 13:44:46</code>)</h2><p><code>流畅度杠杆的!</code><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">adb</span> <span class=\"selector-tag\">connect</span> 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-pseudo\">:62001</span></span><br></pre></td></tr></table></figure></p>\n<p><code>Fiddler抓包设置</code>: <code>具体参考</code>👉<a href=\"http://www.trinea.cn/android/android-network-sniffer/\" target=\"_blank\" rel=\"external\">trinea分享</a><br>1)<img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f567o10j00j209r0ag0t8.jpg\" alt=\"模拟器抓包配置\"><br>2)(实验证明已经不需要这一步了,只要设置好代理服务器主机名就行了!! add 2016-8-16 16:09:01) 模拟器浏览器打开: <a href=\"http://10.45.16.34:8888/(10.45.16.34就是本机地址\" target=\"_blank\" rel=\"external\">http://10.45.16.34:8888/(10.45.16.34就是本机地址</a>, 所有模拟器都是这么访问)</p>\n<h2 id=\"海马玩-模拟器连接-2016-06-14\"><a href=\"#海马玩-模拟器连接-2016-06-14\" class=\"headerlink\" title=\"海马玩 模拟器连接(2016-06-14)\"></a>海马玩 模拟器连接(<code>2016-06-14</code>)</h2><blockquote>\n<p><a href=\"http://www.jianshu.com/p/c2e6a4e7e9c4/comments/2742091#comment-2742091\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/c2e6a4e7e9c4/comments/2742091#comment-2742091</a><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">adb</span> <span class=\"selector-tag\">connect</span> 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-pseudo\">:26944</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><code>抓包设置</code>: 代理服务器主机名: 10.0.3.2 (genymotion也是这个), 夜神的是电脑ip</p>\n<h2 id=\"app启动页面-AlphaAnimation渐变-2016-06-14\"><a href=\"#app启动页面-AlphaAnimation渐变-2016-06-14\" class=\"headerlink\" title=\"app启动页面(AlphaAnimation渐变) (2016-06-14)\"></a>app启动页面(AlphaAnimation渐变) (<code>2016-06-14</code>)</h2><p><code>效果图:</code><img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f4x1cf5056g20kb0k3nb0.gif\" alt=\"AlphaAnimation透明到不透明\"></p>\n<blockquote>\n<p>完整代码如下↓↓↓↓↓↓</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">public</span> <span class=\"selector-tag\">class</span> <span class=\"selector-tag\">StartActivity</span> <span class=\"selector-tag\">extends</span> <span class=\"selector-tag\">AppCompatActivity</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    protected void onCreate(<span class=\"variable\">@Nullable</span> Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super<span class=\"selector-class\">.onCreate</span>(savedInstanceState);</span><br><span class=\"line\"></span><br><span class=\"line\">        final View view = View<span class=\"selector-class\">.inflate</span>(this, R.layout.activity_start, null);</span><br><span class=\"line\">        setContentView(view);</span><br><span class=\"line\">        <span class=\"comment\">// 渐变展示启动屏 , 0.0-1.0 透明到不透明</span></span><br><span class=\"line\">        AlphaAnimation aa = new AlphaAnimation(0<span class=\"selector-class\">.1f</span>, <span class=\"selector-tag\">1</span><span class=\"selector-class\">.0f</span>);</span><br><span class=\"line\">        aa<span class=\"selector-class\">.setDuration</span>(<span class=\"number\">3000</span>);</span><br><span class=\"line\">        view<span class=\"selector-class\">.startAnimation</span>(aa);</span><br><span class=\"line\">        <span class=\"selector-tag\">aa</span><span class=\"selector-class\">.setAnimationListener</span>(new Animation.AnimationListener() &#123;</span><br><span class=\"line\">            <span class=\"variable\">@Override</span></span><br><span class=\"line\">            public void onAnimationEnd(Animation animation) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 动画结束跳转登陆界面</span></span><br><span class=\"line\">                redirectTo();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">@Override</span></span><br><span class=\"line\">            public void onAnimationRepeat(Animation animation) &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">@Override</span></span><br><span class=\"line\">            public void onAnimationStart(Animation animation) &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">private</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">redirectTo</span>() &#123;</span><br><span class=\"line\">        Intent intent = new Intent(this, LoginActivity<span class=\"selector-class\">.class</span>);</span><br><span class=\"line\">        startActivity(intent);</span><br><span class=\"line\">        finish();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"adapter中setTag-的使用\"><a href=\"#adapter中setTag-的使用\" class=\"headerlink\" title=\"adapter中setTag()的使用\"></a>adapter中setTag()的使用</h2><p>可以用来当前方法中传数据</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override</span><br><span class=\"line\">   <span class=\"keyword\">public</span> View getView(final int position, View convertView, ViewGroup <span class=\"keyword\">parent</span>) &#123;</span><br><span class=\"line\">       final ViewHolder holder;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (convertView == <span class=\"built_in\">null</span>) &#123;</span><br><span class=\"line\">           holder = <span class=\"literal\">new</span> ViewHolder();</span><br><span class=\"line\">           convertView = LayoutInflater.from(context).inflate(R.layout.temp, <span class=\"keyword\">parent</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">           holder.nameTv = (TextView) convertView.findViewById(R.id.name);</span><br><span class=\"line\">           holder.<span class=\"keyword\">group</span> = (RadioGroup) convertView.findViewById(R.id.<span class=\"keyword\">group</span>);</span><br><span class=\"line\">           convertView.setTag(holder);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           holder = (ViewHolder) convertView.getTag();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       HashMap&lt;<span class=\"built_in\">String</span>, Object&gt; <span class=\"built_in\">map</span> = getItem(position);</span><br><span class=\"line\">       <span class=\"built_in\">map</span>.put(<span class=\"string\">\"position\"</span>, position);</span><br><span class=\"line\">---&gt;   holder.<span class=\"keyword\">group</span>.setTag(<span class=\"built_in\">map</span>); <span class=\"comment\">// 通过group视图设置setTag(map)</span></span><br><span class=\"line\">\t<span class=\"attr\">...</span></span><br><span class=\"line\">\t<span class=\"attr\">...</span></span><br><span class=\"line\">\t<span class=\"attr\">...</span></span><br><span class=\"line\">---&gt; \tHashMap&lt;<span class=\"built_in\">String</span>, Object&gt; radioMap = (HashMap&lt;<span class=\"built_in\">String</span>, Object&gt;) <span class=\"keyword\">group</span>.getTag(); <span class=\"comment\">// getTag()</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Gson把JsonArray的字符串转成bean实体类\"><a href=\"#Gson把JsonArray的字符串转成bean实体类\" class=\"headerlink\" title=\"Gson把JsonArray的字符串转成bean实体类\"></a>Gson把JsonArray的字符串转成bean实体类</h2><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String offerItemGroupStr;</span><br><span class=\"line\"></span><br><span class=\"line\">JsonArray<span class=\"built_in\"> array </span>= (JsonArray)<span class=\"built_in\"> new </span>JsonParser().parse(offerItemGroupStr);</span><br><span class=\"line\"></span><br><span class=\"line\">   List&lt;OfferItemGroup&gt; offerDepGroupsList =<span class=\"built_in\"> new </span>Gson().fromJson(array.toString(),<span class=\"built_in\"> new </span>TypeToken&lt;List&lt;OfferItemGroup&gt;&gt;() &#123;</span><br><span class=\"line\">       &#125;.getType());</span><br></pre></td></tr></table></figure>\n<h2 id=\"圆形进度条-2016-7-1-13-20-24\"><a href=\"#圆形进度条-2016-7-1-13-20-24\" class=\"headerlink\" title=\"圆形进度条(2016-7-1 13:20:24)\"></a><a href=\"https://github.com/DmitryMalkovich/circular-with-floating-action-button\" target=\"_blank\" rel=\"external\">圆形进度条</a>(<code>2016-7-1 13:20:24</code>)</h2><p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f809mvxj8uj209x0bvq36.jpg\" alt=\"Float Button 圆形进度条效果\"></p>\n<p><code>week</code>开源啦!! <a href=\"https://github.com/alibaba/weex\" target=\"_blank\" rel=\"external\">alibaba-week入口</a></p>\n<h2 id=\"保存图片到本地文件-2016-7-11-12-35-51\"><a href=\"#保存图片到本地文件-2016-7-11-12-35-51\" class=\"headerlink\" title=\"保存图片到本地文件(2016-7-11 12:35:51)\"></a>保存图片到本地文件(2016-7-11 12:35:51)</h2><p>参考: <a href=\"https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/java/com/yang/bruce/mumuxi/util/ImgSaveUtil.java\" target=\"_blank\" rel=\"external\">Mumuxi代码</a></p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Created by allen on 2016/6/19.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *  Here reference is https://github.com/gaolonglong/GankGirl/blob/master/app/src/main/java/com/app/gaolonglong/gankgirl/util/ImageUtil.java</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ImgSaveUtil &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Uri saveImage(Context context, <span class=\"keyword\">String</span> url, Bitmap bitmap, ImageView imageView, <span class=\"keyword\">String</span> tag)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//妹纸保存路径</span></span><br><span class=\"line\">            <span class=\"keyword\">String</span> imgDir = Environment.getExternalStorageDirectory().getPath() + <span class=\"string\">\"/GankGirl\"</span>;</span><br><span class=\"line\">            <span class=\"comment\">//图片名称处理</span></span><br><span class=\"line\">            <span class=\"keyword\">String</span>[] fileNameArr = url.substring(url.lastIndexOf(<span class=\"string\">\"/\"</span>) + <span class=\"number\">1</span>).split(<span class=\"string\">\"\\\\.\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">String</span> fileName = fileNameArr[<span class=\"number\">0</span>] + <span class=\"string\">\".png\"</span>;</span><br><span class=\"line\">            <span class=\"comment\">//创建文件路径</span></span><br><span class=\"line\">            <span class=\"built_in\">File</span> fileDir = new <span class=\"built_in\">File</span>(imgDir);</span><br><span class=\"line\">            <span class=\"built_in\">if</span> (!fileDir.<span class=\"built_in\">exists</span>())&#123;</span><br><span class=\"line\">                fileDir.<span class=\"built_in\">mkdir</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//创建文件</span></span><br><span class=\"line\">            <span class=\"built_in\">File</span> imageFile = new <span class=\"built_in\">File</span>(fileDir,fileName);</span><br><span class=\"line\">            <span class=\"built_in\">try</span> &#123;</span><br><span class=\"line\">                FileOutputStream fos = new FileOutputStream(imageFile);</span><br><span class=\"line\">                <span class=\"keyword\">boolean</span> compress = bitmap.compress(Bitmap.CompressFormat.PNG, <span class=\"number\">100</span>, fos);</span><br><span class=\"line\">                Snackbar.make(imageView,<span class=\"string\">\"妹纸已经躺在你的图库里啦.. ( ＞ω＜)\"</span>, Snackbar.LENGTH_SHORT).show();</span><br><span class=\"line\"></span><br><span class=\"line\">                fos.<span class=\"built_in\">flush</span>();</span><br><span class=\"line\">                fos.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">            &#125; <span class=\"built_in\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125; <span class=\"built_in\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            Uri uri = Uri.fromFile(imageFile);</span><br><span class=\"line\">            <span class=\"comment\">//发送广播，通知图库更新</span></span><br><span class=\"line\">            context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE,uri));</span><br><span class=\"line\">            <span class=\"built_in\">return</span> uri;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"样式统一设置-2016-7-12-15-06-40\"><a href=\"#样式统一设置-2016-7-12-15-06-40\" class=\"headerlink\" title=\"样式统一设置 (2016-7-12 15:06:40)\"></a>样式统一设置 (2016-7-12 15:06:40)</h2><blockquote>\n<p>例如:</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--全边框 输入框样式--&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"edittext_style\"</span>&gt;</span><span class=\"xml\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>match_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>wrap_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_marginLeft\"</span>&gt;</span>@dimen/space_20<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_marginRight\"</span>&gt;</span>@dimen/space_20<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_marginTop\"</span>&gt;</span>@dimen/space_10<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>@drawable/input_bg<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:singleLine\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--只有底边边框 输入框样式--&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"edittext_style1\"</span> <span class=\"attr\">parent</span>=<span class=\"string\">\"edittext_style\"</span>&gt;</span><span class=\"xml\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>?attr/editTextBackground<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"touch事件监听之tab页再次点击刷新数据-2016-7-15-14-23-06\"><a href=\"#touch事件监听之tab页再次点击刷新数据-2016-7-15-14-23-06\" class=\"headerlink\" title=\"touch事件监听之tab页再次点击刷新数据 (2016-7-15 14:23:06)\"></a>touch事件监听之tab页再次点击刷新数据 (2016-7-15 14:23:06)</h2><blockquote>\n<p>具体可以看 开源中国源码: <a href=\"http://git.oschina.net/oschina/android-app/blob/v2.6.3/app/src/main/java/net/oschina/app/ui/MainActivity.java?dir=0&amp;filepath=app%2Fsrc%2Fmain%2Fjava%2Fnet%2Foschina%2Fapp%2Fui%2FMainActivity.java&amp;oid=b7ab17b172b074e42015b3f5d806473216aec919&amp;sha=0e04398d8fd738c25abf7a0a61f988d15cbf2a08\" target=\"_blank\" rel=\"external\">MainActivity</a>中</p>\n</blockquote>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">super</span>.onTouchEvent(event);</span><br><span class=\"line\">       <span class=\"keyword\">boolean</span> consumed = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">       <span class=\"comment\">// use getTabHost().getCurrentTabView to decide if the current tab is</span></span><br><span class=\"line\">       <span class=\"comment\">// touched again</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (event.getAction() == MotionEvent.ACTION_DOWN</span><br><span class=\"line\">               &amp;&amp; v.equals(mTabHost.getCurrentTabView())) &#123;</span><br><span class=\"line\">           <span class=\"comment\">// use getTabHost().getCurrentView() to get a handle to the view</span></span><br><span class=\"line\">           <span class=\"comment\">// which is displayed in the tab - and to get this views context</span></span><br><span class=\"line\">           Fragment currentFragment = getCurrentFragment();</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (currentFragment != <span class=\"keyword\">null</span></span><br><span class=\"line\">                   &amp;&amp; currentFragment <span class=\"keyword\">instanceof</span> OnTabReselectListener) &#123;</span><br><span class=\"line\">               OnTabReselectListener listener = (OnTabReselectListener) currentFragment;</span><br><span class=\"line\">               listener.onTabReselect();</span><br><span class=\"line\">               consumed = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> consumed;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ProgressDialog使用-例如登录等待时-2016-7-15-14-55-24\"><a href=\"#ProgressDialog使用-例如登录等待时-2016-7-15-14-55-24\" class=\"headerlink\" title=\"ProgressDialog使用:例如登录等待时 (2016-7-15 14:55:24)\"></a>ProgressDialog使用:例如登录等待时 (2016-7-15 14:55:24)</h2><p><code>下面的代码可以参考 Afrimax或者MPT的[BaseActivity](https://coding.net/u/yangxiaoge/p/AfrimaxMI/git/blob/master/app/src/main/java/com/ztesoft/zsmart/datamall/app/base/BaseActivity.java)</code></p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// =======================DIALOG_CONTROL_INTERFACE START========================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// dialog 是否处于可见状态</span></span><br><span class=\"line\">    private boolean _isVisible;</span><br><span class=\"line\"></span><br><span class=\"line\">    private ProgressDialog _waitDialog;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public void hideWaitDialog() &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">if</span> (_isVisible &amp;&amp; _waitDialog != null) &#123;</span><br><span class=\"line\">            <span class=\"selector-tag\">try</span> &#123;</span><br><span class=\"line\">                _waitDialog<span class=\"selector-class\">.dismiss</span>();</span><br><span class=\"line\">                _waitDialog = null;</span><br><span class=\"line\">            &#125; catch (Exception ex) &#123;</span><br><span class=\"line\">                ex<span class=\"selector-class\">.printStackTrace</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public ProgressDialog showWaitDialog() &#123;</span><br><span class=\"line\">        return showWaitDialog(R<span class=\"selector-class\">.string</span><span class=\"selector-class\">.loading</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public ProgressDialog showWaitDialog(int resid) &#123;</span><br><span class=\"line\">        return showWaitDialog(getString(resid));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * 显示耗时操作等待弹出框</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param message 提示消息</span><br><span class=\"line\">     * @return ProgressDialog</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public ProgressDialog showWaitDialog(String message) &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">if</span> (_isVisible) &#123;</span><br><span class=\"line\">            <span class=\"selector-tag\">if</span> (_waitDialog == null) &#123;</span><br><span class=\"line\">                _waitDialog = DialogHelp<span class=\"selector-class\">.getWaitDialog</span>(this, message);</span><br><span class=\"line\">            &#125; else if (_waitDialog != null) &#123;</span><br><span class=\"line\">                _waitDialog<span class=\"selector-class\">.setMessage</span>(message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            _waitDialog.show();</span><br><span class=\"line\">            return _waitDialog;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// =======================DIALOG_CONTROL_INTERFACE END==========================</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"远程调试App或者WiFi调试-2016-7-19-19-34-09\"><a href=\"#远程调试App或者WiFi调试-2016-7-19-19-34-09\" class=\"headerlink\" title=\"远程调试App或者WiFi调试(2016-7-19 19:34:09)\"></a>远程调试App或者WiFi调试(2016-7-19 19:34:09)</h2><blockquote>\n<p><a href=\"http://www.jianshu.com/p/e9c243b5060b\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/e9c243b5060b</a></p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/721315-6978db5b6f2c1c75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/400\" alt=\"效果图\"></p>\n<h2 id=\"ScrollView初始化数据时不置顶-2016-7-20-16-36-01\"><a href=\"#ScrollView初始化数据时不置顶-2016-7-20-16-36-01\" class=\"headerlink\" title=\"ScrollView初始化数据时不置顶(2016-7-20 16:36:01)\"></a>ScrollView初始化数据时不置顶(2016-7-20 16:36:01)</h2><blockquote>\n<p>ScrollView布局设置一个属性即可!如果不设置,那么默认显示位置在ListView(等等..)底部<br>具体可以参考: <a href=\"http://blog.csdn.net/ronaldong99/article/details/50736423\" target=\"_blank\" rel=\"external\">ScrollView嵌套ListView不置顶显示</a><br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mScrollView<span class=\"selector-class\">.smoothScrollTo</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"使用BroadCast发送广播-通知home页刷新数据-2016-7-29-13-05-32\"><a href=\"#使用BroadCast发送广播-通知home页刷新数据-2016-7-29-13-05-32\" class=\"headerlink\" title=\"使用BroadCast发送广播,通知home页刷新数据(2016-7-29 13:05:32)\"></a>使用BroadCast发送广播,通知home页刷新数据(2016-7-29 13:05:32)</h2><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//----------------发送广播 , intent传值--------------//</span></span><br><span class=\"line\"> <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sendRefreshAccountBroadcast</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(Constants.REFRESH_HOME_ACCOUNT_LIST);</span><br><span class=\"line\">        intent.putExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">        getBaseContext().sendBroadcast(intent);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//----------------------接收广播 start------------------//</span></span><br><span class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> BroadcastReceiver mReceiver = <span class=\"keyword\">new</span> BroadcastReceiver() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (intent.getBooleanExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, <span class=\"keyword\">false</span>)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 刷新数据</span></span><br><span class=\"line\">\t\t\t\tinitExpendListViewData();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        <span class=\"comment\">// 注册广播监听</span></span><br><span class=\"line\">        IntentFilter filter = <span class=\"keyword\">new</span> IntentFilter(Constants.REFRESH_HOME_ACCOUNT_LIST);</span><br><span class=\"line\">        getActivity().registerReceiver(mReceiver, filter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//-------------------接收广播 end------------------------//</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"EditText数据监听-登录模块-动态搜索模块等-2016-7-30-14-29-58\"><a href=\"#EditText数据监听-登录模块-动态搜索模块等-2016-7-30-14-29-58\" class=\"headerlink\" title=\"EditText数据监听!登录模块,动态搜索模块等(2016-7-30 14:29:58)\"></a>EditText数据监听!登录模块,动态搜索模块等(2016-7-30 14:29:58)</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">etUsertel<span class=\"selector-class\">.addTextChangedListener</span>(new TextChange());</span><br><span class=\"line\">   etPassword<span class=\"selector-class\">.addTextChangedListener</span>(new TextChange());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// EditText监听器</span></span><br><span class=\"line\">   <span class=\"selector-tag\">class</span> <span class=\"selector-tag\">TextChange</span> <span class=\"selector-tag\">implements</span> <span class=\"selector-tag\">TextWatcher</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"variable\">@Override</span></span><br><span class=\"line\">       public void afterTextChanged(Editable arg0) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"variable\">@Override</span></span><br><span class=\"line\">       public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,</span><br><span class=\"line\">               int arg3) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"variable\">@Override</span></span><br><span class=\"line\">       public void onTextChanged(CharSequence cs, int start, int before,</span><br><span class=\"line\">               int count) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">           boolean Sign2 = et_usertel<span class=\"selector-class\">.getText</span>()<span class=\"selector-class\">.length</span>() &gt; <span class=\"selector-tag\">0</span>;</span><br><span class=\"line\">           boolean Sign3 = et_password<span class=\"selector-class\">.getText</span>()<span class=\"selector-class\">.length</span>() &gt; <span class=\"selector-tag\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 设置登录按钮的颜色,以及是否可点击!</span></span><br><span class=\"line\">           <span class=\"selector-tag\">if</span> (Sign2 &amp; Sign3) &#123;</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setTextColor</span>(<span class=\"number\">0</span>xFFFFFFFF);</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setEnabled</span>(true);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"comment\">// 在layout文件中，对Button的text属性应预先设置默认值，否则刚打开程序的时候Button是无显示的</span></span><br><span class=\"line\">           else &#123;</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setTextColor</span>(<span class=\"number\">0</span>xFFD0EFC6);</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setEnabled</span>(false);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"AS快捷键-2016-8-2-18-58-02\"><a href=\"#AS快捷键-2016-8-2-18-58-02\" class=\"headerlink\" title=\"AS快捷键(2016-8-2 18:58:02)\"></a>AS快捷键(2016-8-2 18:58:02)</h2><p><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkhxh18yj214k0pw4bs.jpg\" alt=\"android_studio快捷键\"></p>\n","excerpt":"<h2 id=\"Android调用微信扫一扫和支付宝扫一扫-2016-9-20-19-01-47\"><a href=\"#Android调用微信扫一扫和支付宝扫一扫-2016-9-20-19-01-47\" class=\"headerlink\" title=\"Android调用微信扫一扫和支付宝扫一扫(2016-9-20 19:01:47)\"></a>Android调用微信扫一扫和支付宝扫一扫(2016-9-20 19:01:47)</h2><p>摘自:<a href=\"https://ydmmocoo.github.io/2016/06/30/Android%E8%B0%83%E7%94%A8%E5%BE%AE%E4%BF%A1%E6%89%AB%E4%B8%80%E6%89%AB%E5%92%8C%E6%94%AF%E4%BB%98%E5%AE%9D%E6%89%AB%E4%B8%80%E6%89%AB/\">习惯沉默的Blog\n</a><br>现在微信不能直接跳转到微信扫一扫:详见 <a href=\"http://blog.csdn.net/l_lhc/article/details/51636130\">Android调用微信扫一扫_CSDN</a></p>\n<h2 id=\"访问或者下载单个github文件-2016-9-20-18-43-37\"><a href=\"#访问或者下载单个github文件-2016-9-20-18-43-37\" class=\"headerlink\" title=\"访问或者下载单个github文件(2016-9-20 18:43:37)\"></a>访问或者下载单个github文件(2016-9-20 18:43:37)</h2><p><strong>用途:</strong>可以用来存一些配置文件,图片等.<br>url固定格式: <a href=\"https://raw.githubusercontent.com/username/repository/branch/filename\">https://raw.githubusercontent.com/username/repository/branch/filename</a><br>例如: <a href=\"https://raw.githubusercontent.com/yangxiaoge/MumuXi/master/README.md\">https://raw.githubusercontent.com/yangxiaoge/MumuXi/master/README.md</a></p>\n<blockquote>\n<p>参考stackoverflow:<a href=\"http://stackoverflow.com/questions/4604663/download-single-files-from-github\">Download single files from GitHub</a></p>\n</blockquote>","more":"<h2 id=\"Gson构造JsonArray-2016-8-23-16-11-25\"><a href=\"#Gson构造JsonArray-2016-8-23-16-11-25\" class=\"headerlink\" title=\"Gson构造JsonArray(2016-8-23 16:11:25)\"></a>Gson构造JsonArray(2016-8-23 16:11:25)</h2><p>最近项目中请求参数传参用到了 JsonArray对象<br>构造方法如下:</p>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Object</span>[] object = <span class=\"keyword\">new</span> <span class=\"keyword\">Object</span>[]&#123;<span class=\"string\">\"111\"</span>, <span class=\"string\">\"222\"</span>, <span class=\"string\">\"24G\"</span>&#125;;</span><br><span class=\"line\">JsonArray jsonArr = <span class=\"keyword\">new</span> JsonArray();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">Object</span> anObject : object) &#123;</span><br><span class=\"line\">    JsonObject jo = <span class=\"keyword\">new</span> JsonObject(); <span class=\"comment\">//构造json</span></span><br><span class=\"line\">    jo.addProperty(<span class=\"string\">\"offerCode\"</span>, (<span class=\"keyword\">String</span>) anObject);</span><br><span class=\"line\">    jsonArr.<span class=\"built_in\">add</span>(jo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Toast.makeText(<span class=\"keyword\">this</span>, <span class=\"string\">\"jsonArr:  \"</span> + jsonArr.toString(), Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"jsonArr:  \"</span> + jsonArr.toString());</span><br></pre></td></tr></table></figure>\n<h2 id=\"LICEcap录制Gif工具-2016-8-2-18-57-50\"><a href=\"#LICEcap录制Gif工具-2016-8-2-18-57-50\" class=\"headerlink\" title=\"LICEcap录制Gif工具(2016-8-2 18:57:50)\"></a>LICEcap录制Gif工具(2016-8-2 18:57:50)</h2><p><a href=\"http://www.cockos.com/licecap/\">官网地址</a></p>\n<p><img src=\"http://www.cockos.com/licecap/licecap_rules.gif\" alt=\"录制的gif图\"></p>\n<h2 id=\"读取Assets-下面-cityId查询天气-中的是另一种读取方法-目录下文件-2016-06-12\"><a href=\"#读取Assets-下面-cityId查询天气-中的是另一种读取方法-目录下文件-2016-06-12\" class=\"headerlink\" title=\"读取Assets( 下面 cityId查询天气 中的是另一种读取方法)目录下文件(2016-06-12)\"></a>读取Assets( 下面 cityId查询天气 中的是另一种读取方法)目录下文件(<code>2016-06-12</code>)</h2><p><em><a href=\"http://www.jianshu.com/p/b87fee2f7a23\">例如:</a></em></p>\n<blockquote>\n<p>简书:<a href=\"http://www.jianshu.com/p/b87fee2f7a23\">http://www.jianshu.com/p/b87fee2f7a23</a></p>\n</blockquote>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">InputStreamReader isr = <span class=\"keyword\">new</span> InputStreamReader(<span class=\"keyword\">this</span>.getClass()</span><br><span class=\"line\">\t\t\t\t\t.getClassLoader()</span><br><span class=\"line\">\t\t\t\t\t.getResourceAsStream(<span class=\"string\">\"assets/\"</span> + <span class=\"string\">\"student.json\"</span>)</span><br><span class=\"line\">\t\t\t\t\t,<span class=\"string\">\"utf-8\"</span></span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\"><span class=\"comment\">//从assets获取json文件</span></span><br><span class=\"line\"><span class=\"keyword\">BufferedReader</span> bfr = <span class=\"keyword\">new</span> <span class=\"keyword\">BufferedReader</span>(isr);</span><br></pre></td></tr></table></figure>\n<h2 id=\"cityId查询天气-2016-6-20-19-00-35\"><a href=\"#cityId查询天气-2016-6-20-19-00-35\" class=\"headerlink\" title=\"cityId查询天气(2016-6-20 19:00:35)\"></a>cityId查询天气(<code>2016-6-20 19:00:35</code>)</h2><ol>\n<li>citycode.txt是cityid文件(数据 101190101=南京 ) </li>\n<li>下面代码是 逐行根据”=”分隔符,读写城市id跟name,可以写到文件中</li>\n</ol>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">    * 根据城市名找到对应的id如果没有则说明在中国气象网不存在该城市</span><br><span class=\"line\">    *</span><br><span class=\"line\">    * @param cityname</span><br><span class=\"line\">    * @return</span><br><span class=\"line\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> findId(<span class=\"keyword\">String</span> cityname) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == cityname || <span class=\"string\">\"\"</span>.equals(cityname))</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">       <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">           InputStreamReader inputReader = <span class=\"keyword\">new</span> InputStreamReader(getResources().getAssets().<span class=\"built_in\">open</span>(<span class=\"string\">\"citycode.txt\"</span>));</span><br><span class=\"line\">           <span class=\"keyword\">BufferedReader</span> bufReader = <span class=\"keyword\">new</span> <span class=\"keyword\">BufferedReader</span>(inputReader);</span><br><span class=\"line\">           <span class=\"keyword\">String</span> <span class=\"built_in\">line</span> = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">           <span class=\"keyword\">String</span>[] <span class=\"built_in\">str</span> = <span class=\"keyword\">new</span> <span class=\"keyword\">String</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">           <span class=\"keyword\">while</span> ((<span class=\"built_in\">line</span> = bufReader.readLine()) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">               <span class=\"built_in\">str</span> = <span class=\"built_in\">line</span>.<span class=\"built_in\">split</span>(<span class=\"string\">\"=\"</span>);</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (<span class=\"built_in\">str</span>.length == <span class=\"number\">2</span> &amp;&amp; <span class=\"keyword\">null</span> != <span class=\"built_in\">str</span>[<span class=\"number\">1</span>] &amp;&amp; !<span class=\"string\">\"\"</span>.equals(<span class=\"built_in\">str</span>[<span class=\"number\">1</span>]) &amp;&amp; cityname.equals(<span class=\"built_in\">str</span>[<span class=\"number\">1</span>])) &#123;</span><br><span class=\"line\">                   <span class=\"comment\">//返回对应city编号</span></span><br><span class=\"line\">                   <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">           e.printStackTrace();</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"双击两次返回键退出-2秒内退出\"><a href=\"#双击两次返回键退出-2秒内退出\" class=\"headerlink\" title=\"双击两次返回键退出 (2秒内退出)\"></a>双击两次返回键退出 (2秒内退出)</h2><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">long</span> exitTime = <span class=\"number\">0</span>; <span class=\"comment\">// 返回键 退出时间</span></span><br><span class=\"line\"> <span class=\"comment\">/**</span><br><span class=\"line\">     *  返回键 (2秒内退出)</span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> keyCode 返回键code</span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> event keyEvent</span><br><span class=\"line\">     * <span class=\"doctag\">@return</span> true</span><br><span class=\"line\">     */</span></span><br><span class=\"line\"> <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; event.getAction() == KeyEvent.ACTION_DOWN) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//两秒之内按返回键就会退出</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (System.currentTimeMillis() - exitTime &gt; <span class=\"number\">2000</span>) &#123;</span><br><span class=\"line\">                Toast.makeText(<span class=\"keyword\">this</span>, <span class=\"string\">\"再按一次退出\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">                exitTime = System.currentTimeMillis();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                finish();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>; <span class=\"comment\">// 不要忘记 return true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.<span class=\"title\">onKeyDown</span><span class=\"params\">(keyCode, event)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是点击返回键 关闭DrawerLayout等等<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">     * 系统返回键监听,事件处理</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public void onBackPressed() &#123;</span><br><span class=\"line\">        HomeViewPagerFragment homeFragment = null;</span><br><span class=\"line\">        boolean isDrawerOpen = false;</span><br><span class=\"line\">        boolean isPopFragment = false;</span><br><span class=\"line\">        String currentTabTag = mTabHost<span class=\"selector-class\">.getCurrentTabTag</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        String homeName = getResources()<span class=\"selector-class\">.getString</span>(MainTab.HOME.getResName());</span><br><span class=\"line\"></span><br><span class=\"line\">        String bundleName = getResources()<span class=\"selector-class\">.getString</span>(MainTab.BUNDLES.getResName());</span><br><span class=\"line\"></span><br><span class=\"line\">        String billName = getResources()<span class=\"selector-class\">.getString</span>(MainTab.BILL.getResName());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">if</span> (currentTabTag.equals(bundleName)) &#123;</span><br><span class=\"line\">            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager()<span class=\"selector-class\">.findFragmentByTag</span>(bundleName))<span class=\"selector-class\">.popFragment</span>();</span><br><span class=\"line\">        &#125; else if (currentTabTag.equals(billName)) &#123;</span><br><span class=\"line\">            isPopFragment = ((BaseContainerFragment)getSupportFragmentManager()<span class=\"selector-class\">.findFragmentByTag</span>(billName))<span class=\"selector-class\">.popFragment</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(currentTabTag.equals(homeName))&#123;</span><br><span class=\"line\">            homeFragment= ((HomeViewPagerFragment)getSupportFragmentManager()<span class=\"selector-class\">.findFragmentByTag</span>(homeName));</span><br><span class=\"line\">            isDrawerOpen = homeFragment<span class=\"selector-class\">.isDrawerOpen</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(isDrawerOpen)&#123;</span><br><span class=\"line\">            homeFragment<span class=\"selector-class\">.closeDrawer</span>();</span><br><span class=\"line\">        &#125;else if(!isPopFragment)&#123;</span><br><span class=\"line\">            finish();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"RadioButton-点击事件-2016-06-08\"><a href=\"#RadioButton-点击事件-2016-06-08\" class=\"headerlink\" title=\"RadioButton 点击事件 (2016-06-08)\"></a>RadioButton 点击事件 (<code>2016-06-08</code>)</h2><blockquote>\n<p>借助<a href=\"https://github.com/JakeWharton/butterknife\"><code>ButterKnife</code></a>快速实现</p>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@OnCheckedChanged(&#123;R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb1</span>, R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb2</span>, R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb3</span>, R<span class=\"selector-class\">.id</span><span class=\"selector-class\">.searchRb4</span>&#125;)</span><br><span class=\"line\">void onTagChecked(RadioButton searchRb, boolean checked) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (checked) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//实现代码...</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"夜神-模拟器连接-2016-6-22-13-44-46\"><a href=\"#夜神-模拟器连接-2016-6-22-13-44-46\" class=\"headerlink\" title=\"夜神 模拟器连接(2016-6-22 13:44:46)\"></a>夜神 模拟器连接(<code>2016-6-22 13:44:46</code>)</h2><p><code>流畅度杠杆的!</code><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">adb</span> <span class=\"selector-tag\">connect</span> 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-pseudo\">:62001</span></span><br></pre></td></tr></table></figure></p>\n<p><code>Fiddler抓包设置</code>: <code>具体参考</code>👉<a href=\"http://www.trinea.cn/android/android-network-sniffer/\">trinea分享</a><br>1)<img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f567o10j00j209r0ag0t8.jpg\" alt=\"模拟器抓包配置\"><br>2)(实验证明已经不需要这一步了,只要设置好代理服务器主机名就行了!! add 2016-8-16 16:09:01) 模拟器浏览器打开: <a href=\"http://10.45.16.34:8888/(10.45.16.34就是本机地址\">http://10.45.16.34:8888/(10.45.16.34就是本机地址</a>, 所有模拟器都是这么访问)</p>\n<h2 id=\"海马玩-模拟器连接-2016-06-14\"><a href=\"#海马玩-模拟器连接-2016-06-14\" class=\"headerlink\" title=\"海马玩 模拟器连接(2016-06-14)\"></a>海马玩 模拟器连接(<code>2016-06-14</code>)</h2><blockquote>\n<p><a href=\"http://www.jianshu.com/p/c2e6a4e7e9c4/comments/2742091#comment-2742091\">http://www.jianshu.com/p/c2e6a4e7e9c4/comments/2742091#comment-2742091</a><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">adb</span> <span class=\"selector-tag\">connect</span> 127<span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.1</span><span class=\"selector-pseudo\">:26944</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><code>抓包设置</code>: 代理服务器主机名: 10.0.3.2 (genymotion也是这个), 夜神的是电脑ip</p>\n<h2 id=\"app启动页面-AlphaAnimation渐变-2016-06-14\"><a href=\"#app启动页面-AlphaAnimation渐变-2016-06-14\" class=\"headerlink\" title=\"app启动页面(AlphaAnimation渐变) (2016-06-14)\"></a>app启动页面(AlphaAnimation渐变) (<code>2016-06-14</code>)</h2><p><code>效果图:</code><img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f4x1cf5056g20kb0k3nb0.gif\" alt=\"AlphaAnimation透明到不透明\"></p>\n<blockquote>\n<p>完整代码如下↓↓↓↓↓↓</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">public</span> <span class=\"selector-tag\">class</span> <span class=\"selector-tag\">StartActivity</span> <span class=\"selector-tag\">extends</span> <span class=\"selector-tag\">AppCompatActivity</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    protected void onCreate(<span class=\"variable\">@Nullable</span> Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super<span class=\"selector-class\">.onCreate</span>(savedInstanceState);</span><br><span class=\"line\"></span><br><span class=\"line\">        final View view = View<span class=\"selector-class\">.inflate</span>(this, R.layout.activity_start, null);</span><br><span class=\"line\">        setContentView(view);</span><br><span class=\"line\">        <span class=\"comment\">// 渐变展示启动屏 , 0.0-1.0 透明到不透明</span></span><br><span class=\"line\">        AlphaAnimation aa = new AlphaAnimation(0<span class=\"selector-class\">.1f</span>, <span class=\"selector-tag\">1</span><span class=\"selector-class\">.0f</span>);</span><br><span class=\"line\">        aa<span class=\"selector-class\">.setDuration</span>(<span class=\"number\">3000</span>);</span><br><span class=\"line\">        view<span class=\"selector-class\">.startAnimation</span>(aa);</span><br><span class=\"line\">        <span class=\"selector-tag\">aa</span><span class=\"selector-class\">.setAnimationListener</span>(new Animation.AnimationListener() &#123;</span><br><span class=\"line\">            <span class=\"variable\">@Override</span></span><br><span class=\"line\">            public void onAnimationEnd(Animation animation) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 动画结束跳转登陆界面</span></span><br><span class=\"line\">                redirectTo();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">@Override</span></span><br><span class=\"line\">            public void onAnimationRepeat(Animation animation) &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">@Override</span></span><br><span class=\"line\">            public void onAnimationStart(Animation animation) &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">private</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">redirectTo</span>() &#123;</span><br><span class=\"line\">        Intent intent = new Intent(this, LoginActivity<span class=\"selector-class\">.class</span>);</span><br><span class=\"line\">        startActivity(intent);</span><br><span class=\"line\">        finish();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"adapter中setTag-的使用\"><a href=\"#adapter中setTag-的使用\" class=\"headerlink\" title=\"adapter中setTag()的使用\"></a>adapter中setTag()的使用</h2><p>可以用来当前方法中传数据</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override</span><br><span class=\"line\">   <span class=\"keyword\">public</span> View getView(final int position, View convertView, ViewGroup <span class=\"keyword\">parent</span>) &#123;</span><br><span class=\"line\">       final ViewHolder holder;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (convertView == <span class=\"built_in\">null</span>) &#123;</span><br><span class=\"line\">           holder = <span class=\"literal\">new</span> ViewHolder();</span><br><span class=\"line\">           convertView = LayoutInflater.from(context).inflate(R.layout.temp, <span class=\"keyword\">parent</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">           holder.nameTv = (TextView) convertView.findViewById(R.id.name);</span><br><span class=\"line\">           holder.<span class=\"keyword\">group</span> = (RadioGroup) convertView.findViewById(R.id.<span class=\"keyword\">group</span>);</span><br><span class=\"line\">           convertView.setTag(holder);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           holder = (ViewHolder) convertView.getTag();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       HashMap&lt;<span class=\"built_in\">String</span>, Object&gt; <span class=\"built_in\">map</span> = getItem(position);</span><br><span class=\"line\">       <span class=\"built_in\">map</span>.put(<span class=\"string\">\"position\"</span>, position);</span><br><span class=\"line\">---&gt;   holder.<span class=\"keyword\">group</span>.setTag(<span class=\"built_in\">map</span>); <span class=\"comment\">// 通过group视图设置setTag(map)</span></span><br><span class=\"line\">\t<span class=\"attr\">...</span></span><br><span class=\"line\">\t<span class=\"attr\">...</span></span><br><span class=\"line\">\t<span class=\"attr\">...</span></span><br><span class=\"line\">---&gt; \tHashMap&lt;<span class=\"built_in\">String</span>, Object&gt; radioMap = (HashMap&lt;<span class=\"built_in\">String</span>, Object&gt;) <span class=\"keyword\">group</span>.getTag(); <span class=\"comment\">// getTag()</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Gson把JsonArray的字符串转成bean实体类\"><a href=\"#Gson把JsonArray的字符串转成bean实体类\" class=\"headerlink\" title=\"Gson把JsonArray的字符串转成bean实体类\"></a>Gson把JsonArray的字符串转成bean实体类</h2><figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String offerItemGroupStr;</span><br><span class=\"line\"></span><br><span class=\"line\">JsonArray<span class=\"built_in\"> array </span>= (JsonArray)<span class=\"built_in\"> new </span>JsonParser().parse(offerItemGroupStr);</span><br><span class=\"line\"></span><br><span class=\"line\">   List&lt;OfferItemGroup&gt; offerDepGroupsList =<span class=\"built_in\"> new </span>Gson().fromJson(array.toString(),<span class=\"built_in\"> new </span>TypeToken&lt;List&lt;OfferItemGroup&gt;&gt;() &#123;</span><br><span class=\"line\">       &#125;.getType());</span><br></pre></td></tr></table></figure>\n<h2 id=\"圆形进度条-2016-7-1-13-20-24\"><a href=\"#圆形进度条-2016-7-1-13-20-24\" class=\"headerlink\" title=\"圆形进度条(2016-7-1 13:20:24)\"></a><a href=\"https://github.com/DmitryMalkovich/circular-with-floating-action-button\">圆形进度条</a>(<code>2016-7-1 13:20:24</code>)</h2><p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f809mvxj8uj209x0bvq36.jpg\" alt=\"Float Button 圆形进度条效果\"></p>\n<p><code>week</code>开源啦!! <a href=\"https://github.com/alibaba/weex\">alibaba-week入口</a></p>\n<h2 id=\"保存图片到本地文件-2016-7-11-12-35-51\"><a href=\"#保存图片到本地文件-2016-7-11-12-35-51\" class=\"headerlink\" title=\"保存图片到本地文件(2016-7-11 12:35:51)\"></a>保存图片到本地文件(2016-7-11 12:35:51)</h2><p>参考: <a href=\"https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/java/com/yang/bruce/mumuxi/util/ImgSaveUtil.java\">Mumuxi代码</a></p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Created by allen on 2016/6/19.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *  Here reference is https://github.com/gaolonglong/GankGirl/blob/master/app/src/main/java/com/app/gaolonglong/gankgirl/util/ImageUtil.java</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ImgSaveUtil &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Uri saveImage(Context context, <span class=\"keyword\">String</span> url, Bitmap bitmap, ImageView imageView, <span class=\"keyword\">String</span> tag)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//妹纸保存路径</span></span><br><span class=\"line\">            <span class=\"keyword\">String</span> imgDir = Environment.getExternalStorageDirectory().getPath() + <span class=\"string\">\"/GankGirl\"</span>;</span><br><span class=\"line\">            <span class=\"comment\">//图片名称处理</span></span><br><span class=\"line\">            <span class=\"keyword\">String</span>[] fileNameArr = url.substring(url.lastIndexOf(<span class=\"string\">\"/\"</span>) + <span class=\"number\">1</span>).split(<span class=\"string\">\"\\\\.\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">String</span> fileName = fileNameArr[<span class=\"number\">0</span>] + <span class=\"string\">\".png\"</span>;</span><br><span class=\"line\">            <span class=\"comment\">//创建文件路径</span></span><br><span class=\"line\">            <span class=\"built_in\">File</span> fileDir = new <span class=\"built_in\">File</span>(imgDir);</span><br><span class=\"line\">            <span class=\"built_in\">if</span> (!fileDir.<span class=\"built_in\">exists</span>())&#123;</span><br><span class=\"line\">                fileDir.<span class=\"built_in\">mkdir</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//创建文件</span></span><br><span class=\"line\">            <span class=\"built_in\">File</span> imageFile = new <span class=\"built_in\">File</span>(fileDir,fileName);</span><br><span class=\"line\">            <span class=\"built_in\">try</span> &#123;</span><br><span class=\"line\">                FileOutputStream fos = new FileOutputStream(imageFile);</span><br><span class=\"line\">                <span class=\"keyword\">boolean</span> compress = bitmap.compress(Bitmap.CompressFormat.PNG, <span class=\"number\">100</span>, fos);</span><br><span class=\"line\">                Snackbar.make(imageView,<span class=\"string\">\"妹纸已经躺在你的图库里啦.. ( ＞ω＜)\"</span>, Snackbar.LENGTH_SHORT).show();</span><br><span class=\"line\"></span><br><span class=\"line\">                fos.<span class=\"built_in\">flush</span>();</span><br><span class=\"line\">                fos.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">            &#125; <span class=\"built_in\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125; <span class=\"built_in\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            Uri uri = Uri.fromFile(imageFile);</span><br><span class=\"line\">            <span class=\"comment\">//发送广播，通知图库更新</span></span><br><span class=\"line\">            context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE,uri));</span><br><span class=\"line\">            <span class=\"built_in\">return</span> uri;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"样式统一设置-2016-7-12-15-06-40\"><a href=\"#样式统一设置-2016-7-12-15-06-40\" class=\"headerlink\" title=\"样式统一设置 (2016-7-12 15:06:40)\"></a>样式统一设置 (2016-7-12 15:06:40)</h2><blockquote>\n<p>例如:</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--全边框 输入框样式--&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"edittext_style\"</span>&gt;</span><span class=\"xml\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>match_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>wrap_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_marginLeft\"</span>&gt;</span>@dimen/space_20<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_marginRight\"</span>&gt;</span>@dimen/space_20<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_marginTop\"</span>&gt;</span>@dimen/space_10<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>@drawable/input_bg<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:singleLine\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--只有底边边框 输入框样式--&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"edittext_style1\"</span> <span class=\"attr\">parent</span>=<span class=\"string\">\"edittext_style\"</span>&gt;</span><span class=\"xml\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>?attr/editTextBackground<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"touch事件监听之tab页再次点击刷新数据-2016-7-15-14-23-06\"><a href=\"#touch事件监听之tab页再次点击刷新数据-2016-7-15-14-23-06\" class=\"headerlink\" title=\"touch事件监听之tab页再次点击刷新数据 (2016-7-15 14:23:06)\"></a>touch事件监听之tab页再次点击刷新数据 (2016-7-15 14:23:06)</h2><blockquote>\n<p>具体可以看 开源中国源码: <a href=\"http://git.oschina.net/oschina/android-app/blob/v2.6.3/app/src/main/java/net/oschina/app/ui/MainActivity.java?dir=0&amp;filepath=app%2Fsrc%2Fmain%2Fjava%2Fnet%2Foschina%2Fapp%2Fui%2FMainActivity.java&amp;oid=b7ab17b172b074e42015b3f5d806473216aec919&amp;sha=0e04398d8fd738c25abf7a0a61f988d15cbf2a08\">MainActivity</a>中</p>\n</blockquote>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">super</span>.onTouchEvent(event);</span><br><span class=\"line\">       <span class=\"keyword\">boolean</span> consumed = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">       <span class=\"comment\">// use getTabHost().getCurrentTabView to decide if the current tab is</span></span><br><span class=\"line\">       <span class=\"comment\">// touched again</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (event.getAction() == MotionEvent.ACTION_DOWN</span><br><span class=\"line\">               &amp;&amp; v.equals(mTabHost.getCurrentTabView())) &#123;</span><br><span class=\"line\">           <span class=\"comment\">// use getTabHost().getCurrentView() to get a handle to the view</span></span><br><span class=\"line\">           <span class=\"comment\">// which is displayed in the tab - and to get this views context</span></span><br><span class=\"line\">           Fragment currentFragment = getCurrentFragment();</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (currentFragment != <span class=\"keyword\">null</span></span><br><span class=\"line\">                   &amp;&amp; currentFragment <span class=\"keyword\">instanceof</span> OnTabReselectListener) &#123;</span><br><span class=\"line\">               OnTabReselectListener listener = (OnTabReselectListener) currentFragment;</span><br><span class=\"line\">               listener.onTabReselect();</span><br><span class=\"line\">               consumed = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> consumed;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ProgressDialog使用-例如登录等待时-2016-7-15-14-55-24\"><a href=\"#ProgressDialog使用-例如登录等待时-2016-7-15-14-55-24\" class=\"headerlink\" title=\"ProgressDialog使用:例如登录等待时 (2016-7-15 14:55:24)\"></a>ProgressDialog使用:例如登录等待时 (2016-7-15 14:55:24)</h2><p><code>下面的代码可以参考 Afrimax或者MPT的[BaseActivity](https://coding.net/u/yangxiaoge/p/AfrimaxMI/git/blob/master/app/src/main/java/com/ztesoft/zsmart/datamall/app/base/BaseActivity.java)</code></p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// =======================DIALOG_CONTROL_INTERFACE START========================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// dialog 是否处于可见状态</span></span><br><span class=\"line\">    private boolean _isVisible;</span><br><span class=\"line\"></span><br><span class=\"line\">    private ProgressDialog _waitDialog;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public void hideWaitDialog() &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">if</span> (_isVisible &amp;&amp; _waitDialog != null) &#123;</span><br><span class=\"line\">            <span class=\"selector-tag\">try</span> &#123;</span><br><span class=\"line\">                _waitDialog<span class=\"selector-class\">.dismiss</span>();</span><br><span class=\"line\">                _waitDialog = null;</span><br><span class=\"line\">            &#125; catch (Exception ex) &#123;</span><br><span class=\"line\">                ex<span class=\"selector-class\">.printStackTrace</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public ProgressDialog showWaitDialog() &#123;</span><br><span class=\"line\">        return showWaitDialog(R<span class=\"selector-class\">.string</span><span class=\"selector-class\">.loading</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public ProgressDialog showWaitDialog(int resid) &#123;</span><br><span class=\"line\">        return showWaitDialog(getString(resid));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * 显示耗时操作等待弹出框</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param message 提示消息</span><br><span class=\"line\">     * @return ProgressDialog</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"variable\">@Override</span></span><br><span class=\"line\">    public ProgressDialog showWaitDialog(String message) &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">if</span> (_isVisible) &#123;</span><br><span class=\"line\">            <span class=\"selector-tag\">if</span> (_waitDialog == null) &#123;</span><br><span class=\"line\">                _waitDialog = DialogHelp<span class=\"selector-class\">.getWaitDialog</span>(this, message);</span><br><span class=\"line\">            &#125; else if (_waitDialog != null) &#123;</span><br><span class=\"line\">                _waitDialog<span class=\"selector-class\">.setMessage</span>(message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            _waitDialog.show();</span><br><span class=\"line\">            return _waitDialog;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// =======================DIALOG_CONTROL_INTERFACE END==========================</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"远程调试App或者WiFi调试-2016-7-19-19-34-09\"><a href=\"#远程调试App或者WiFi调试-2016-7-19-19-34-09\" class=\"headerlink\" title=\"远程调试App或者WiFi调试(2016-7-19 19:34:09)\"></a>远程调试App或者WiFi调试(2016-7-19 19:34:09)</h2><blockquote>\n<p><a href=\"http://www.jianshu.com/p/e9c243b5060b\">http://www.jianshu.com/p/e9c243b5060b</a></p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/721315-6978db5b6f2c1c75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/400\" alt=\"效果图\"></p>\n<h2 id=\"ScrollView初始化数据时不置顶-2016-7-20-16-36-01\"><a href=\"#ScrollView初始化数据时不置顶-2016-7-20-16-36-01\" class=\"headerlink\" title=\"ScrollView初始化数据时不置顶(2016-7-20 16:36:01)\"></a>ScrollView初始化数据时不置顶(2016-7-20 16:36:01)</h2><blockquote>\n<p>ScrollView布局设置一个属性即可!如果不设置,那么默认显示位置在ListView(等等..)底部<br>具体可以参考: <a href=\"http://blog.csdn.net/ronaldong99/article/details/50736423\">ScrollView嵌套ListView不置顶显示</a><br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mScrollView<span class=\"selector-class\">.smoothScrollTo</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"使用BroadCast发送广播-通知home页刷新数据-2016-7-29-13-05-32\"><a href=\"#使用BroadCast发送广播-通知home页刷新数据-2016-7-29-13-05-32\" class=\"headerlink\" title=\"使用BroadCast发送广播,通知home页刷新数据(2016-7-29 13:05:32)\"></a>使用BroadCast发送广播,通知home页刷新数据(2016-7-29 13:05:32)</h2><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//----------------发送广播 , intent传值--------------//</span></span><br><span class=\"line\"> <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sendRefreshAccountBroadcast</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(Constants.REFRESH_HOME_ACCOUNT_LIST);</span><br><span class=\"line\">        intent.putExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">        getBaseContext().sendBroadcast(intent);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//----------------------接收广播 start------------------//</span></span><br><span class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> BroadcastReceiver mReceiver = <span class=\"keyword\">new</span> BroadcastReceiver() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (intent.getBooleanExtra(Constants.REFRESH_HOME_ACCOUNT_LIST, <span class=\"keyword\">false</span>)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 刷新数据</span></span><br><span class=\"line\">\t\t\t\tinitExpendListViewData();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        <span class=\"comment\">// 注册广播监听</span></span><br><span class=\"line\">        IntentFilter filter = <span class=\"keyword\">new</span> IntentFilter(Constants.REFRESH_HOME_ACCOUNT_LIST);</span><br><span class=\"line\">        getActivity().registerReceiver(mReceiver, filter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//-------------------接收广播 end------------------------//</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"EditText数据监听-登录模块-动态搜索模块等-2016-7-30-14-29-58\"><a href=\"#EditText数据监听-登录模块-动态搜索模块等-2016-7-30-14-29-58\" class=\"headerlink\" title=\"EditText数据监听!登录模块,动态搜索模块等(2016-7-30 14:29:58)\"></a>EditText数据监听!登录模块,动态搜索模块等(2016-7-30 14:29:58)</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">etUsertel<span class=\"selector-class\">.addTextChangedListener</span>(new TextChange());</span><br><span class=\"line\">   etPassword<span class=\"selector-class\">.addTextChangedListener</span>(new TextChange());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// EditText监听器</span></span><br><span class=\"line\">   <span class=\"selector-tag\">class</span> <span class=\"selector-tag\">TextChange</span> <span class=\"selector-tag\">implements</span> <span class=\"selector-tag\">TextWatcher</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"variable\">@Override</span></span><br><span class=\"line\">       public void afterTextChanged(Editable arg0) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"variable\">@Override</span></span><br><span class=\"line\">       public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,</span><br><span class=\"line\">               int arg3) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"variable\">@Override</span></span><br><span class=\"line\">       public void onTextChanged(CharSequence cs, int start, int before,</span><br><span class=\"line\">               int count) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">           boolean Sign2 = et_usertel<span class=\"selector-class\">.getText</span>()<span class=\"selector-class\">.length</span>() &gt; <span class=\"selector-tag\">0</span>;</span><br><span class=\"line\">           boolean Sign3 = et_password<span class=\"selector-class\">.getText</span>()<span class=\"selector-class\">.length</span>() &gt; <span class=\"selector-tag\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 设置登录按钮的颜色,以及是否可点击!</span></span><br><span class=\"line\">           <span class=\"selector-tag\">if</span> (Sign2 &amp; Sign3) &#123;</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setTextColor</span>(<span class=\"number\">0</span>xFFFFFFFF);</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setEnabled</span>(true);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"comment\">// 在layout文件中，对Button的text属性应预先设置默认值，否则刚打开程序的时候Button是无显示的</span></span><br><span class=\"line\">           else &#123;</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setTextColor</span>(<span class=\"number\">0</span>xFFD0EFC6);</span><br><span class=\"line\">               btnLogin<span class=\"selector-class\">.setEnabled</span>(false);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"AS快捷键-2016-8-2-18-58-02\"><a href=\"#AS快捷键-2016-8-2-18-58-02\" class=\"headerlink\" title=\"AS快捷键(2016-8-2 18:58:02)\"></a>AS快捷键(2016-8-2 18:58:02)</h2><p><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkhxh18yj214k0pw4bs.jpg\" alt=\"android_studio快捷键\"></p>"},{"title":" Android 踩过的坑","date":"2016-06-23T03:02:22.000Z","top":8,"_content":"## AlertDialog弹出框 按钮在高版本中看不见(其实是颜色为白色) (2016-8-16 18:24:05)\n在android 6.0中变成了下面这种\n![白底按钮,看不见.6.0测试机不在,手动把按钮涂鸦了~~](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f6vrosgtzuj209n03n3yf.jpg)\n实际的效果应该是如下的\n![正常的Dialog](http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f6vrhubh9bj20aa03wmx2.jpg)\n`解决方法:` 引用v7包下的AlertDialog (android.support.v7.app.AlertDialog)\n<!-- more -->\n## 最近被异步请求坑了好几次了！(2016-7-28 14:21:18)\n`注意:`网络请求是异步的,因此在 response 获取到数据时直接为组件,或者其他用处,直接调用,否则可能由于网络访问速度较慢,导致空指针!\n因此:在接口成功response之后执行最安全!\n\n## RadioButton多行队列显示！！！(2016-8-2 18:06:47)\n>由于原生的RadioGroup只支持横向纵向排列RadioButton,所以只能自己造轮子!\n详情:见另一篇文章 --> [实现多行多列的RadioButton](/2016/08/02/实现多行多列的RadioButton/)\n\n\n\n## 当前页面有多个EditText软键盘回车样式一直是Next,导致无法关闭软键盘!(2016-7-27 13:10:39)\n>可以修改EditText的回车样式，即是把EditText的`ImeOptions`属性设置成不同的值，Enter键上就会显示不同的文字或图案\n\n```\nactionNone : 回车键，按下后光标到下一行\nactionGo ： Go，\nactionSearch ： 一个放大镜\nactionSend ： Send\nactionNext ： Next\nactionDone ： Done，隐藏软键盘，即使不是最后一个文本输入框\n\n例如:\n<EditText\n            android:id=\"@+id/transfer_other_edit\"\n            android:layout_width=\"162dp\"\n            android:layout_height=\"@dimen/height_33\"\n            android:layout_marginLeft=\"22dp\"\n            android:background=\"@drawable/card_edittxt_bg\"\n            android:inputType=\"number\"\n            android:paddingLeft=\"@dimen/padding_13\"\n            android:singleLine=\"true\"\n----------->android:imeOptions=\"actionDone\"\n            android:textColor=\"#3f3f3f\"\n            android:textSize=\"13sp\"/>\n```\n\n\n## 多次点击查询(迅速点击)，listView数据重复（2016-7-25 15:33:44）\n> 单身狗的手速亲测!(；′⌒`)\n\n`例如:`\n```\nRequestApi.qryReachargeHistory(Constants.PREFIX + msisdn, params, new StringCallback() {\n\n\t\t\t// ① 只要查询方法执行,那么这里立刻执行。所以如果手速快，就算clear也没用!\n\t\t\t//rechargeList.clear(); 这里是没用的\n            @Override\n            public void onResponse(String response) {\n                rechargeList.clear(); // ① 必须此处clear, rechargeList异步执行之前,同一个方法中clear才有效!\n                Logger.json(response);\n                JsonObject obj = new JsonParser().parse(response).getAsJsonObject();\n                if (!obj.get(\"rechargeList\").toString().equals(\"null\")) {\n                    JsonArray jsonArray = obj.get(\"rechargeList\").getAsJsonArray();\n                    for (int i = 0; i < jsonArray.size(); i++) {\n                        Map<String, Object> chargeInfo = new HashMap<>();\n                        JsonObject job = (JsonObject) jsonArray.get(i);\n                        chargeInfo.put(\"accountNumber\", /*Constants.PREFIX +*/ accountNumber);\n                        chargeInfo.put(\"amount\", job.get(\"amount\").getAsString());\n                        chargeInfo.put(\"tradeType\", job.get(\"tradeType\").getAsString());\n                        chargeInfo.put(\"extendDays\", job.get(\"extendDays\").getAsString());\n                        chargeInfo.put(\"tradeTime\", job.get(\"tradeTime\").getAsString());\n                        chargeInfo.put(\"tradeMethod\", job.get(\"tradeMethod\").getAsString());\n                        rechargeList.add(chargeInfo); // ②此处其实是异步的!!\n\n                    }\n\n                    myTopUpHistoryListViewAdapter.notifyDataSetChanged();\n\n                    if (rechargeList.size() <= 0) {\n                        nodataTipsView.setVisibility(View.VISIBLE);\n                        rechargeHistoryListview.setVisibility(View.GONE);\n                    } else {\n                        nodataTipsView.setVisibility(View.GONE);\n                        rechargeHistoryListview.setVisibility(View.VISIBLE);\n                    }\n                }\n            }\n\n            @Override\n            public void onError(Request request, Exception e) {\n                if (e != null) {\n                    Logger.e(e.getMessage());\n                } else {\n                    Logger.e(\"Exception is null\");\n                }\n            }\n        });\n    }\n```\n\n## 在`activity`的`oncreate`方法中使用`popupwindow`出现以下错误：\n\nandroid.view.WindowManager$BadTokenException: `Unable to add window --\ntoken null is not valid; is your activity running?` 真是醉啦,研究了好久无头绪。\n\n*爬完坑后*我自己写了个[引导的Demo](https://github.com/yangxiaoge/Yindao_Animation)\n\n`google`了好多文章找到了原因，[原文链接](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html):http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html\n`错误的原因是`：popupwindow要依附于一个activity，而activity的onCreate()还没执行完，哪来的popup让你弹出来嘛。\n`解决方法`:应把pop.showAtLocation(parent, Gravity.TOP,0, 0)这一句`移出`oncreate方法，在控件渲染完毕后再使用(按钮点击等时机执行)。\n\n当然还有绝佳的解决方法(`其实是不行的`, 引导页面一直循环!!!)：\n```\n@Override\npublic void onWindowFocusChanged(boolean hasFocus) {\n // TODO Auto-generated method stub\n super.onWindowFocusChanged(hasFocus);\n if(hasFocus){\n    newbieGuide();\n }\n}\n\n其中newbieGuide()是我自己定义的专门显示popupwindow的一个函数。\n当activity获得焦点之后，activity是加载完毕的了，这个方法的技巧性比较强，很难想到。\n`但是`,onWindowFocusChanged方法中这么执行会重复popup,具体要看需求,实在不行就用上面方法(按钮点击执行)!!~\n```\n","source":"_posts/Android-踩过的坑.md","raw":"---\ntitle: ' Android 踩过的坑'\ndate: 2016-06-23 11:02:22\ntags: Android\ncategories: Android\ntop: 8\n---\n## AlertDialog弹出框 按钮在高版本中看不见(其实是颜色为白色) (2016-8-16 18:24:05)\n在android 6.0中变成了下面这种\n![白底按钮,看不见.6.0测试机不在,手动把按钮涂鸦了~~](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f6vrosgtzuj209n03n3yf.jpg)\n实际的效果应该是如下的\n![正常的Dialog](http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f6vrhubh9bj20aa03wmx2.jpg)\n`解决方法:` 引用v7包下的AlertDialog (android.support.v7.app.AlertDialog)\n<!-- more -->\n## 最近被异步请求坑了好几次了！(2016-7-28 14:21:18)\n`注意:`网络请求是异步的,因此在 response 获取到数据时直接为组件,或者其他用处,直接调用,否则可能由于网络访问速度较慢,导致空指针!\n因此:在接口成功response之后执行最安全!\n\n## RadioButton多行队列显示！！！(2016-8-2 18:06:47)\n>由于原生的RadioGroup只支持横向纵向排列RadioButton,所以只能自己造轮子!\n详情:见另一篇文章 --> [实现多行多列的RadioButton](/2016/08/02/实现多行多列的RadioButton/)\n\n\n\n## 当前页面有多个EditText软键盘回车样式一直是Next,导致无法关闭软键盘!(2016-7-27 13:10:39)\n>可以修改EditText的回车样式，即是把EditText的`ImeOptions`属性设置成不同的值，Enter键上就会显示不同的文字或图案\n\n```\nactionNone : 回车键，按下后光标到下一行\nactionGo ： Go，\nactionSearch ： 一个放大镜\nactionSend ： Send\nactionNext ： Next\nactionDone ： Done，隐藏软键盘，即使不是最后一个文本输入框\n\n例如:\n<EditText\n            android:id=\"@+id/transfer_other_edit\"\n            android:layout_width=\"162dp\"\n            android:layout_height=\"@dimen/height_33\"\n            android:layout_marginLeft=\"22dp\"\n            android:background=\"@drawable/card_edittxt_bg\"\n            android:inputType=\"number\"\n            android:paddingLeft=\"@dimen/padding_13\"\n            android:singleLine=\"true\"\n----------->android:imeOptions=\"actionDone\"\n            android:textColor=\"#3f3f3f\"\n            android:textSize=\"13sp\"/>\n```\n\n\n## 多次点击查询(迅速点击)，listView数据重复（2016-7-25 15:33:44）\n> 单身狗的手速亲测!(；′⌒`)\n\n`例如:`\n```\nRequestApi.qryReachargeHistory(Constants.PREFIX + msisdn, params, new StringCallback() {\n\n\t\t\t// ① 只要查询方法执行,那么这里立刻执行。所以如果手速快，就算clear也没用!\n\t\t\t//rechargeList.clear(); 这里是没用的\n            @Override\n            public void onResponse(String response) {\n                rechargeList.clear(); // ① 必须此处clear, rechargeList异步执行之前,同一个方法中clear才有效!\n                Logger.json(response);\n                JsonObject obj = new JsonParser().parse(response).getAsJsonObject();\n                if (!obj.get(\"rechargeList\").toString().equals(\"null\")) {\n                    JsonArray jsonArray = obj.get(\"rechargeList\").getAsJsonArray();\n                    for (int i = 0; i < jsonArray.size(); i++) {\n                        Map<String, Object> chargeInfo = new HashMap<>();\n                        JsonObject job = (JsonObject) jsonArray.get(i);\n                        chargeInfo.put(\"accountNumber\", /*Constants.PREFIX +*/ accountNumber);\n                        chargeInfo.put(\"amount\", job.get(\"amount\").getAsString());\n                        chargeInfo.put(\"tradeType\", job.get(\"tradeType\").getAsString());\n                        chargeInfo.put(\"extendDays\", job.get(\"extendDays\").getAsString());\n                        chargeInfo.put(\"tradeTime\", job.get(\"tradeTime\").getAsString());\n                        chargeInfo.put(\"tradeMethod\", job.get(\"tradeMethod\").getAsString());\n                        rechargeList.add(chargeInfo); // ②此处其实是异步的!!\n\n                    }\n\n                    myTopUpHistoryListViewAdapter.notifyDataSetChanged();\n\n                    if (rechargeList.size() <= 0) {\n                        nodataTipsView.setVisibility(View.VISIBLE);\n                        rechargeHistoryListview.setVisibility(View.GONE);\n                    } else {\n                        nodataTipsView.setVisibility(View.GONE);\n                        rechargeHistoryListview.setVisibility(View.VISIBLE);\n                    }\n                }\n            }\n\n            @Override\n            public void onError(Request request, Exception e) {\n                if (e != null) {\n                    Logger.e(e.getMessage());\n                } else {\n                    Logger.e(\"Exception is null\");\n                }\n            }\n        });\n    }\n```\n\n## 在`activity`的`oncreate`方法中使用`popupwindow`出现以下错误：\n\nandroid.view.WindowManager$BadTokenException: `Unable to add window --\ntoken null is not valid; is your activity running?` 真是醉啦,研究了好久无头绪。\n\n*爬完坑后*我自己写了个[引导的Demo](https://github.com/yangxiaoge/Yindao_Animation)\n\n`google`了好多文章找到了原因，[原文链接](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html):http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html\n`错误的原因是`：popupwindow要依附于一个activity，而activity的onCreate()还没执行完，哪来的popup让你弹出来嘛。\n`解决方法`:应把pop.showAtLocation(parent, Gravity.TOP,0, 0)这一句`移出`oncreate方法，在控件渲染完毕后再使用(按钮点击等时机执行)。\n\n当然还有绝佳的解决方法(`其实是不行的`, 引导页面一直循环!!!)：\n```\n@Override\npublic void onWindowFocusChanged(boolean hasFocus) {\n // TODO Auto-generated method stub\n super.onWindowFocusChanged(hasFocus);\n if(hasFocus){\n    newbieGuide();\n }\n}\n\n其中newbieGuide()是我自己定义的专门显示popupwindow的一个函数。\n当activity获得焦点之后，activity是加载完毕的了，这个方法的技巧性比较强，很难想到。\n`但是`,onWindowFocusChanged方法中这么执行会重复popup,具体要看需求,实在不行就用上面方法(按钮点击执行)!!~\n```\n","slug":"Android-踩过的坑","published":1,"updated":"2016-09-20T10:55:53.000Z","_id":"citbcwfxm000cgwag78jfjhtv","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"AlertDialog弹出框-按钮在高版本中看不见-其实是颜色为白色-2016-8-16-18-24-05\"><a href=\"#AlertDialog弹出框-按钮在高版本中看不见-其实是颜色为白色-2016-8-16-18-24-05\" class=\"headerlink\" title=\"AlertDialog弹出框 按钮在高版本中看不见(其实是颜色为白色) (2016-8-16 18:24:05)\"></a>AlertDialog弹出框 按钮在高版本中看不见(其实是颜色为白色) (2016-8-16 18:24:05)</h2><p>在android 6.0中变成了下面这种<br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f6vrosgtzuj209n03n3yf.jpg\" alt=\"白底按钮,看不见.6.0测试机不在,手动把按钮涂鸦了~~\"><br>实际的效果应该是如下的<br><img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f6vrhubh9bj20aa03wmx2.jpg\" alt=\"正常的Dialog\"><br><code>解决方法:</code> 引用v7包下的AlertDialog (android.support.v7.app.AlertDialog)<br><a id=\"more\"></a></p>\n<h2 id=\"最近被异步请求坑了好几次了！-2016-7-28-14-21-18\"><a href=\"#最近被异步请求坑了好几次了！-2016-7-28-14-21-18\" class=\"headerlink\" title=\"最近被异步请求坑了好几次了！(2016-7-28 14:21:18)\"></a>最近被异步请求坑了好几次了！(2016-7-28 14:21:18)</h2><p><code>注意:</code>网络请求是异步的,因此在 response 获取到数据时直接为组件,或者其他用处,直接调用,否则可能由于网络访问速度较慢,导致空指针!<br>因此:在接口成功response之后执行最安全!</p>\n<h2 id=\"RadioButton多行队列显示！！！-2016-8-2-18-06-47\"><a href=\"#RadioButton多行队列显示！！！-2016-8-2-18-06-47\" class=\"headerlink\" title=\"RadioButton多行队列显示！！！(2016-8-2 18:06:47)\"></a>RadioButton多行队列显示！！！(2016-8-2 18:06:47)</h2><blockquote>\n<p>由于原生的RadioGroup只支持横向纵向排列RadioButton,所以只能自己造轮子!<br>详情:见另一篇文章 –&gt; <a href=\"/2016/08/02/实现多行多列的RadioButton/\">实现多行多列的RadioButton</a></p>\n</blockquote>\n<h2 id=\"当前页面有多个EditText软键盘回车样式一直是Next-导致无法关闭软键盘-2016-7-27-13-10-39\"><a href=\"#当前页面有多个EditText软键盘回车样式一直是Next-导致无法关闭软键盘-2016-7-27-13-10-39\" class=\"headerlink\" title=\"当前页面有多个EditText软键盘回车样式一直是Next,导致无法关闭软键盘!(2016-7-27 13:10:39)\"></a>当前页面有多个EditText软键盘回车样式一直是Next,导致无法关闭软键盘!(2016-7-27 13:10:39)</h2><blockquote>\n<p>可以修改EditText的回车样式，即是把EditText的<code>ImeOptions</code>属性设置成不同的值，Enter键上就会显示不同的文字或图案</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">actionNone</span> : 回车键，按下后光标到下一行</span><br><span class=\"line\">actionGo ： Go，</span><br><span class=\"line\">actionSearch ： 一个放大镜</span><br><span class=\"line\">actionSend ： Send</span><br><span class=\"line\">actionNext ： Next</span><br><span class=\"line\">actionDone ： Done，隐藏软键盘，即使不是最后一个文本输入框</span><br><span class=\"line\"></span><br><span class=\"line\">例如:</span><br><span class=\"line\">&lt;EditText</span><br><span class=\"line\">            android:id=<span class=\"string\">\"@+id/transfer_other_edit\"</span></span><br><span class=\"line\">            android:layout_width=<span class=\"string\">\"162dp\"</span></span><br><span class=\"line\">            android:layout_height=<span class=\"string\">\"<span class=\"variable\">@dimen</span>/height_33\"</span></span><br><span class=\"line\">            android:layout_marginLeft=<span class=\"string\">\"22dp\"</span></span><br><span class=\"line\">            android:background=<span class=\"string\">\"<span class=\"variable\">@drawable</span>/card_edittxt_bg\"</span></span><br><span class=\"line\">            android:inputType=<span class=\"string\">\"number\"</span></span><br><span class=\"line\">            android:paddingLeft=<span class=\"string\">\"<span class=\"variable\">@dimen</span>/padding_13\"</span></span><br><span class=\"line\">            android:singleLine=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">-----------&gt;android:imeOptions=<span class=\"string\">\"actionDone\"</span></span><br><span class=\"line\">            android:textColor=<span class=\"string\">\"#3f3f3f\"</span></span><br><span class=\"line\">            android:textSize=<span class=\"string\">\"13sp\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"多次点击查询-迅速点击-，listView数据重复（2016-7-25-15-33-44）\"><a href=\"#多次点击查询-迅速点击-，listView数据重复（2016-7-25-15-33-44）\" class=\"headerlink\" title=\"多次点击查询(迅速点击)，listView数据重复（2016-7-25 15:33:44）\"></a>多次点击查询(迅速点击)，listView数据重复（2016-7-25 15:33:44）</h2><blockquote>\n<p>单身狗的手速亲测!(；′⌒`)</p>\n</blockquote>\n<p><code>例如:</code><br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RequestApi.qryReachargeHistory(Constants.PREFIX + msisdn, params, <span class=\"keyword\">new</span> StringCallback() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// ① 只要查询方法执行,那么这里立刻执行。所以如果手速快，就算clear也没用!</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//rechargeList.clear(); 这里是没用的</span></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onResponse(<span class=\"keyword\">String</span> response) &#123;</span><br><span class=\"line\">                rechargeList.<span class=\"built_in\">clear</span>(); <span class=\"comment\">// ① 必须此处clear, rechargeList异步执行之前,同一个方法中clear才有效!</span></span><br><span class=\"line\">                Logger.json(response);</span><br><span class=\"line\">                JsonObject obj = <span class=\"keyword\">new</span> JsonParser().parse(response).getAsJsonObject();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!obj.<span class=\"built_in\">get</span>(<span class=\"string\">\"rechargeList\"</span>).toString().equals(<span class=\"string\">\"null\"</span>)) &#123;</span><br><span class=\"line\">                    JsonArray jsonArray = obj.<span class=\"built_in\">get</span>(<span class=\"string\">\"rechargeList\"</span>).getAsJsonArray();</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; jsonArray.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">                        Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">Object</span>&gt; chargeInfo = <span class=\"keyword\">new</span> <span class=\"keyword\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">                        JsonObject job = (JsonObject) jsonArray.<span class=\"built_in\">get</span>(i);</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"accountNumber\"</span>, <span class=\"comment\">/*Constants.PREFIX +*/</span> accountNumber);</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"amount\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"amount\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"tradeType\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"tradeType\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"extendDays\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"extendDays\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"tradeTime\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"tradeTime\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"tradeMethod\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"tradeMethod\"</span>).getAsString());</span><br><span class=\"line\">                        rechargeList.<span class=\"built_in\">add</span>(chargeInfo); <span class=\"comment\">// ②此处其实是异步的!!</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    myTopUpHistoryListViewAdapter.notifyDataSetChanged();</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (rechargeList.<span class=\"built_in\">size</span>() &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        nodataTipsView.setVisibility(View.VISIBLE);</span><br><span class=\"line\">                        rechargeHistoryListview.setVisibility(View.GONE);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        nodataTipsView.setVisibility(View.GONE);</span><br><span class=\"line\">                        rechargeHistoryListview.setVisibility(View.VISIBLE);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onError(Request request, Exception e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    Logger.e(e.getMessage());</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    Logger.e(<span class=\"string\">\"Exception is null\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"在activity的oncreate方法中使用popupwindow出现以下错误：\"><a href=\"#在activity的oncreate方法中使用popupwindow出现以下错误：\" class=\"headerlink\" title=\"在activity的oncreate方法中使用popupwindow出现以下错误：\"></a>在<code>activity</code>的<code>oncreate</code>方法中使用<code>popupwindow</code>出现以下错误：</h2><p>android.view.WindowManager$BadTokenException: <code>Unable to add window --\ntoken null is not valid; is your activity running?</code> 真是醉啦,研究了好久无头绪。</p>\n<p><em>爬完坑后</em>我自己写了个<a href=\"https://github.com/yangxiaoge/Yindao_Animation\" target=\"_blank\" rel=\"external\">引导的Demo</a></p>\n<p><code>google</code>了好多文章找到了原因，<a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html\" target=\"_blank\" rel=\"external\">原文链接</a>:<a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html\" target=\"_blank\" rel=\"external\">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html</a><br><code>错误的原因是</code>：popupwindow要依附于一个activity，而activity的onCreate()还没执行完，哪来的popup让你弹出来嘛。<br><code>解决方法</code>:应把pop.showAtLocation(parent, Gravity.TOP,0, 0)这一句<code>移出</code>oncreate方法，在控件渲染完毕后再使用(按钮点击等时机执行)。</p>\n<p>当然还有绝佳的解决方法(<code>其实是不行的</code>, 引导页面一直循环!!!)：<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onWindowFocusChanged</span><span class=\"params\">(<span class=\"keyword\">boolean</span> hasFocus)</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\"> <span class=\"keyword\">super</span>.onWindowFocusChanged(hasFocus);</span><br><span class=\"line\"> <span class=\"keyword\">if</span>(hasFocus)&#123;</span><br><span class=\"line\">    newbieGuide();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">其中newbieGuide()是我自己定义的专门显示popupwindow的一个函数。</span><br><span class=\"line\">当activity获得焦点之后，activity是加载完毕的了，这个方法的技巧性比较强，很难想到。</span><br><span class=\"line\">`但是`,onWindowFocusChanged方法中这么执行会重复popup,具体要看需求,实在不行就用上面方法(按钮点击执行)!!~</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h2 id=\"AlertDialog弹出框-按钮在高版本中看不见-其实是颜色为白色-2016-8-16-18-24-05\"><a href=\"#AlertDialog弹出框-按钮在高版本中看不见-其实是颜色为白色-2016-8-16-18-24-05\" class=\"headerlink\" title=\"AlertDialog弹出框 按钮在高版本中看不见(其实是颜色为白色) (2016-8-16 18:24:05)\"></a>AlertDialog弹出框 按钮在高版本中看不见(其实是颜色为白色) (2016-8-16 18:24:05)</h2><p>在android 6.0中变成了下面这种<br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f6vrosgtzuj209n03n3yf.jpg\" alt=\"白底按钮,看不见.6.0测试机不在,手动把按钮涂鸦了~~\"><br>实际的效果应该是如下的<br><img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f6vrhubh9bj20aa03wmx2.jpg\" alt=\"正常的Dialog\"><br><code>解决方法:</code> 引用v7包下的AlertDialog (android.support.v7.app.AlertDialog)<br>","more":"</p>\n<h2 id=\"最近被异步请求坑了好几次了！-2016-7-28-14-21-18\"><a href=\"#最近被异步请求坑了好几次了！-2016-7-28-14-21-18\" class=\"headerlink\" title=\"最近被异步请求坑了好几次了！(2016-7-28 14:21:18)\"></a>最近被异步请求坑了好几次了！(2016-7-28 14:21:18)</h2><p><code>注意:</code>网络请求是异步的,因此在 response 获取到数据时直接为组件,或者其他用处,直接调用,否则可能由于网络访问速度较慢,导致空指针!<br>因此:在接口成功response之后执行最安全!</p>\n<h2 id=\"RadioButton多行队列显示！！！-2016-8-2-18-06-47\"><a href=\"#RadioButton多行队列显示！！！-2016-8-2-18-06-47\" class=\"headerlink\" title=\"RadioButton多行队列显示！！！(2016-8-2 18:06:47)\"></a>RadioButton多行队列显示！！！(2016-8-2 18:06:47)</h2><blockquote>\n<p>由于原生的RadioGroup只支持横向纵向排列RadioButton,所以只能自己造轮子!<br>详情:见另一篇文章 –&gt; <a href=\"/2016/08/02/实现多行多列的RadioButton/\">实现多行多列的RadioButton</a></p>\n</blockquote>\n<h2 id=\"当前页面有多个EditText软键盘回车样式一直是Next-导致无法关闭软键盘-2016-7-27-13-10-39\"><a href=\"#当前页面有多个EditText软键盘回车样式一直是Next-导致无法关闭软键盘-2016-7-27-13-10-39\" class=\"headerlink\" title=\"当前页面有多个EditText软键盘回车样式一直是Next,导致无法关闭软键盘!(2016-7-27 13:10:39)\"></a>当前页面有多个EditText软键盘回车样式一直是Next,导致无法关闭软键盘!(2016-7-27 13:10:39)</h2><blockquote>\n<p>可以修改EditText的回车样式，即是把EditText的<code>ImeOptions</code>属性设置成不同的值，Enter键上就会显示不同的文字或图案</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">actionNone</span> : 回车键，按下后光标到下一行</span><br><span class=\"line\">actionGo ： Go，</span><br><span class=\"line\">actionSearch ： 一个放大镜</span><br><span class=\"line\">actionSend ： Send</span><br><span class=\"line\">actionNext ： Next</span><br><span class=\"line\">actionDone ： Done，隐藏软键盘，即使不是最后一个文本输入框</span><br><span class=\"line\"></span><br><span class=\"line\">例如:</span><br><span class=\"line\">&lt;EditText</span><br><span class=\"line\">            android:id=<span class=\"string\">\"@+id/transfer_other_edit\"</span></span><br><span class=\"line\">            android:layout_width=<span class=\"string\">\"162dp\"</span></span><br><span class=\"line\">            android:layout_height=<span class=\"string\">\"<span class=\"variable\">@dimen</span>/height_33\"</span></span><br><span class=\"line\">            android:layout_marginLeft=<span class=\"string\">\"22dp\"</span></span><br><span class=\"line\">            android:background=<span class=\"string\">\"<span class=\"variable\">@drawable</span>/card_edittxt_bg\"</span></span><br><span class=\"line\">            android:inputType=<span class=\"string\">\"number\"</span></span><br><span class=\"line\">            android:paddingLeft=<span class=\"string\">\"<span class=\"variable\">@dimen</span>/padding_13\"</span></span><br><span class=\"line\">            android:singleLine=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">-----------&gt;android:imeOptions=<span class=\"string\">\"actionDone\"</span></span><br><span class=\"line\">            android:textColor=<span class=\"string\">\"#3f3f3f\"</span></span><br><span class=\"line\">            android:textSize=<span class=\"string\">\"13sp\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"多次点击查询-迅速点击-，listView数据重复（2016-7-25-15-33-44）\"><a href=\"#多次点击查询-迅速点击-，listView数据重复（2016-7-25-15-33-44）\" class=\"headerlink\" title=\"多次点击查询(迅速点击)，listView数据重复（2016-7-25 15:33:44）\"></a>多次点击查询(迅速点击)，listView数据重复（2016-7-25 15:33:44）</h2><blockquote>\n<p>单身狗的手速亲测!(；′⌒`)</p>\n</blockquote>\n<p><code>例如:</code><br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RequestApi.qryReachargeHistory(Constants.PREFIX + msisdn, params, <span class=\"keyword\">new</span> StringCallback() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// ① 只要查询方法执行,那么这里立刻执行。所以如果手速快，就算clear也没用!</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//rechargeList.clear(); 这里是没用的</span></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onResponse(<span class=\"keyword\">String</span> response) &#123;</span><br><span class=\"line\">                rechargeList.<span class=\"built_in\">clear</span>(); <span class=\"comment\">// ① 必须此处clear, rechargeList异步执行之前,同一个方法中clear才有效!</span></span><br><span class=\"line\">                Logger.json(response);</span><br><span class=\"line\">                JsonObject obj = <span class=\"keyword\">new</span> JsonParser().parse(response).getAsJsonObject();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!obj.<span class=\"built_in\">get</span>(<span class=\"string\">\"rechargeList\"</span>).toString().equals(<span class=\"string\">\"null\"</span>)) &#123;</span><br><span class=\"line\">                    JsonArray jsonArray = obj.<span class=\"built_in\">get</span>(<span class=\"string\">\"rechargeList\"</span>).getAsJsonArray();</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; jsonArray.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">                        Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">Object</span>&gt; chargeInfo = <span class=\"keyword\">new</span> <span class=\"keyword\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">                        JsonObject job = (JsonObject) jsonArray.<span class=\"built_in\">get</span>(i);</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"accountNumber\"</span>, <span class=\"comment\">/*Constants.PREFIX +*/</span> accountNumber);</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"amount\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"amount\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"tradeType\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"tradeType\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"extendDays\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"extendDays\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"tradeTime\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"tradeTime\"</span>).getAsString());</span><br><span class=\"line\">                        chargeInfo.put(<span class=\"string\">\"tradeMethod\"</span>, job.<span class=\"built_in\">get</span>(<span class=\"string\">\"tradeMethod\"</span>).getAsString());</span><br><span class=\"line\">                        rechargeList.<span class=\"built_in\">add</span>(chargeInfo); <span class=\"comment\">// ②此处其实是异步的!!</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    myTopUpHistoryListViewAdapter.notifyDataSetChanged();</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (rechargeList.<span class=\"built_in\">size</span>() &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        nodataTipsView.setVisibility(View.VISIBLE);</span><br><span class=\"line\">                        rechargeHistoryListview.setVisibility(View.GONE);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        nodataTipsView.setVisibility(View.GONE);</span><br><span class=\"line\">                        rechargeHistoryListview.setVisibility(View.VISIBLE);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onError(Request request, Exception e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    Logger.e(e.getMessage());</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    Logger.e(<span class=\"string\">\"Exception is null\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"在activity的oncreate方法中使用popupwindow出现以下错误：\"><a href=\"#在activity的oncreate方法中使用popupwindow出现以下错误：\" class=\"headerlink\" title=\"在activity的oncreate方法中使用popupwindow出现以下错误：\"></a>在<code>activity</code>的<code>oncreate</code>方法中使用<code>popupwindow</code>出现以下错误：</h2><p>android.view.WindowManager$BadTokenException: <code>Unable to add window --\ntoken null is not valid; is your activity running?</code> 真是醉啦,研究了好久无头绪。</p>\n<p><em>爬完坑后</em>我自己写了个<a href=\"https://github.com/yangxiaoge/Yindao_Animation\">引导的Demo</a></p>\n<p><code>google</code>了好多文章找到了原因，<a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html\">原文链接</a>:<a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html\">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0304/963.html</a><br><code>错误的原因是</code>：popupwindow要依附于一个activity，而activity的onCreate()还没执行完，哪来的popup让你弹出来嘛。<br><code>解决方法</code>:应把pop.showAtLocation(parent, Gravity.TOP,0, 0)这一句<code>移出</code>oncreate方法，在控件渲染完毕后再使用(按钮点击等时机执行)。</p>\n<p>当然还有绝佳的解决方法(<code>其实是不行的</code>, 引导页面一直循环!!!)：<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onWindowFocusChanged</span><span class=\"params\">(<span class=\"keyword\">boolean</span> hasFocus)</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\"> <span class=\"keyword\">super</span>.onWindowFocusChanged(hasFocus);</span><br><span class=\"line\"> <span class=\"keyword\">if</span>(hasFocus)&#123;</span><br><span class=\"line\">    newbieGuide();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">其中newbieGuide()是我自己定义的专门显示popupwindow的一个函数。</span><br><span class=\"line\">当activity获得焦点之后，activity是加载完毕的了，这个方法的技巧性比较强，很难想到。</span><br><span class=\"line\">`但是`,onWindowFocusChanged方法中这么执行会重复popup,具体要看需求,实在不行就用上面方法(按钮点击执行)!!~</span><br></pre></td></tr></table></figure></p>"},{"title":"Android Studio常用的引用jar整理 for 自用","date":"2015-05-10T07:29:50.000Z","_content":"\n## 1. [orhanobut/logger](https://github.com/orhanobut/logger)\n\n```\nallprojects {\n    repositories {\n        jcenter()\n        // 项目gradle中添加 jitpack仓库\n        maven { url \"https://jitpack.io\" }\n    }\n}\n\ndependencies {\n        //  moudle/gradle中添加\n  \t  compile 'com.github.orhanobut:logger:1.12'\n}\n```\n<!-- more -->\n**注意**: `Logger.init(YOUR_TAG)`为初始化入口\n\n## 2. [orhanobut/dialogplus](https://github.com/orhanobut/dialogplus)\n\n```\ncompile 'com.orhanobut:dialogplus:1.11@aar'\n```\n> 例如:\n\n```\n\tprivate DialogPlus generateDialog(String tag) {\n\n        View contentView = this.getActivity().getLayoutInflater().inflate(R.layout.bundle_filelter_pop, null);\n\n        bundleFilterList = (ListView) contentView.findViewById(R.id.bundle_filter_list);\n\n        cancelBundleFilterBtn = (TextView) contentView.findViewById(R.id.bundle_selfilter_cancel_btn);\n\n        if (catalogs != null && !catalogs.isEmpty()) {\n            ArrayAdapter<String> adapter = new ArrayAdapter<>(this.getActivity(), R.layout.simple_list_item_1_center, catalogs);\n            bundleFilterList.setAdapter(adapter);\n        }\n\n        DialogPlus dialog = DialogPlus.newDialog(this.getActivity())\n                .setContentHolder(new ViewHolder(contentView))\n                .create();\n        return dialog;\n}\n```\n`效果图如下:`\n![dialogplus.png](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f41medvgiuj20ah0iawfb.jpg)\n\n## 3. [懒人框架 ](https://github.com/JakeWharton/butterknife)\n\n```\ncompile 'com.jakewharton:butterknife:7.0.0'\n```\n\n## 4. [http封装-hongyang](https://github.com/hongyangAndroid/okhttp-utils)\n\n```\ncompile 'com.zhy:okhttputils:2.4.1'\n```\n\n## 5. [Gson](https://github.com/google/gson)\n\n```\ncompile 'com.google.code.gson:gson:2.2.4'\n```\n\n","source":"_posts/Android-studio常用的引用jar整理-for-自用.md","raw":"---\ntitle: Android Studio常用的引用jar整理 for 自用\ndate: 2015-05-10 15:29:50\ntags: [Android Studio,Gradle]\ncategories: Android\n---\n\n## 1. [orhanobut/logger](https://github.com/orhanobut/logger)\n\n```\nallprojects {\n    repositories {\n        jcenter()\n        // 项目gradle中添加 jitpack仓库\n        maven { url \"https://jitpack.io\" }\n    }\n}\n\ndependencies {\n        //  moudle/gradle中添加\n  \t  compile 'com.github.orhanobut:logger:1.12'\n}\n```\n<!-- more -->\n**注意**: `Logger.init(YOUR_TAG)`为初始化入口\n\n## 2. [orhanobut/dialogplus](https://github.com/orhanobut/dialogplus)\n\n```\ncompile 'com.orhanobut:dialogplus:1.11@aar'\n```\n> 例如:\n\n```\n\tprivate DialogPlus generateDialog(String tag) {\n\n        View contentView = this.getActivity().getLayoutInflater().inflate(R.layout.bundle_filelter_pop, null);\n\n        bundleFilterList = (ListView) contentView.findViewById(R.id.bundle_filter_list);\n\n        cancelBundleFilterBtn = (TextView) contentView.findViewById(R.id.bundle_selfilter_cancel_btn);\n\n        if (catalogs != null && !catalogs.isEmpty()) {\n            ArrayAdapter<String> adapter = new ArrayAdapter<>(this.getActivity(), R.layout.simple_list_item_1_center, catalogs);\n            bundleFilterList.setAdapter(adapter);\n        }\n\n        DialogPlus dialog = DialogPlus.newDialog(this.getActivity())\n                .setContentHolder(new ViewHolder(contentView))\n                .create();\n        return dialog;\n}\n```\n`效果图如下:`\n![dialogplus.png](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f41medvgiuj20ah0iawfb.jpg)\n\n## 3. [懒人框架 ](https://github.com/JakeWharton/butterknife)\n\n```\ncompile 'com.jakewharton:butterknife:7.0.0'\n```\n\n## 4. [http封装-hongyang](https://github.com/hongyangAndroid/okhttp-utils)\n\n```\ncompile 'com.zhy:okhttputils:2.4.1'\n```\n\n## 5. [Gson](https://github.com/google/gson)\n\n```\ncompile 'com.google.code.gson:gson:2.2.4'\n```\n\n","slug":"Android-studio常用的引用jar整理-for-自用","published":1,"updated":"2016-07-15T06:53:30.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfxr000fgwagopxwwu9j","content":"<h2 id=\"1-orhanobut-logger\"><a href=\"#1-orhanobut-logger\" class=\"headerlink\" title=\"1. orhanobut/logger\"></a>1. <a href=\"https://github.com/orhanobut/logger\" target=\"_blank\" rel=\"external\">orhanobut/logger</a></h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">        <span class=\"comment\">// 项目gradle中添加 jitpack仓库</span></span><br><span class=\"line\">        maven &#123; url <span class=\"string\">\"https://jitpack.io\"</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//  moudle/gradle中添加</span></span><br><span class=\"line\">  \t  <span class=\"keyword\">compile</span> <span class=\"string\">'com.github.orhanobut:logger:1.12'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p><strong>注意</strong>: <code>Logger.init(YOUR_TAG)</code>为初始化入口</p>\n<h2 id=\"2-orhanobut-dialogplus\"><a href=\"#2-orhanobut-dialogplus\" class=\"headerlink\" title=\"2. orhanobut/dialogplus\"></a>2. <a href=\"https://github.com/orhanobut/dialogplus\" target=\"_blank\" rel=\"external\">orhanobut/dialogplus</a></h2><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">compile</span> <span class=\"string\">'com.orhanobut:dialogplus:1.11<span class=\"variable\">@aar</span>'</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>例如:</p>\n</blockquote>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tprivate <span class=\"keyword\">DialogPlus </span>generateDialog(String tag) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        View contentView = this.getActivity().getLayoutInflater().inflate(R.layout.<span class=\"keyword\">bundle_filelter_pop, </span>null)<span class=\"comment\">;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">bundleFilterList </span>= (ListView) contentView.findViewById(R.id.<span class=\"keyword\">bundle_filter_list);</span><br><span class=\"line\"></span></span><br><span class=\"line\">        cancelBundleFilterBtn = (TextView) contentView.findViewById(R.id.<span class=\"keyword\">bundle_selfilter_cancel_btn);</span><br><span class=\"line\"></span></span><br><span class=\"line\">        if (catalogs != null &amp;&amp; !catalogs.isEmpty()) &#123;</span><br><span class=\"line\">            ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(this.getActivity(), R.layout.simple_list_item_1_center, catalogs)<span class=\"comment\">;</span></span><br><span class=\"line\">            <span class=\"keyword\">bundleFilterList.setAdapter(adapter);</span><br><span class=\"line\"></span>        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">DialogPlus </span><span class=\"keyword\">dialog </span>= <span class=\"keyword\">DialogPlus.newDialog(this.getActivity())</span><br><span class=\"line\"></span>                .setContentHolder(new ViewHolder(contentView))</span><br><span class=\"line\">                .create()<span class=\"comment\">;</span></span><br><span class=\"line\">        return <span class=\"keyword\">dialog;</span><br><span class=\"line\"></span>&#125;</span><br></pre></td></tr></table></figure>\n<p><code>效果图如下:</code><br><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f41medvgiuj20ah0iawfb.jpg\" alt=\"dialogplus.png\"></p>\n<h2 id=\"3-懒人框架\"><a href=\"#3-懒人框架\" class=\"headerlink\" title=\"3. 懒人框架 \"></a>3. <a href=\"https://github.com/JakeWharton/butterknife\" target=\"_blank\" rel=\"external\">懒人框架 </a></h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.jakewharton:butterknife:7.0.0'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-http封装-hongyang\"><a href=\"#4-http封装-hongyang\" class=\"headerlink\" title=\"4. http封装-hongyang\"></a>4. <a href=\"https://github.com/hongyangAndroid/okhttp-utils\" target=\"_blank\" rel=\"external\">http封装-hongyang</a></h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.zhy:okhttputils:2.4.1'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Gson\"><a href=\"#5-Gson\" class=\"headerlink\" title=\"5. Gson\"></a>5. <a href=\"https://github.com/google/gson\" target=\"_blank\" rel=\"external\">Gson</a></h2><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> 'com.google.<span class=\"built_in\">code</span>.gson:gson:<span class=\"number\">2.2</span><span class=\"number\">.4</span>'</span><br></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"1-orhanobut-logger\"><a href=\"#1-orhanobut-logger\" class=\"headerlink\" title=\"1. orhanobut/logger\"></a>1. <a href=\"https://github.com/orhanobut/logger\">orhanobut/logger</a></h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">        <span class=\"comment\">// 项目gradle中添加 jitpack仓库</span></span><br><span class=\"line\">        maven &#123; url <span class=\"string\">\"https://jitpack.io\"</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//  moudle/gradle中添加</span></span><br><span class=\"line\">  \t  <span class=\"keyword\">compile</span> <span class=\"string\">'com.github.orhanobut:logger:1.12'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<p><strong>注意</strong>: <code>Logger.init(YOUR_TAG)</code>为初始化入口</p>\n<h2 id=\"2-orhanobut-dialogplus\"><a href=\"#2-orhanobut-dialogplus\" class=\"headerlink\" title=\"2. orhanobut/dialogplus\"></a>2. <a href=\"https://github.com/orhanobut/dialogplus\">orhanobut/dialogplus</a></h2><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">compile</span> <span class=\"string\">'com.orhanobut:dialogplus:1.11<span class=\"variable\">@aar</span>'</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>例如:</p>\n</blockquote>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tprivate <span class=\"keyword\">DialogPlus </span>generateDialog(String tag) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        View contentView = this.getActivity().getLayoutInflater().inflate(R.layout.<span class=\"keyword\">bundle_filelter_pop, </span>null)<span class=\"comment\">;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">bundleFilterList </span>= (ListView) contentView.findViewById(R.id.<span class=\"keyword\">bundle_filter_list);</span><br><span class=\"line\"></span></span><br><span class=\"line\">        cancelBundleFilterBtn = (TextView) contentView.findViewById(R.id.<span class=\"keyword\">bundle_selfilter_cancel_btn);</span><br><span class=\"line\"></span></span><br><span class=\"line\">        if (catalogs != null &amp;&amp; !catalogs.isEmpty()) &#123;</span><br><span class=\"line\">            ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(this.getActivity(), R.layout.simple_list_item_1_center, catalogs)<span class=\"comment\">;</span></span><br><span class=\"line\">            <span class=\"keyword\">bundleFilterList.setAdapter(adapter);</span><br><span class=\"line\"></span>        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">DialogPlus </span><span class=\"keyword\">dialog </span>= <span class=\"keyword\">DialogPlus.newDialog(this.getActivity())</span><br><span class=\"line\"></span>                .setContentHolder(new ViewHolder(contentView))</span><br><span class=\"line\">                .create()<span class=\"comment\">;</span></span><br><span class=\"line\">        return <span class=\"keyword\">dialog;</span><br><span class=\"line\"></span>&#125;</span><br></pre></td></tr></table></figure>\n<p><code>效果图如下:</code><br><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f41medvgiuj20ah0iawfb.jpg\" alt=\"dialogplus.png\"></p>\n<h2 id=\"3-懒人框架\"><a href=\"#3-懒人框架\" class=\"headerlink\" title=\"3. 懒人框架 \"></a>3. <a href=\"https://github.com/JakeWharton/butterknife\">懒人框架 </a></h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.jakewharton:butterknife:7.0.0'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-http封装-hongyang\"><a href=\"#4-http封装-hongyang\" class=\"headerlink\" title=\"4. http封装-hongyang\"></a>4. <a href=\"https://github.com/hongyangAndroid/okhttp-utils\">http封装-hongyang</a></h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.zhy:okhttputils:2.4.1'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Gson\"><a href=\"#5-Gson\" class=\"headerlink\" title=\"5. Gson\"></a>5. <a href=\"https://github.com/google/gson\">Gson</a></h2><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> 'com.google.<span class=\"built_in\">code</span>.gson:gson:<span class=\"number\">2.2</span><span class=\"number\">.4</span>'</span><br></pre></td></tr></table></figure>"},{"title":"Android中使用Gson解析稍复杂的JSON数据","date":"2016-05-05T11:23:35.000Z","_content":"![](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f3lr401paxj20sg0c677k.jpg)\n\n> 摘抄自 http://www.jianshu.com/p/3b8ef7162e69\n\n# 一、Json简介\nJSON官网(中文版)：http://www.json.org/json-zh.html\n\n**JSON(JavaScript Object Notation)**是一种轻量级(轻量级？简单、易操作、快捷)的数据交换格式。主要目的就是给出一套通用的数据格式，大家按照这种格式定义自己的数据，方便数据的交换。特点是(相对来说) **易于人阅读和编写，易于机器解析和生成** 。\n<!-- more -->\n**Rules**：\n>* “名/值”对的集合（A collection of name/value pairs）。不同的语言中，它被理解为**对象（object）**，纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。\n* 值的有序列表（An ordered list of values）。在大部分语言中，它被理解为**数组（array）**。\n\n\n**JSON可以有以下格式**：\n>1.对象是一个无序的“ ‘名称/值’ 对”集合。一个对象以“{”（左括号）开始，“}”（右括号）结束。每个“名称”后跟一个“:”（冒号）；“‘名称/值’ 对”之间使用“,”（逗号）分隔。\n\n![object的  名称 /值  结构](http://ww3.sinaimg.cn/mw690/c05ae6b6jw1f3lle35bv5g20gm035a9w.gif)\n>2.数组是值（value）的有序集合。一个数组以“[”（左中括号）开始，“]”（右中括号）结束。值之间使用“,”（逗号）分隔。\n\n ![“值的类型”可以是哪些数据类型](http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhba2xug20gm07qgli.gif)\n \n*以上是最基本的json知识，想深入了解的，请移步[官网](http://www.json.org/json-zh.html)。*\n\n下面举个栗子给大家尝尝：\n```\n{\n    \"type\": \"forecast1d\",\n    \"weatherinfo\": [\n        {\n            \"city\": \"北京\",\n            \"cityid\": \"1\",\n            \"temp1\": \"22℃\",\n            \"temp2\": \"10℃\",\n            \"weather\": \"晴\",\n            \"ptime\": \"11:00\"\n        },\n        {\n            \"city\": \"上海\",\n            \"cityid\": \"2\",\n            \"temp1\": \"24℃\",\n            \"temp2\": \"12℃\",\n            \"weather\": \"晴\",\n            \"ptime\": \"11:00\"\n        }\n    ]\n}\n```\n\n**栗子好难看，上截图(截图太小看不清...戳这里[看大图](http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg))：**\n\n ![一个简单的JSON串](http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg)\n \n**NOTE**：左侧为JSON字符串，右侧为解析结构，方便查看。\n**福利**：截图是我在一个在线[JSON Editor](http://jsoneditoronline.org/index.html)上截的，体验一下-->JSON Editor，很好用推荐给大家。\n\n# 二、使用Gson在Android中解析Json\n认清了JSON，就要解析它。\n\n**你可以使用的JSON库**：\n\n>**JSONObject**(源自Android官方)、\n**Gson**(源自Google)、\n**Jackson**(第三方开源库)、\n**FastJSON**(第三方开源库)、\n等。。。\n\n本篇文章使用Gson解析JSON，Gson地址：http://code.google.com/p/google-gson/\n\n![google-gson ](http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhcc3saj20bw024glq.jpg)\n无法下载？百度云分享一下[http://pan.baidu.com/s/1kTur5xd](http://pan.baidu.com/s/1kTur5xd),提取密码:5oae\n\n根据JSON串的结构定义一个类(这里我们把这个类叫Result)，我们直接把得到的JSON串解析成这个类。class Result定义如下：\n```\nimport java.util.List;\n\npublic class Result {\n\n    public String type;\n\n    public List<Info> weatherinfo;\n\n    public static class Info {\n\n        public String city;\n\n        public String cityid;\n\n        public String temp1;\n\n        public String temp2;\n\n        public String weather;\n\n        public String ptime;\n\n    }\n\n}\n\n```\n![class Result](http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhdgw1cj208u0afmyd.jpg)\n\n定义好了待解析成的class之后，接下来使用Gson解析JSON串就可以了：\n>Gson gson = new Gson();\nResult r = gson.fromJson(jsonData, Result.class);\n\n# `So easy!`\n\n## *难点*：\n`如果是Android Studio开发的,用GsonFormat插件可以自动生成JavaBean`\n1. 如何定义这个待解析成的类？其实很简单，看到JSON结构里面有{ }你就定义一个类，看到[ ]你就定义一个List即可，最后只剩下最简单的如String、int等基本类型直接定义就好。\n2. 内部嵌套的类，请使用public static class className { }。\n3. 类内部的属性名，必须与JSON串里面的Key名称保持一致。这三点请自行对照我们上面举的Result的栗子，都有对应。\n\n","source":"_posts/Android中使用Gson解析稍复杂的JSON数据.md","raw":"---\ntitle: Android中使用Gson解析稍复杂的JSON数据\ndate: 2016-05-05 19:23:35\ntags: [Json,Android]\ncategories: Android\n---\n![](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f3lr401paxj20sg0c677k.jpg)\n\n> 摘抄自 http://www.jianshu.com/p/3b8ef7162e69\n\n# 一、Json简介\nJSON官网(中文版)：http://www.json.org/json-zh.html\n\n**JSON(JavaScript Object Notation)**是一种轻量级(轻量级？简单、易操作、快捷)的数据交换格式。主要目的就是给出一套通用的数据格式，大家按照这种格式定义自己的数据，方便数据的交换。特点是(相对来说) **易于人阅读和编写，易于机器解析和生成** 。\n<!-- more -->\n**Rules**：\n>* “名/值”对的集合（A collection of name/value pairs）。不同的语言中，它被理解为**对象（object）**，纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。\n* 值的有序列表（An ordered list of values）。在大部分语言中，它被理解为**数组（array）**。\n\n\n**JSON可以有以下格式**：\n>1.对象是一个无序的“ ‘名称/值’ 对”集合。一个对象以“{”（左括号）开始，“}”（右括号）结束。每个“名称”后跟一个“:”（冒号）；“‘名称/值’ 对”之间使用“,”（逗号）分隔。\n\n![object的  名称 /值  结构](http://ww3.sinaimg.cn/mw690/c05ae6b6jw1f3lle35bv5g20gm035a9w.gif)\n>2.数组是值（value）的有序集合。一个数组以“[”（左中括号）开始，“]”（右中括号）结束。值之间使用“,”（逗号）分隔。\n\n ![“值的类型”可以是哪些数据类型](http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhba2xug20gm07qgli.gif)\n \n*以上是最基本的json知识，想深入了解的，请移步[官网](http://www.json.org/json-zh.html)。*\n\n下面举个栗子给大家尝尝：\n```\n{\n    \"type\": \"forecast1d\",\n    \"weatherinfo\": [\n        {\n            \"city\": \"北京\",\n            \"cityid\": \"1\",\n            \"temp1\": \"22℃\",\n            \"temp2\": \"10℃\",\n            \"weather\": \"晴\",\n            \"ptime\": \"11:00\"\n        },\n        {\n            \"city\": \"上海\",\n            \"cityid\": \"2\",\n            \"temp1\": \"24℃\",\n            \"temp2\": \"12℃\",\n            \"weather\": \"晴\",\n            \"ptime\": \"11:00\"\n        }\n    ]\n}\n```\n\n**栗子好难看，上截图(截图太小看不清...戳这里[看大图](http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg))：**\n\n ![一个简单的JSON串](http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg)\n \n**NOTE**：左侧为JSON字符串，右侧为解析结构，方便查看。\n**福利**：截图是我在一个在线[JSON Editor](http://jsoneditoronline.org/index.html)上截的，体验一下-->JSON Editor，很好用推荐给大家。\n\n# 二、使用Gson在Android中解析Json\n认清了JSON，就要解析它。\n\n**你可以使用的JSON库**：\n\n>**JSONObject**(源自Android官方)、\n**Gson**(源自Google)、\n**Jackson**(第三方开源库)、\n**FastJSON**(第三方开源库)、\n等。。。\n\n本篇文章使用Gson解析JSON，Gson地址：http://code.google.com/p/google-gson/\n\n![google-gson ](http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhcc3saj20bw024glq.jpg)\n无法下载？百度云分享一下[http://pan.baidu.com/s/1kTur5xd](http://pan.baidu.com/s/1kTur5xd),提取密码:5oae\n\n根据JSON串的结构定义一个类(这里我们把这个类叫Result)，我们直接把得到的JSON串解析成这个类。class Result定义如下：\n```\nimport java.util.List;\n\npublic class Result {\n\n    public String type;\n\n    public List<Info> weatherinfo;\n\n    public static class Info {\n\n        public String city;\n\n        public String cityid;\n\n        public String temp1;\n\n        public String temp2;\n\n        public String weather;\n\n        public String ptime;\n\n    }\n\n}\n\n```\n![class Result](http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhdgw1cj208u0afmyd.jpg)\n\n定义好了待解析成的class之后，接下来使用Gson解析JSON串就可以了：\n>Gson gson = new Gson();\nResult r = gson.fromJson(jsonData, Result.class);\n\n# `So easy!`\n\n## *难点*：\n`如果是Android Studio开发的,用GsonFormat插件可以自动生成JavaBean`\n1. 如何定义这个待解析成的类？其实很简单，看到JSON结构里面有{ }你就定义一个类，看到[ ]你就定义一个List即可，最后只剩下最简单的如String、int等基本类型直接定义就好。\n2. 内部嵌套的类，请使用public static class className { }。\n3. 类内部的属性名，必须与JSON串里面的Key名称保持一致。这三点请自行对照我们上面举的Result的栗子，都有对应。\n\n","slug":"Android中使用Gson解析稍复杂的JSON数据","published":1,"updated":"2016-07-15T07:00:58.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfxt000hgwagg1mizdcy","content":"<p><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f3lr401paxj20sg0c677k.jpg\" alt=\"\"></p>\n<blockquote>\n<p>摘抄自 <a href=\"http://www.jianshu.com/p/3b8ef7162e69\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/3b8ef7162e69</a></p>\n</blockquote>\n<h1 id=\"一、Json简介\"><a href=\"#一、Json简介\" class=\"headerlink\" title=\"一、Json简介\"></a>一、Json简介</h1><p>JSON官网(中文版)：<a href=\"http://www.json.org/json-zh.html\" target=\"_blank\" rel=\"external\">http://www.json.org/json-zh.html</a></p>\n<p><strong>JSON(JavaScript Object Notation)</strong>是一种轻量级(轻量级？简单、易操作、快捷)的数据交换格式。主要目的就是给出一套通用的数据格式，大家按照这种格式定义自己的数据，方便数据的交换。特点是(相对来说) <strong>易于人阅读和编写，易于机器解析和生成</strong> 。<br><a id=\"more\"></a><br><strong>Rules</strong>：</p>\n<blockquote>\n<ul>\n<li>“名/值”对的集合（A collection of name/value pairs）。不同的语言中，它被理解为<strong>对象（object）</strong>，纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。</li>\n<li>值的有序列表（An ordered list of values）。在大部分语言中，它被理解为<strong>数组（array）</strong>。</li>\n</ul>\n</blockquote>\n<p><strong>JSON可以有以下格式</strong>：</p>\n<blockquote>\n<p>1.对象是一个无序的“ ‘名称/值’ 对”集合。一个对象以“{”（左括号）开始，“}”（右括号）结束。每个“名称”后跟一个“:”（冒号）；“‘名称/值’ 对”之间使用“,”（逗号）分隔。</p>\n</blockquote>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6jw1f3lle35bv5g20gm035a9w.gif\" alt=\"object的  名称 /值  结构\"></p>\n<blockquote>\n<p>2.数组是值（value）的有序集合。一个数组以“[”（左中括号）开始，“]”（右中括号）结束。值之间使用“,”（逗号）分隔。</p>\n</blockquote>\n<p> <img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhba2xug20gm07qgli.gif\" alt=\"“值的类型”可以是哪些数据类型\"></p>\n<p><em>以上是最基本的json知识，想深入了解的，请移步<a href=\"http://www.json.org/json-zh.html\" target=\"_blank\" rel=\"external\">官网</a>。</em></p>\n<p>下面举个栗子给大家尝尝：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"forecast1d\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"weatherinfo\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"city\"</span>: <span class=\"string\">\"北京\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cityid\"</span>: <span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp1\"</span>: <span class=\"string\">\"22℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp2\"</span>: <span class=\"string\">\"10℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"weather\"</span>: <span class=\"string\">\"晴\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"ptime\"</span>: <span class=\"string\">\"11:00\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"city\"</span>: <span class=\"string\">\"上海\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cityid\"</span>: <span class=\"string\">\"2\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp1\"</span>: <span class=\"string\">\"24℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp2\"</span>: <span class=\"string\">\"12℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"weather\"</span>: <span class=\"string\">\"晴\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"ptime\"</span>: <span class=\"string\">\"11:00\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>栗子好难看，上截图(截图太小看不清…戳这里<a href=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg\" target=\"_blank\" rel=\"external\">看大图</a>)：</strong></p>\n<p> <img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg\" alt=\"一个简单的JSON串\"></p>\n<p><strong>NOTE</strong>：左侧为JSON字符串，右侧为解析结构，方便查看。<br><strong>福利</strong>：截图是我在一个在线<a href=\"http://jsoneditoronline.org/index.html\" target=\"_blank\" rel=\"external\">JSON Editor</a>上截的，体验一下–&gt;JSON Editor，很好用推荐给大家。</p>\n<h1 id=\"二、使用Gson在Android中解析Json\"><a href=\"#二、使用Gson在Android中解析Json\" class=\"headerlink\" title=\"二、使用Gson在Android中解析Json\"></a>二、使用Gson在Android中解析Json</h1><p>认清了JSON，就要解析它。</p>\n<p><strong>你可以使用的JSON库</strong>：</p>\n<blockquote>\n<p><strong>JSONObject</strong>(源自Android官方)、<br><strong>Gson</strong>(源自Google)、<br><strong>Jackson</strong>(第三方开源库)、<br><strong>FastJSON</strong>(第三方开源库)、<br>等。。。</p>\n</blockquote>\n<p>本篇文章使用Gson解析JSON，Gson地址：<a href=\"http://code.google.com/p/google-gson/\" target=\"_blank\" rel=\"external\">http://code.google.com/p/google-gson/</a></p>\n<p><img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhcc3saj20bw024glq.jpg\" alt=\"google-gson \"><br>无法下载？百度云分享一下<a href=\"http://pan.baidu.com/s/1kTur5xd\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1kTur5xd</a>,提取密码:5oae</p>\n<p>根据JSON串的结构定义一个类(这里我们把这个类叫Result)，我们直接把得到的JSON串解析成这个类。class Result定义如下：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Result &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> <span class=\"keyword\">type</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Info&gt; weatherinfo;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> Info &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> city;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> cityid;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> temp1;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> temp2;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> weather;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> ptime;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhdgw1cj208u0afmyd.jpg\" alt=\"class Result\"></p>\n<p>定义好了待解析成的class之后，接下来使用Gson解析JSON串就可以了：</p>\n<blockquote>\n<p>Gson gson = new Gson();<br>Result r = gson.fromJson(jsonData, Result.class);</p>\n</blockquote>\n<h1 id=\"So-easy\"><a href=\"#So-easy\" class=\"headerlink\" title=\"So easy!\"></a><code>So easy!</code></h1><h2 id=\"难点：\"><a href=\"#难点：\" class=\"headerlink\" title=\"难点：\"></a><em>难点</em>：</h2><p><code>如果是Android Studio开发的,用GsonFormat插件可以自动生成JavaBean</code></p>\n<ol>\n<li>如何定义这个待解析成的类？其实很简单，看到JSON结构里面有{ }你就定义一个类，看到[ ]你就定义一个List即可，最后只剩下最简单的如String、int等基本类型直接定义就好。</li>\n<li>内部嵌套的类，请使用public static class className { }。</li>\n<li>类内部的属性名，必须与JSON串里面的Key名称保持一致。这三点请自行对照我们上面举的Result的栗子，都有对应。</li>\n</ol>\n","excerpt":"<p><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f3lr401paxj20sg0c677k.jpg\" alt=\"\"></p>\n<blockquote>\n<p>摘抄自 <a href=\"http://www.jianshu.com/p/3b8ef7162e69\">http://www.jianshu.com/p/3b8ef7162e69</a></p>\n</blockquote>\n<h1 id=\"一、Json简介\"><a href=\"#一、Json简介\" class=\"headerlink\" title=\"一、Json简介\"></a>一、Json简介</h1><p>JSON官网(中文版)：<a href=\"http://www.json.org/json-zh.html\">http://www.json.org/json-zh.html</a></p>\n<p><strong>JSON(JavaScript Object Notation)</strong>是一种轻量级(轻量级？简单、易操作、快捷)的数据交换格式。主要目的就是给出一套通用的数据格式，大家按照这种格式定义自己的数据，方便数据的交换。特点是(相对来说) <strong>易于人阅读和编写，易于机器解析和生成</strong> 。<br>","more":"<br><strong>Rules</strong>：</p>\n<blockquote>\n<ul>\n<li>“名/值”对的集合（A collection of name/value pairs）。不同的语言中，它被理解为<strong>对象（object）</strong>，纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。</li>\n<li>值的有序列表（An ordered list of values）。在大部分语言中，它被理解为<strong>数组（array）</strong>。</li>\n</ul>\n</blockquote>\n<p><strong>JSON可以有以下格式</strong>：</p>\n<blockquote>\n<p>1.对象是一个无序的“ ‘名称/值’ 对”集合。一个对象以“{”（左括号）开始，“}”（右括号）结束。每个“名称”后跟一个“:”（冒号）；“‘名称/值’ 对”之间使用“,”（逗号）分隔。</p>\n</blockquote>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6jw1f3lle35bv5g20gm035a9w.gif\" alt=\"object的  名称 /值  结构\"></p>\n<blockquote>\n<p>2.数组是值（value）的有序集合。一个数组以“[”（左中括号）开始，“]”（右中括号）结束。值之间使用“,”（逗号）分隔。</p>\n</blockquote>\n<p> <img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhba2xug20gm07qgli.gif\" alt=\"“值的类型”可以是哪些数据类型\"></p>\n<p><em>以上是最基本的json知识，想深入了解的，请移步<a href=\"http://www.json.org/json-zh.html\">官网</a>。</em></p>\n<p>下面举个栗子给大家尝尝：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"forecast1d\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"weatherinfo\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"city\"</span>: <span class=\"string\">\"北京\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cityid\"</span>: <span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp1\"</span>: <span class=\"string\">\"22℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp2\"</span>: <span class=\"string\">\"10℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"weather\"</span>: <span class=\"string\">\"晴\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"ptime\"</span>: <span class=\"string\">\"11:00\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"city\"</span>: <span class=\"string\">\"上海\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cityid\"</span>: <span class=\"string\">\"2\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp1\"</span>: <span class=\"string\">\"24℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"temp2\"</span>: <span class=\"string\">\"12℃\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"weather\"</span>: <span class=\"string\">\"晴\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"ptime\"</span>: <span class=\"string\">\"11:00\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>栗子好难看，上截图(截图太小看不清…戳这里<a href=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg\">看大图</a>)：</strong></p>\n<p> <img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6jw1f3xesqananj20vp0em75s.jpg\" alt=\"一个简单的JSON串\"></p>\n<p><strong>NOTE</strong>：左侧为JSON字符串，右侧为解析结构，方便查看。<br><strong>福利</strong>：截图是我在一个在线<a href=\"http://jsoneditoronline.org/index.html\">JSON Editor</a>上截的，体验一下–&gt;JSON Editor，很好用推荐给大家。</p>\n<h1 id=\"二、使用Gson在Android中解析Json\"><a href=\"#二、使用Gson在Android中解析Json\" class=\"headerlink\" title=\"二、使用Gson在Android中解析Json\"></a>二、使用Gson在Android中解析Json</h1><p>认清了JSON，就要解析它。</p>\n<p><strong>你可以使用的JSON库</strong>：</p>\n<blockquote>\n<p><strong>JSONObject</strong>(源自Android官方)、<br><strong>Gson</strong>(源自Google)、<br><strong>Jackson</strong>(第三方开源库)、<br><strong>FastJSON</strong>(第三方开源库)、<br>等。。。</p>\n</blockquote>\n<p>本篇文章使用Gson解析JSON，Gson地址：<a href=\"http://code.google.com/p/google-gson/\">http://code.google.com/p/google-gson/</a></p>\n<p><img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6jw1f3llhcc3saj20bw024glq.jpg\" alt=\"google-gson \"><br>无法下载？百度云分享一下<a href=\"http://pan.baidu.com/s/1kTur5xd\">http://pan.baidu.com/s/1kTur5xd</a>,提取密码:5oae</p>\n<p>根据JSON串的结构定义一个类(这里我们把这个类叫Result)，我们直接把得到的JSON串解析成这个类。class Result定义如下：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Result &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> <span class=\"keyword\">type</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Info&gt; weatherinfo;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> Info &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> city;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> cityid;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> temp1;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> temp2;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> weather;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> ptime;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhdgw1cj208u0afmyd.jpg\" alt=\"class Result\"></p>\n<p>定义好了待解析成的class之后，接下来使用Gson解析JSON串就可以了：</p>\n<blockquote>\n<p>Gson gson = new Gson();<br>Result r = gson.fromJson(jsonData, Result.class);</p>\n</blockquote>\n<h1 id=\"So-easy\"><a href=\"#So-easy\" class=\"headerlink\" title=\"So easy!\"></a><code>So easy!</code></h1><h2 id=\"难点：\"><a href=\"#难点：\" class=\"headerlink\" title=\"难点：\"></a><em>难点</em>：</h2><p><code>如果是Android Studio开发的,用GsonFormat插件可以自动生成JavaBean</code></p>\n<ol>\n<li>如何定义这个待解析成的类？其实很简单，看到JSON结构里面有{ }你就定义一个类，看到[ ]你就定义一个List即可，最后只剩下最简单的如String、int等基本类型直接定义就好。</li>\n<li>内部嵌套的类，请使用public static class className { }。</li>\n<li>类内部的属性名，必须与JSON串里面的Key名称保持一致。这三点请自行对照我们上面举的Result的栗子，都有对应。</li>\n</ol>"},{"title":"Android沉浸式状态栏","date":"2015-05-03T01:43:30.000Z","_content":"\n>`GitHub`Demo[ 源码](https://github.com/yangxiaoge/ImmersiveStatusBar)\n\n\n## 1. 首先看下`状态栏`与`导航栏`结构图\n>主要设置以下两个颜色一致\n> 1. **colorPrimary **\n> 2. **colorPrimaryDark** \n\n![状态栏结构.jpg](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3hyhtv36cj20j60b5q39.jpg)\n<!-- more -->\n## 2. 引用库  [SystemBarTint](https://github.com/jgilfelt/SystemBarTint), 并在`module / build.gradle`里添加以下依赖:\n>compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'\n![](http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhi475qj20jr04u75n.jpg)\n\n## 3. 写一个公共的`BaseActivity`, 只要继承`BaseActivity`即可实现沉浸式效果\n```\npackage androidautolayout.yjn.com.statusbar;\n\nimport android.annotation.TargetApi;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatActivity;\nimport android.view.Window;\nimport android.view.WindowManager;\n\nimport com.readystatesoftware.systembartint.SystemBarTintManager;\n\npublic class BaseActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n            setTranslucentStatus(true);\n        }\n        SystemBarTintManager tintManager = new SystemBarTintManager(this);\n        tintManager.setStatusBarTintEnabled(true);\n        tintManager.setStatusBarTintResource(R.color.colorPrimary);\n    }\n\n\n    @TargetApi(Build.VERSION_CODES.KITKAT)\n    private void setTranslucentStatus(boolean on) {\n        Window win = getWindow();\n        WindowManager.LayoutParams winParams = win.getAttributes();\n        final int bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS;\n        if (on) {\n            winParams.flags |= bits;\n        } else {\n            winParams.flags &= ~bits;\n        }\n        win.setAttributes(winParams);\n    }\n}\n\n```\n\n>`Avtivity`直接 extends `BaseActivity`\n\n```\npublic class MainActivity extends BaseActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n    }\n}\n```\n\n## 4.注册清单设置 `AndroidManifest.xml`\n\n![](http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhgnmzyj20yg0b4ade.jpg)","source":"_posts/Android沉浸式状态栏-md.md","raw":"---\ntitle: Android沉浸式状态栏\ndate: 2015-05-03 09:43:30\ntags: Android\ncategories: Android\n---\n\n>`GitHub`Demo[ 源码](https://github.com/yangxiaoge/ImmersiveStatusBar)\n\n\n## 1. 首先看下`状态栏`与`导航栏`结构图\n>主要设置以下两个颜色一致\n> 1. **colorPrimary **\n> 2. **colorPrimaryDark** \n\n![状态栏结构.jpg](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3hyhtv36cj20j60b5q39.jpg)\n<!-- more -->\n## 2. 引用库  [SystemBarTint](https://github.com/jgilfelt/SystemBarTint), 并在`module / build.gradle`里添加以下依赖:\n>compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'\n![](http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhi475qj20jr04u75n.jpg)\n\n## 3. 写一个公共的`BaseActivity`, 只要继承`BaseActivity`即可实现沉浸式效果\n```\npackage androidautolayout.yjn.com.statusbar;\n\nimport android.annotation.TargetApi;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatActivity;\nimport android.view.Window;\nimport android.view.WindowManager;\n\nimport com.readystatesoftware.systembartint.SystemBarTintManager;\n\npublic class BaseActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n            setTranslucentStatus(true);\n        }\n        SystemBarTintManager tintManager = new SystemBarTintManager(this);\n        tintManager.setStatusBarTintEnabled(true);\n        tintManager.setStatusBarTintResource(R.color.colorPrimary);\n    }\n\n\n    @TargetApi(Build.VERSION_CODES.KITKAT)\n    private void setTranslucentStatus(boolean on) {\n        Window win = getWindow();\n        WindowManager.LayoutParams winParams = win.getAttributes();\n        final int bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS;\n        if (on) {\n            winParams.flags |= bits;\n        } else {\n            winParams.flags &= ~bits;\n        }\n        win.setAttributes(winParams);\n    }\n}\n\n```\n\n>`Avtivity`直接 extends `BaseActivity`\n\n```\npublic class MainActivity extends BaseActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n    }\n}\n```\n\n## 4.注册清单设置 `AndroidManifest.xml`\n\n![](http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhgnmzyj20yg0b4ade.jpg)","slug":"Android沉浸式状态栏-md","published":1,"updated":"2016-07-15T06:43:06.133Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfxy000kgwagn2tdelxl","content":"<blockquote>\n<p><code>GitHub</code>Demo<a href=\"https://github.com/yangxiaoge/ImmersiveStatusBar\" target=\"_blank\" rel=\"external\"> 源码</a></p>\n</blockquote>\n<h2 id=\"1-首先看下状态栏与导航栏结构图\"><a href=\"#1-首先看下状态栏与导航栏结构图\" class=\"headerlink\" title=\"1. 首先看下状态栏与导航栏结构图\"></a>1. 首先看下<code>状态栏</code>与<code>导航栏</code>结构图</h2><blockquote>\n<p>主要设置以下两个颜色一致</p>\n<ol>\n<li><strong>colorPrimary </strong></li>\n<li><strong>colorPrimaryDark</strong> </li>\n</ol>\n</blockquote>\n<p><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3hyhtv36cj20j60b5q39.jpg\" alt=\"状态栏结构.jpg\"><br><a id=\"more\"></a></p>\n<h2 id=\"2-引用库-SystemBarTint-并在module-build-gradle里添加以下依赖\"><a href=\"#2-引用库-SystemBarTint-并在module-build-gradle里添加以下依赖\" class=\"headerlink\" title=\"2. 引用库  SystemBarTint, 并在module / build.gradle里添加以下依赖:\"></a>2. 引用库  <a href=\"https://github.com/jgilfelt/SystemBarTint\" target=\"_blank\" rel=\"external\">SystemBarTint</a>, 并在<code>module / build.gradle</code>里添加以下依赖:</h2><blockquote>\n<p>compile ‘com.readystatesoftware.systembartint:systembartint:1.0.3’<br><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhi475qj20jr04u75n.jpg\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"3-写一个公共的BaseActivity-只要继承BaseActivity即可实现沉浸式效果\"><a href=\"#3-写一个公共的BaseActivity-只要继承BaseActivity即可实现沉浸式效果\" class=\"headerlink\" title=\"3. 写一个公共的BaseActivity, 只要继承BaseActivity即可实现沉浸式效果\"></a>3. 写一个公共的<code>BaseActivity</code>, 只要继承<code>BaseActivity</code>即可实现沉浸式效果</h2><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> androidautolayout.yjn.com.statusbar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.annotation.<span class=\"type\">TargetApi</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.<span class=\"type\">Build</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.<span class=\"type\">Bundle</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.<span class=\"type\">AppCompatActivity</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.<span class=\"type\">Window</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.<span class=\"type\">WindowManager</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.readystatesoftware.systembartint.<span class=\"type\">SystemBarTintManager</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> void onCreate(<span class=\"type\">Bundle</span> savedInstanceState) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"type\">Build</span>.<span class=\"type\">VERSION</span>.<span class=\"type\">SDK_INT</span> &gt;= <span class=\"type\">Build</span>.<span class=\"type\">VERSION_CODES</span>.<span class=\"type\">KITKAT</span>) &#123;</span><br><span class=\"line\">            setTranslucentStatus(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">SystemBarTintManager</span> tintManager = <span class=\"keyword\">new</span> <span class=\"type\">SystemBarTintManager</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        tintManager.setStatusBarTintEnabled(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        tintManager.setStatusBarTintResource(<span class=\"type\">R</span>.color.colorPrimary);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TargetApi</span>(<span class=\"type\">Build</span>.<span class=\"type\">VERSION_CODES</span>.<span class=\"type\">KITKAT</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> void setTranslucentStatus(boolean on) &#123;</span><br><span class=\"line\">        <span class=\"type\">Window</span> win = getWindow();</span><br><span class=\"line\">        <span class=\"type\">WindowManager</span>.<span class=\"type\">LayoutParams</span> winParams = win.getAttributes();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> int bits = <span class=\"type\">WindowManager</span>.<span class=\"type\">LayoutParams</span>.<span class=\"type\">FLAG_TRANSLUCENT_STATUS</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (on) &#123;</span><br><span class=\"line\">            winParams.flags |= bits;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            winParams.flags &amp;= ~bits;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        win.setAttributes(winParams);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>Avtivity</code>直接 extends <code>BaseActivity</code></p>\n</blockquote>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> void onCreate(<span class=\"type\">Bundle</span> savedInstanceState) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(<span class=\"type\">R</span>.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-注册清单设置-AndroidManifest-xml\"><a href=\"#4-注册清单设置-AndroidManifest-xml\" class=\"headerlink\" title=\"4.注册清单设置 AndroidManifest.xml\"></a>4.注册清单设置 <code>AndroidManifest.xml</code></h2><p><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhgnmzyj20yg0b4ade.jpg\" alt=\"\"></p>\n","excerpt":"<blockquote>\n<p><code>GitHub</code>Demo<a href=\"https://github.com/yangxiaoge/ImmersiveStatusBar\"> 源码</a></p>\n</blockquote>\n<h2 id=\"1-首先看下状态栏与导航栏结构图\"><a href=\"#1-首先看下状态栏与导航栏结构图\" class=\"headerlink\" title=\"1. 首先看下状态栏与导航栏结构图\"></a>1. 首先看下<code>状态栏</code>与<code>导航栏</code>结构图</h2><blockquote>\n<p>主要设置以下两个颜色一致</p>\n<ol>\n<li><strong>colorPrimary </strong></li>\n<li><strong>colorPrimaryDark</strong> </li>\n</ol>\n</blockquote>\n<p><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3hyhtv36cj20j60b5q39.jpg\" alt=\"状态栏结构.jpg\"><br>","more":"</p>\n<h2 id=\"2-引用库-SystemBarTint-并在module-build-gradle里添加以下依赖\"><a href=\"#2-引用库-SystemBarTint-并在module-build-gradle里添加以下依赖\" class=\"headerlink\" title=\"2. 引用库  SystemBarTint, 并在module / build.gradle里添加以下依赖:\"></a>2. 引用库  <a href=\"https://github.com/jgilfelt/SystemBarTint\">SystemBarTint</a>, 并在<code>module / build.gradle</code>里添加以下依赖:</h2><blockquote>\n<p>compile ‘com.readystatesoftware.systembartint:systembartint:1.0.3’<br><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhi475qj20jr04u75n.jpg\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"3-写一个公共的BaseActivity-只要继承BaseActivity即可实现沉浸式效果\"><a href=\"#3-写一个公共的BaseActivity-只要继承BaseActivity即可实现沉浸式效果\" class=\"headerlink\" title=\"3. 写一个公共的BaseActivity, 只要继承BaseActivity即可实现沉浸式效果\"></a>3. 写一个公共的<code>BaseActivity</code>, 只要继承<code>BaseActivity</code>即可实现沉浸式效果</h2><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> androidautolayout.yjn.com.statusbar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.annotation.<span class=\"type\">TargetApi</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.<span class=\"type\">Build</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.<span class=\"type\">Bundle</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.<span class=\"type\">AppCompatActivity</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.<span class=\"type\">Window</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.<span class=\"type\">WindowManager</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.readystatesoftware.systembartint.<span class=\"type\">SystemBarTintManager</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> void onCreate(<span class=\"type\">Bundle</span> savedInstanceState) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"type\">Build</span>.<span class=\"type\">VERSION</span>.<span class=\"type\">SDK_INT</span> &gt;= <span class=\"type\">Build</span>.<span class=\"type\">VERSION_CODES</span>.<span class=\"type\">KITKAT</span>) &#123;</span><br><span class=\"line\">            setTranslucentStatus(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">SystemBarTintManager</span> tintManager = <span class=\"keyword\">new</span> <span class=\"type\">SystemBarTintManager</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        tintManager.setStatusBarTintEnabled(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        tintManager.setStatusBarTintResource(<span class=\"type\">R</span>.color.colorPrimary);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TargetApi</span>(<span class=\"type\">Build</span>.<span class=\"type\">VERSION_CODES</span>.<span class=\"type\">KITKAT</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> void setTranslucentStatus(boolean on) &#123;</span><br><span class=\"line\">        <span class=\"type\">Window</span> win = getWindow();</span><br><span class=\"line\">        <span class=\"type\">WindowManager</span>.<span class=\"type\">LayoutParams</span> winParams = win.getAttributes();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> int bits = <span class=\"type\">WindowManager</span>.<span class=\"type\">LayoutParams</span>.<span class=\"type\">FLAG_TRANSLUCENT_STATUS</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (on) &#123;</span><br><span class=\"line\">            winParams.flags |= bits;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            winParams.flags &amp;= ~bits;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        win.setAttributes(winParams);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>Avtivity</code>直接 extends <code>BaseActivity</code></p>\n</blockquote>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> void onCreate(<span class=\"type\">Bundle</span> savedInstanceState) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(<span class=\"type\">R</span>.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-注册清单设置-AndroidManifest-xml\"><a href=\"#4-注册清单设置-AndroidManifest-xml\" class=\"headerlink\" title=\"4.注册清单设置 AndroidManifest.xml\"></a>4.注册清单设置 <code>AndroidManifest.xml</code></h2><p><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6jw1f3llhgnmzyj20yg0b4ade.jpg\" alt=\"\"></p>"},{"title":"AthenaMI项目启动","date":"2016-06-03T08:49:28.000Z","_content":"\n# 今日已完成工作 (2016-06-03 16:49:28)\n* 登录界面( 国际化 )\n* 首页底部Tab设计完成\n* 侧滑Drawerlayout( Google官方Demo满足需求 )\n\n\n>公司项目 `不能上截图` (～￣▽￣)～\n\n<!-- more -->\n\n# 提取公共部分(2016-06-04 15:02:17)\n* 样式\n* 字体\n* drawable(EditText虚线框等等)\n\n正在马不停蹄的`coding...` 项目开发完再来补充","source":"_posts/Athena项目启动.md","raw":"---\ntitle: AthenaMI项目启动\ndate: 2016-06-03 16:49:28\ntags: [MI,Android]\ncategories: APP开发记\n---\n\n# 今日已完成工作 (2016-06-03 16:49:28)\n* 登录界面( 国际化 )\n* 首页底部Tab设计完成\n* 侧滑Drawerlayout( Google官方Demo满足需求 )\n\n\n>公司项目 `不能上截图` (～￣▽￣)～\n\n<!-- more -->\n\n# 提取公共部分(2016-06-04 15:02:17)\n* 样式\n* 字体\n* drawable(EditText虚线框等等)\n\n正在马不停蹄的`coding...` 项目开发完再来补充","slug":"Athena项目启动","published":1,"updated":"2016-07-15T07:31:16.316Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfy0000mgwag0nucovtk","content":"<h1 id=\"今日已完成工作-2016-06-03-16-49-28\"><a href=\"#今日已完成工作-2016-06-03-16-49-28\" class=\"headerlink\" title=\"今日已完成工作 (2016-06-03 16:49:28)\"></a>今日已完成工作 (2016-06-03 16:49:28)</h1><ul>\n<li>登录界面( 国际化 )</li>\n<li>首页底部Tab设计完成</li>\n<li>侧滑Drawerlayout( Google官方Demo满足需求 )</li>\n</ul>\n<blockquote>\n<p>公司项目 <code>不能上截图</code> (～￣▽￣)～</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"提取公共部分-2016-06-04-15-02-17\"><a href=\"#提取公共部分-2016-06-04-15-02-17\" class=\"headerlink\" title=\"提取公共部分(2016-06-04 15:02:17)\"></a>提取公共部分(2016-06-04 15:02:17)</h1><ul>\n<li>样式</li>\n<li>字体</li>\n<li>drawable(EditText虚线框等等)</li>\n</ul>\n<p>正在马不停蹄的<code>coding...</code> 项目开发完再来补充</p>\n","excerpt":"<h1 id=\"今日已完成工作-2016-06-03-16-49-28\"><a href=\"#今日已完成工作-2016-06-03-16-49-28\" class=\"headerlink\" title=\"今日已完成工作 (2016-06-03 16:49:28)\"></a>今日已完成工作 (2016-06-03 16:49:28)</h1><ul>\n<li>登录界面( 国际化 )</li>\n<li>首页底部Tab设计完成</li>\n<li>侧滑Drawerlayout( Google官方Demo满足需求 )</li>\n</ul>\n<blockquote>\n<p>公司项目 <code>不能上截图</code> (～￣▽￣)～</p>\n</blockquote>","more":"<h1 id=\"提取公共部分-2016-06-04-15-02-17\"><a href=\"#提取公共部分-2016-06-04-15-02-17\" class=\"headerlink\" title=\"提取公共部分(2016-06-04 15:02:17)\"></a>提取公共部分(2016-06-04 15:02:17)</h1><ul>\n<li>样式</li>\n<li>字体</li>\n<li>drawable(EditText虚线框等等)</li>\n</ul>\n<p>正在马不停蹄的<code>coding...</code> 项目开发完再来补充</p>"},{"title":"Birt级联参数设置","date":"2015-09-06T08:05:45.000Z","_content":"![](http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f3lr2a94s9j20sg0c6wlh.jpg)\n`级联查询`步骤:\n### 1, 创建级联参数\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbip8eij20en043js6.jpg)\n\n### 2, 设置相关联的参数\n<!-- more -->\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbeh0vpj20py0mojwv.jpg)\n![](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbjenelj20hz0mtae5.jpg)\n\n### 3, 每一个`参数`都要`单独`设置 `display type`\n![](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbfavgsj20gp0ma0wl.jpg) \n\n### 4, 数据集设计  __详情`有道云笔记`\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbg1ji5j211w0exgq6.jpg)\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbgrgdkj20w90g20xc.jpg)\n![](http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f3lqj8f7qyj20yl0gdjw3.jpg)\n\n\n\n","source":"_posts/Birt级联参数设置.md","raw":"---\ntitle: Birt级联参数设置\ndate: 2015-09-06 16:05:45\ntags: Birt\ncategories: Birt\n---\n![](http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f3lr2a94s9j20sg0c6wlh.jpg)\n`级联查询`步骤:\n### 1, 创建级联参数\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbip8eij20en043js6.jpg)\n\n### 2, 设置相关联的参数\n<!-- more -->\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbeh0vpj20py0mojwv.jpg)\n![](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbjenelj20hz0mtae5.jpg)\n\n### 3, 每一个`参数`都要`单独`设置 `display type`\n![](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbfavgsj20gp0ma0wl.jpg) \n\n### 4, 数据集设计  __详情`有道云笔记`\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbg1ji5j211w0exgq6.jpg)\n![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbgrgdkj20w90g20xc.jpg)\n![](http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f3lqj8f7qyj20yl0gdjw3.jpg)\n\n\n\n","slug":"Birt级联参数设置","published":1,"updated":"2016-07-15T06:43:58.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfy4000rgwaghijgapmu","content":"<p><img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f3lr2a94s9j20sg0c6wlh.jpg\" alt=\"\"><br><code>级联查询</code>步骤:</p>\n<h3 id=\"1-创建级联参数\"><a href=\"#1-创建级联参数\" class=\"headerlink\" title=\"1, 创建级联参数\"></a>1, 创建级联参数</h3><p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbip8eij20en043js6.jpg\" alt=\"\"></p>\n<h3 id=\"2-设置相关联的参数\"><a href=\"#2-设置相关联的参数\" class=\"headerlink\" title=\"2, 设置相关联的参数\"></a>2, 设置相关联的参数</h3><a id=\"more\"></a>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbeh0vpj20py0mojwv.jpg\" alt=\"\"><br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbjenelj20hz0mtae5.jpg\" alt=\"\"></p>\n<h3 id=\"3-每一个参数都要单独设置-display-type\"><a href=\"#3-每一个参数都要单独设置-display-type\" class=\"headerlink\" title=\"3, 每一个参数都要单独设置 display type\"></a>3, 每一个<code>参数</code>都要<code>单独</code>设置 <code>display type</code></h3><p><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbfavgsj20gp0ma0wl.jpg\" alt=\"\"> </p>\n<h3 id=\"4-数据集设计-详情有道云笔记\"><a href=\"#4-数据集设计-详情有道云笔记\" class=\"headerlink\" title=\"4, 数据集设计  __详情有道云笔记\"></a>4, 数据集设计  __详情<code>有道云笔记</code></h3><p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbg1ji5j211w0exgq6.jpg\" alt=\"\"><br><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbgrgdkj20w90g20xc.jpg\" alt=\"\"><br><img src=\"http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f3lqj8f7qyj20yl0gdjw3.jpg\" alt=\"\"></p>\n","excerpt":"<p><img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f3lr2a94s9j20sg0c6wlh.jpg\" alt=\"\"><br><code>级联查询</code>步骤:</p>\n<h3 id=\"1-创建级联参数\"><a href=\"#1-创建级联参数\" class=\"headerlink\" title=\"1, 创建级联参数\"></a>1, 创建级联参数</h3><p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbip8eij20en043js6.jpg\" alt=\"\"></p>\n<h3 id=\"2-设置相关联的参数\"><a href=\"#2-设置相关联的参数\" class=\"headerlink\" title=\"2, 设置相关联的参数\"></a>2, 设置相关联的参数</h3>","more":"<p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbeh0vpj20py0mojwv.jpg\" alt=\"\"><br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbjenelj20hz0mtae5.jpg\" alt=\"\"></p>\n<h3 id=\"3-每一个参数都要单独设置-display-type\"><a href=\"#3-每一个参数都要单独设置-display-type\" class=\"headerlink\" title=\"3, 每一个参数都要单独设置 display type\"></a>3, 每一个<code>参数</code>都要<code>单独</code>设置 <code>display type</code></h3><p><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lqbfavgsj20gp0ma0wl.jpg\" alt=\"\"> </p>\n<h3 id=\"4-数据集设计-详情有道云笔记\"><a href=\"#4-数据集设计-详情有道云笔记\" class=\"headerlink\" title=\"4, 数据集设计  __详情有道云笔记\"></a>4, 数据集设计  __详情<code>有道云笔记</code></h3><p><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbg1ji5j211w0exgq6.jpg\" alt=\"\"><br><img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lqbgrgdkj20w90g20xc.jpg\" alt=\"\"><br><img src=\"http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f3lqj8f7qyj20yl0gdjw3.jpg\" alt=\"\"></p>"},{"title":"Birt多选参数设置","date":"2015-09-06T07:38:39.000Z","_content":"\n> 网上相关的资料少之又少,某度搜的博客更是不能信(互相抄)!\n> 不扯了,直接看多选参数设置\n\n`效果图: `\n![设计器运行效果图](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lpm7o96nj20fh0cdq47.jpg)\n\n`具体实现步骤`:\n\n<!-- more -->\n\n## 1. 勾选 `Allow Multiple Values` 并设置默认值 ![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lpm89ag6j20qy0n7n5x.jpg)\n## 2. 脚本中注意要判断取值( `toString()` 之后)![](http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3lpm98wkqj213p0j112h.jpg) \n\n更多Birt报表知识点详见个人笔记: `有道云笔记`\n[Birt总结文档](http://t.cn/RqRpUtV11)","source":"_posts/Birt多选参数设置.md","raw":"---\ntitle: Birt多选参数设置\ndate: 2015-09-06 15:38:39\ntags: Birt\ncategories: Birt\n---\n\n> 网上相关的资料少之又少,某度搜的博客更是不能信(互相抄)!\n> 不扯了,直接看多选参数设置\n\n`效果图: `\n![设计器运行效果图](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lpm7o96nj20fh0cdq47.jpg)\n\n`具体实现步骤`:\n\n<!-- more -->\n\n## 1. 勾选 `Allow Multiple Values` 并设置默认值 ![](http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lpm89ag6j20qy0n7n5x.jpg)\n## 2. 脚本中注意要判断取值( `toString()` 之后)![](http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3lpm98wkqj213p0j112h.jpg) \n\n更多Birt报表知识点详见个人笔记: `有道云笔记`\n[Birt总结文档](http://t.cn/RqRpUtV11)","slug":"Birt多选参数设置","published":1,"updated":"2016-07-15T06:43:37.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfy8000ugwag5xva4s8e","content":"<blockquote>\n<p>网上相关的资料少之又少,某度搜的博客更是不能信(互相抄)!<br>不扯了,直接看多选参数设置</p>\n</blockquote>\n<p><code>效果图:</code><br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lpm7o96nj20fh0cdq47.jpg\" alt=\"设计器运行效果图\"></p>\n<p><code>具体实现步骤</code>:</p>\n<a id=\"more\"></a>\n<h2 id=\"1-勾选-Allow-Multiple-Values-并设置默认值\"><a href=\"#1-勾选-Allow-Multiple-Values-并设置默认值\" class=\"headerlink\" title=\"1. 勾选 Allow Multiple Values 并设置默认值 \"></a>1. 勾选 <code>Allow Multiple Values</code> 并设置默认值 <img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lpm89ag6j20qy0n7n5x.jpg\" alt=\"\"></h2><h2 id=\"2-脚本中注意要判断取值-toString-之后\"><a href=\"#2-脚本中注意要判断取值-toString-之后\" class=\"headerlink\" title=\"2. 脚本中注意要判断取值( toString() 之后)\"></a>2. 脚本中注意要判断取值( <code>toString()</code> 之后)<img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3lpm98wkqj213p0j112h.jpg\" alt=\"\"></h2><p>更多Birt报表知识点详见个人笔记: <code>有道云笔记</code><br><a href=\"http://t.cn/RqRpUtV11\" target=\"_blank\" rel=\"external\">Birt总结文档</a></p>\n","excerpt":"<blockquote>\n<p>网上相关的资料少之又少,某度搜的博客更是不能信(互相抄)!<br>不扯了,直接看多选参数设置</p>\n</blockquote>\n<p><code>效果图:</code><br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3lpm7o96nj20fh0cdq47.jpg\" alt=\"设计器运行效果图\"></p>\n<p><code>具体实现步骤</code>:</p>","more":"<h2 id=\"1-勾选-Allow-Multiple-Values-并设置默认值\"><a href=\"#1-勾选-Allow-Multiple-Values-并设置默认值\" class=\"headerlink\" title=\"1. 勾选 Allow Multiple Values 并设置默认值 \"></a>1. 勾选 <code>Allow Multiple Values</code> 并设置默认值 <img src=\"http://ww3.sinaimg.cn/mw690/c05ae6b6gw1f3lpm89ag6j20qy0n7n5x.jpg\" alt=\"\"></h2><h2 id=\"2-脚本中注意要判断取值-toString-之后\"><a href=\"#2-脚本中注意要判断取值-toString-之后\" class=\"headerlink\" title=\"2. 脚本中注意要判断取值( toString() 之后)\"></a>2. 脚本中注意要判断取值( <code>toString()</code> 之后)<img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3lpm98wkqj213p0j112h.jpg\" alt=\"\"></h2><p>更多Birt报表知识点详见个人笔记: <code>有道云笔记</code><br><a href=\"http://t.cn/RqRpUtV11\">Birt总结文档</a></p>"},{"title":"Git使用","date":"2015-06-24T05:12:52.000Z","_content":"## git回滚到指定版本方法(2016-01-08 14:55:44)\n```\n git reset --hard <commit ID号>\n 例如: git reset --hard dc972ec\n \n 版本号查看方法: 打开github项目，点击commits就能看到提交记录以及版本号\n```\n<!-- more -->\n\n## 提交本地项目(未受控)到远程Git仓库\n```\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://git.coding.net/yangxiaoge/Gank.git\ngit push -u origin master\n```\n\n`git add .`: add后面有空格\n\n\n\n","source":"_posts/Git使用.md","raw":"---\ntitle: Git使用\ndate: 2015-06-24 13:12:52\ntags: Git\ncategories: Git\n---\n## git回滚到指定版本方法(2016-01-08 14:55:44)\n```\n git reset --hard <commit ID号>\n 例如: git reset --hard dc972ec\n \n 版本号查看方法: 打开github项目，点击commits就能看到提交记录以及版本号\n```\n<!-- more -->\n\n## 提交本地项目(未受控)到远程Git仓库\n```\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://git.coding.net/yangxiaoge/Gank.git\ngit push -u origin master\n```\n\n`git add .`: add后面有空格\n\n\n\n","slug":"Git使用","published":1,"updated":"2016-08-03T08:09:55.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfyh000zgwag7itml8vn","content":"<h2 id=\"git回滚到指定版本方法-2016-01-08-14-55-44\"><a href=\"#git回滚到指定版本方法-2016-01-08-14-55-44\" class=\"headerlink\" title=\"git回滚到指定版本方法(2016-01-08 14:55:44)\"></a>git回滚到指定版本方法(2016-01-08 14:55:44)</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">reset</span> <span class=\"comment\">--hard &lt;commit ID号&gt;</span></span><br><span class=\"line\">例如: git <span class=\"keyword\">reset</span> <span class=\"comment\">--hard dc972ec</span></span><br><span class=\"line\"></span><br><span class=\"line\">版本号查看方法: 打开github项目，点击commits就能看到提交记录以及版本号</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"提交本地项目-未受控-到远程Git仓库\"><a href=\"#提交本地项目-未受控-到远程Git仓库\" class=\"headerlink\" title=\"提交本地项目(未受控)到远程Git仓库\"></a>提交本地项目(未受控)到远程Git仓库</h2><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">git</span> init</span><br><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">add </span>.</span><br><span class=\"line\"><span class=\"symbol\">git</span> commit -m <span class=\"string\">\"first commit\"</span></span><br><span class=\"line\"><span class=\"symbol\">git</span> remote <span class=\"keyword\">add </span>origin https://git.coding.net/yangxiaoge/Gank.git</span><br><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">push </span>-u origin master</span><br></pre></td></tr></table></figure>\n<p><code>git add .</code>: add后面有空格</p>\n","excerpt":"<h2 id=\"git回滚到指定版本方法-2016-01-08-14-55-44\"><a href=\"#git回滚到指定版本方法-2016-01-08-14-55-44\" class=\"headerlink\" title=\"git回滚到指定版本方法(2016-01-08 14:55:44)\"></a>git回滚到指定版本方法(2016-01-08 14:55:44)</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">reset</span> <span class=\"comment\">--hard &lt;commit ID号&gt;</span></span><br><span class=\"line\">例如: git <span class=\"keyword\">reset</span> <span class=\"comment\">--hard dc972ec</span></span><br><span class=\"line\"></span><br><span class=\"line\">版本号查看方法: 打开github项目，点击commits就能看到提交记录以及版本号</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"提交本地项目-未受控-到远程Git仓库\"><a href=\"#提交本地项目-未受控-到远程Git仓库\" class=\"headerlink\" title=\"提交本地项目(未受控)到远程Git仓库\"></a>提交本地项目(未受控)到远程Git仓库</h2><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">git</span> init</span><br><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">add </span>.</span><br><span class=\"line\"><span class=\"symbol\">git</span> commit -m <span class=\"string\">\"first commit\"</span></span><br><span class=\"line\"><span class=\"symbol\">git</span> remote <span class=\"keyword\">add </span>origin https://git.coding.net/yangxiaoge/Gank.git</span><br><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">push </span>-u origin master</span><br></pre></td></tr></table></figure>\n<p><code>git add .</code>: add后面有空格</p>"},{"title":"Git语法","date":"2016-08-03T08:13:45.000Z","_content":">本文摘自我的小伙伴[KevinJin](http://littlefisher.coding.me/2016/06/08/git/)\n\n开源中国的 [Pro Git（中文版）](http://git.oschina.net/progit/index.html)\n\n#####    1、Git基础\n######    1.1 分布式版本管理系统\n__常用操作:__\n\n* 克隆远程仓库  \n`git clone </path/to/repository>`\n\n* 查看工作区状态  \n`git status`\n\n\n<!-- more -->\n* 添加更改到暂存区  \n`git add <filename>`&nbsp;&nbsp;添加某个文件  \n`git add .`&nbsp;&nbsp;添加当前目录及子目录所有文件  \n`git add -A`    &nbsp;&nbsp;添加所有改动\n\n* 使用如下命令以实际提交改动  \n`git commit -m \"代码提交信息\"`\n\n* 分支操作  \n`git branch <branch name>`&nbsp;&nbsp;新建分支  \n`git checkout <branch name>`&nbsp;&nbsp;切换到某个分支\n`git branch -d <branch name>`&nbsp;&nbsp;删除分支\n\n* 要合并其他分支（可以是任何远程分支或本地分支）到你的当前分支，执行：  \n`git merge <branch>`&nbsp;&nbsp;//git merge dev  \n`git merge origin/dev`\n\n* 获取远程仓库改动  \n`git fetch <remote>`&nbsp;&nbsp;//git fetch origin\n\n* 获取远程仓库改动，同时合并（merge）到当前分支  \n`git pull <remote> <branch>`&nbsp;&nbsp;//git pull origin dev&nbsp;&nbsp;获取远程仓库origin的dev分支，合并到当前分支\n\n* 推送当前分支到远程仓库  \n`git push <remote> <branch>`&nbsp;&nbsp;//git push origin dev&nbsp;&nbsp;推送当前分支到远程仓库origin的dev分支  \n![GIT CHEAT SHEET](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwpid97qj20j80r6n75.jpg)\n\n######    1.2 Git初始化，创建一个新的本地仓库\n安装git后，配置自己的个人信息  \n`git config --global user.name \"KevinJin614\"`\n`git config --global user.email \"***@qq.com\"`  \n创建新文件夹，打开，然后执行  \n`git init git add`\n`git commit`\n以创建新的 git 仓库\n\n######    1.3 Git暂存区\n你的本地仓库由 git 维护的三棵“树”组成。第一个是你的__工作目录__，它持有实际文件；第二个是__暂存区（Index）__,它像个缓存区域，临时保存你的改动；最后是 __HEAD__，它指向你最后一次提交的结果。  \nHEAD和分支都是引用。  \n![Git暂存区](http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4nwpjgxwqj20g607975m.jpg)  \n使用`git status [-s]` 查看工作区状态，添加-s参数以精简模式显示\n\n* 当执行git reset HEAD命令时，暂存区的目录树会被重写，被master分支指向的目录树所替换，但是工作区不受影响。\n\n* 当执行`git rm --cached <file>`命令时，会直接从暂存区删除文件，工作区则不做出改变。 \n* 当执行`git checkout `.或者`git checkout -- <file>`命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。 \n* 当执行`git checkout HEAD .`或者`git checkout HEAD <file>`命令时，会用HEAD指向的master分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。  \n\n######    1.4 git diff  \n![Git Diff](http://ww3.sinaimg.cn/mw690/7dde05d2gw1f4nwpk1epjj20e50723zk.jpg)  \n\n* 工作区和暂存区比较  \n`git diff [--] [<path>…]`  \n* 暂存区和某次提交（如HEAD）比较  \n`git diff --cached [<commit>] [--] [<path>…]`\n* 工作区和某次提交（如HEAD）比较  \n`git diff [<commit>] [--] [<path>…]`\n* 比较任意两次commit之间的改动  \n`git diff <commit> <commit> [--] [<path>]`\n\n__所有的diff都可以用difftool替代__\n\n######    1.5 git reset重置暂存区\n![Git Reset](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwple3j5j20gg079gmu.jpg)  \n`git reset`  \n`git reset --hard HEAD^`\n\n重置命令（git reset）是Git最常用的命令之一，也是最危险，最容易误用的命令。来看看git reset命令的用法。  \n用法一：`git reset [-q] [<commit>] [--] <paths>...`  \n用法二：`git reset [--soft | --mixed | --hard | --merge | --keep] [-q] [<commit>]`\n \n上面列出了两个用法，其中 <commit> 都是可选项，可以使用引用或者提交ID，如果省略 <commit> 则相当于使用了HEAD的指向作为提交ID。  \n上面列出的两种用法的区别在于，第一种用法在命令中包含路径<paths>。为了避免路径和引用（或者提交ID）同名而冲突，可以在<paths>前用两个连续的短线（减号）作为分隔。  \n* 第一种用法（包含了路径<paths>的用法）不会重置引用，更不会改变工作区，而是用指定提交状态（<commit>）下的文件（<paths>）替换掉暂存区中的文件。例如命令git reset HEAD <paths>相当于取消之前执行的git add <paths>命令时改变的暂存区。  \n* 第二种用法（不使用路径<paths>的用法）则会重置引用。根据不同的选项，可以对暂存区或者工作区进行重置。参照下面的版本库模型图，来看一看不同的参数对第二种重置语法的影响。  \n* \n命令格式: `git reset [--soft | --mixed | --hard ] [<commit>]`  \n* 使用参数--hard，如：`git reset --hard <commit>`  \n会执行上图中的1、2、3全部的三个动作。即：  \n1. 替换引用的指向。引用指向新的提交ID。  \n2. 替换暂存区。替换后，暂存区的内容和引用指向的目录树一致。  \n3. 替换工作区。替换后，工作区的内容变得和暂存区一致，也和HEAD所指向的目录树内容相同。  \n\n* 使用参数--soft，如:`git reset --soft <commit>`  \n会执行上图中的操作1。即只更改引用的指向，不改变暂存区和工作区。  \n* 使用参数--mixed或者不使用参数（缺省即为--mixed），如:`git reset <commit>`  \n会执行上图中的操作1和操作2。即更改引用的指向以及重置暂存区，但是不改变工作区。下面通过一些示例，看一下重置命令的不同用法。  \n* 命令：`git reset`  \n仅用HEAD指向的目录树重置暂存区，工作区不会受到影响，相当于将之前用git add命令更新到暂存区的内容撤出暂存区。引用也未改变，因为引用重置到HEAD相当于没有重置。\n* 命令：`git reset HEAD`  \n同上。  \n* 命令：`git reset -- filename`  \n仅将文件filename撤出暂存区，暂存区中其他文件不改变。相当于对命令git add filename的反向操作。 \n* 命令：`git reset HEAD filename`  \n同上。  \n* 命令：`git reset --soft HEAD^`  \n工作区和暂存区不改变，但是引用向前回退一次。当对最新提交的提交说明或者提交的更改不满意时，撤销最新的提交以便重新提交。 \n在之前曾经介绍过一个修补提交命令`git commit --amend`，用于对最新的提交进行重新提交以修补错误的提交说明或者错误的提交文件。修补提交命令实际上相当于执行了下面两条命令。（注：文件.git/COMMIT_EDITMSG保存了上次的提交日志）  \n`$ git reset --soft HEAD^`  \n`$ git commit -e -F .git/COMMIT_EDITMSG`  \n\n* 命令：`git reset HEAD^`  \n工作区不改变，但是暂存区会回退到上一次提交之前，引用也会回退一次。  \n* 命令：`git reset --mixed HEAD^`  \n同上。  \n* 命令：`git reset --hard HEAD^`  \n彻底撤销最近的提交。引用回退到前一次，而且工作区和暂存区都会回退到上一次提交的状态。自上一次以来的提交全部丢失。  \n\n######    1.6 git checkout检出到工作区\n![git checkout](http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4nwpmikdzj20e5080dgv.jpg)\n\n检出命令（git checkout）是Git最常用的命令之一，同样也很危险，因为这条命令会重写工作区。  \n用法一： `git checkout [-q] [<commit>] [--] <paths>...`  \n用法二： `git checkout [<branch>]`  \n用法三： `git checkout [-m] [[-b|--orphan] <new_branch>] [<start_point>]`  \n\n上面列出的第一种用法和第二种用法的区别在于，第一种用法在命令中包含路径`<paths>`。为了避免路径和引用（或者提交ID）同名而冲突，可以在`<paths>`前用两个连续的短线（减号）作为分隔。  \n>\n* 第一种用法的`<commit>`是可选项，如果省略则相当于从暂存区（index）进行检出。这和上一章的重置命令大不相同：重置的默认值是HEAD，而检出的默认值是暂存区。因此__重置一般用于重置暂存区__（除非使用--hard参数，否则不重置工作区），而__检出命令主要是覆盖工作区__（如果`<commit>`不省略，也会替换暂存区中相应的文件）。  \n* 第一种用法（包含了路径`<paths>`的用法）不会改变HEAD头指针，主要是用于指定版本的文件覆盖工作区中对应的文件。如果省略`<commit>`，会拿暂存区的文件覆盖工作区的文件，否则用指定提交中的文件覆盖暂存区和工作区中对应的文件。  \n* 第二种用法（不使用路径`<paths>`的用法）则会改变HEAD头指针。之所以后面的参数写作`<branch>`，是因为只有HEAD切换到一个分支才可以对提交进行跟踪，否则仍然会进入“分离头指针”的状态。在“分离头指针”状态下的提交不能被引用关联到而可能会丢失。所以用法二最主要的作用就是切换到分支。如果省略`<branch>`则相当于对工作区进行状态检查。 \n* 第三种用法主要是创建和切换到新的分支（`<new_branch>`），新的分支从`<start_point>`指定的提交开始创建。新分支和我们熟悉的master分支没有什么实质的不同，都是在refs/heads命名空间下的引用。关于分支和`git checkout`命令的这个用法会在后面的章节做具体的介绍。 \n\n######    1.7 文件忽略\n`.gitignore ` \n\n文件`.gitignore`的作用范围是其所处的目录及其子目录  \n忽略只对未跟踪文件有效，对于已加入版本库的文件无效  \n\nGit的忽略文件的语法规则：   \n\n* 忽略文件中的空行或者以井号（#）开始的行被忽略。  \n* 可以使用通配符，参见Linux手册：glob(7)。例如：星号（*）代表任意多字符，问号（?）代表一个字符，方括号（[abc]）代表可选字符范围等。  \n* 如果名称的最前面是一个路径分隔符（/），表明要忽略的文件在此目录下，而非子目录的文件。  \n* 如果名称的最后面是一个路径分隔符（/），表明要忽略的是整个目录，同名文件不忽略，否则同名的文件和目录都忽略。  \n* 通过在名称的最前面添加一个感叹号（!），代表不忽略。\n\n下面的文件忽略示例，包含了上述要点：  \n\\# 这是注释行 —— 被忽略  \n\\*.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有以.a 为扩展名的文件。  \n\\!lib.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 但是 lib.a 文件或者目录不要忽略，即使前面设置了对 *.a 的忽略。  \n/TODO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 只忽略根目录下的 TODO 文件，子目录的 TODO 文件不忽略。  \nbuild&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有 build/ 目录下的文件。 \ndoc/*.txt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略文件如 doc/notes.txt，但是文件如 doc/server/arch.txt 不被忽略。  \n\n######    1.8 分支管理\n`git branch` 查看分支  \n`git branch -r` 查看远程分支  \n`git branch <branch name>`创建分支  \n\n创建一个叫做“feature_x”的分支，并切换过去：   \n`git checkout -b feature_x`  \n切换回主分支：  \n`git checkout master`  \n再把新建的分支删掉：  \n`git branch -d feature_x`\n\n\n#####    2、远程版本库\n * 克隆远程仓库  \n `git clone <url>`  \n* 添加远程仓库  \n`git remote add <name> <url>`   \n* 删除远程仓库  \n`git remote remove <name>`  \n`git fetch [remote]`  \n`git pull [remote [refspec]]`= `git fetch` +  `git merge`   \n`git push [remote] [branch]`   \n* 快进式推送 `git push`\n* 强制非快进式推送 `git push -f`\n\n\n__Tracking__  \n\n* 从远程分支创建新分支，会直接添加对应的tracking  \n`git checkout -b test origin/master`  \n* 手动为分支添加tracking  \n`git branch --set-upstream master origin/next`  \n\n__git merge__   \n\n`git merge <branch>[--no-ff ]`  \n\n* Fast forward &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git允许执行快进式合并，添加--no-ff参数强制不使用快\n\n\n#####    3、最佳实践\n* 保持Working directory clean  \n* 长期分支  \n由于 Git 使用简单的三方合并，所以就算在较长一段时间内，反复多次把某个分支合并到另一分支，也不是什么难事。也就是说，你可以同时拥有多个开放的分 支，每个分支用于完成特定的任务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。  \n许多使用 Git 的开发者都喜欢用这种方式来开展工作，比如仅在 master 分支中保留完全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名 为 develop 或 next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 — 当然并不是说一定要绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到 master 里。这样，在确保这些已完成的特性分支（短期分支）能够通过所有测试，并且不会引入更多错误之后，就可以并到主干分支中，等待下一次的发布。  \n本质上我们刚才谈论的，是随着提交对象不断右移的指针。稳定分支的指针总是在提交历史中落后一大截，而前沿分支总是比较靠前。\n![](http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4o337i90bj20d402j3yf.jpg)\n* 特性分支  \n特性分支从develop分支分出，最终必须合并回develop。  \n特性分支（也叫主题分支）用于开发新特性。每个新特性开一个新分支，最终会合并回develop（当特性开发完毕的时候），或者放弃（如果最终决定不开发这 个特性）。  \n特性分支只存在于开发者的仓库中。   \n在任何规模的项目中都可以使用特性（Topic）分支。一个特性分支是指一个短期的，用来实现单一特性或与其相关工作的分支。可能你在以前的版本控制系统 里从未做过类似这样的事情，因为通常创建与合并分支消耗太大。然而在 Git 中，一天之内建立、使用、合并再删除多个分支是常见的事。  \n我们可以创建特性分支，在提交了若干更新后，把它们合并到主干分支，然后删除。该技术允许你迅速且完全的进行语境切换 — 因为你的工作分散在不同的分 支里，每个分支里的改变都和它的目标特性相关，浏览代码之类的事情因而变得更简单了。你可以把作出的改变保持在特性分支中几分钟，几天甚至几个月，等 它们成熟以后再合并，而不用在乎它们建立的顺序或者进度。  \n现在我们来看一个实际的例子。请看图，由下往上，起先我们在 master 工作到 C1，然后开始一个新分支 iss91 尝试修复 91 号缺陷，提交到 C6 的时候，又冒 出一个解决该问题的新办法，于是从之前 C4 的地方又分出一个分支 iss91v2，干到 C8 的时候，又回到主干 master 中提交了 C9 和 C10，再回到 iss91v2 继续 工作，提交 C11，接着，又冒出个不太确定的想法，从 master 的最新提交 C10 处开了个新的分支 dumbidea 做些试验。    \n![](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o335f4fcj20bp0c8wen.jpg)  \n现在，假定两件事情：我们最终决定使用第二个解决方案，即 iss91v2 中的办法；另外，我们把 dumbidea 分支拿给同事们看了以后，发现它竟然是个天才之 作。所以接下来，我们准备抛弃原来的 iss91 分支（实际上会丢弃 C5 和 C6），直接在主干中并入另外两个分支。最终的提交历史将变成这样：  \n![](http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4o3360pojj209f0dzglq.jpg)  \n请务必牢记这些分支全部都是本地分支，这一点很重要。当你在使用分支及合并的时候，一切都是在你自己的Git仓库中进行的—完全不涉及与服务器的交互。\n\n* 提交做小  \n* git保存用户名、密码   \n1.在Windows中添加一个HOME环境变量，值为%USERPROFILE%，如下图：\n![](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o336oe3gj20as0603yn.jpg)  \n2.在“开始>运行”中打开%Home%，新建一个名为“_netrc”的文件。  \n3.用记事本打开\\_netrc文件，输入Git服务器名、用户名、密码，并保存。示例如下  \n`machine github.com`  \n`login 用户名`  \n`password 密码`\n* 配置git mergetool和git difftool  \n__通过git config命令__  \n配置difftool:   \n`git config --global diff.tool bc`  \n`git config --global difftool.bc.cmd \"\\\"c:/program files/beyond compare 3/bcomp.exe\\\" \\\"\\$LOCAL\\\" \\\"\\$REMOTE\\\"\"`  \n`git config --global difftool.prompt false`  \n配置mergetool:  \n`git config --global merge.tool bc`  \n`git config --global mergetool.bc.cmd \"\\\"c:/program files/beyond compare 3/bcomp.exe\\\" \\\"\\$LOCAL\\\" \\\"\\$REMOTE\\\" \\\"\\$BASE\\\" \\\"\\$MERGED\\\"\"`  \n`git config --global mergetool.bc.trustExitCode true`  \n不生成备份文件  \n`git config --global mergetool.keepBackup false`  \n__直接修改%USERPROFILE%\\.gitconfig文件，完整文件如下：__  \n`[user]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`name = 用户名`   \n&nbsp;&nbsp;&nbsp;&nbsp;`email = 邮箱`  \n`[diff]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`tool = bc`  \n`[difftool \"bc\"]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`cmd = \\\"C:/bc4/BCompare.exe\\\" \\\"$LOCAL\\\" \\\"$REMOTE\\\" `  \n`[difftool]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`prompt = false `  \n`[merge]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`tool = bc `  \n`[mergetool \"bc\"]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`cmd = \\\"C:/bc4/BCompare.exe\\\" \\\"$LOCAL\\\" \\\"$REMOTE\\\" \\\"$BASE\\\" \\\"$MERGED\\\" `  \n&nbsp;&nbsp;&nbsp;&nbsp;`trustExitCode = true`  \n`[mergetool]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`keepBackup = false`  \n\n#####    4、其他特性\n* git rebase  \n* git stash  \n* detached head 分离的头指针  \n* git reflog  ","source":"_posts/Git语法.md","raw":"---\ntitle: Git语法\ndate: 2016-08-03 16:13:45\ntags: Git\ncategories: Git\n---\n>本文摘自我的小伙伴[KevinJin](http://littlefisher.coding.me/2016/06/08/git/)\n\n开源中国的 [Pro Git（中文版）](http://git.oschina.net/progit/index.html)\n\n#####    1、Git基础\n######    1.1 分布式版本管理系统\n__常用操作:__\n\n* 克隆远程仓库  \n`git clone </path/to/repository>`\n\n* 查看工作区状态  \n`git status`\n\n\n<!-- more -->\n* 添加更改到暂存区  \n`git add <filename>`&nbsp;&nbsp;添加某个文件  \n`git add .`&nbsp;&nbsp;添加当前目录及子目录所有文件  \n`git add -A`    &nbsp;&nbsp;添加所有改动\n\n* 使用如下命令以实际提交改动  \n`git commit -m \"代码提交信息\"`\n\n* 分支操作  \n`git branch <branch name>`&nbsp;&nbsp;新建分支  \n`git checkout <branch name>`&nbsp;&nbsp;切换到某个分支\n`git branch -d <branch name>`&nbsp;&nbsp;删除分支\n\n* 要合并其他分支（可以是任何远程分支或本地分支）到你的当前分支，执行：  \n`git merge <branch>`&nbsp;&nbsp;//git merge dev  \n`git merge origin/dev`\n\n* 获取远程仓库改动  \n`git fetch <remote>`&nbsp;&nbsp;//git fetch origin\n\n* 获取远程仓库改动，同时合并（merge）到当前分支  \n`git pull <remote> <branch>`&nbsp;&nbsp;//git pull origin dev&nbsp;&nbsp;获取远程仓库origin的dev分支，合并到当前分支\n\n* 推送当前分支到远程仓库  \n`git push <remote> <branch>`&nbsp;&nbsp;//git push origin dev&nbsp;&nbsp;推送当前分支到远程仓库origin的dev分支  \n![GIT CHEAT SHEET](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwpid97qj20j80r6n75.jpg)\n\n######    1.2 Git初始化，创建一个新的本地仓库\n安装git后，配置自己的个人信息  \n`git config --global user.name \"KevinJin614\"`\n`git config --global user.email \"***@qq.com\"`  \n创建新文件夹，打开，然后执行  \n`git init git add`\n`git commit`\n以创建新的 git 仓库\n\n######    1.3 Git暂存区\n你的本地仓库由 git 维护的三棵“树”组成。第一个是你的__工作目录__，它持有实际文件；第二个是__暂存区（Index）__,它像个缓存区域，临时保存你的改动；最后是 __HEAD__，它指向你最后一次提交的结果。  \nHEAD和分支都是引用。  \n![Git暂存区](http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4nwpjgxwqj20g607975m.jpg)  \n使用`git status [-s]` 查看工作区状态，添加-s参数以精简模式显示\n\n* 当执行git reset HEAD命令时，暂存区的目录树会被重写，被master分支指向的目录树所替换，但是工作区不受影响。\n\n* 当执行`git rm --cached <file>`命令时，会直接从暂存区删除文件，工作区则不做出改变。 \n* 当执行`git checkout `.或者`git checkout -- <file>`命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。 \n* 当执行`git checkout HEAD .`或者`git checkout HEAD <file>`命令时，会用HEAD指向的master分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。  \n\n######    1.4 git diff  \n![Git Diff](http://ww3.sinaimg.cn/mw690/7dde05d2gw1f4nwpk1epjj20e50723zk.jpg)  \n\n* 工作区和暂存区比较  \n`git diff [--] [<path>…]`  \n* 暂存区和某次提交（如HEAD）比较  \n`git diff --cached [<commit>] [--] [<path>…]`\n* 工作区和某次提交（如HEAD）比较  \n`git diff [<commit>] [--] [<path>…]`\n* 比较任意两次commit之间的改动  \n`git diff <commit> <commit> [--] [<path>]`\n\n__所有的diff都可以用difftool替代__\n\n######    1.5 git reset重置暂存区\n![Git Reset](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwple3j5j20gg079gmu.jpg)  \n`git reset`  \n`git reset --hard HEAD^`\n\n重置命令（git reset）是Git最常用的命令之一，也是最危险，最容易误用的命令。来看看git reset命令的用法。  \n用法一：`git reset [-q] [<commit>] [--] <paths>...`  \n用法二：`git reset [--soft | --mixed | --hard | --merge | --keep] [-q] [<commit>]`\n \n上面列出了两个用法，其中 <commit> 都是可选项，可以使用引用或者提交ID，如果省略 <commit> 则相当于使用了HEAD的指向作为提交ID。  \n上面列出的两种用法的区别在于，第一种用法在命令中包含路径<paths>。为了避免路径和引用（或者提交ID）同名而冲突，可以在<paths>前用两个连续的短线（减号）作为分隔。  \n* 第一种用法（包含了路径<paths>的用法）不会重置引用，更不会改变工作区，而是用指定提交状态（<commit>）下的文件（<paths>）替换掉暂存区中的文件。例如命令git reset HEAD <paths>相当于取消之前执行的git add <paths>命令时改变的暂存区。  \n* 第二种用法（不使用路径<paths>的用法）则会重置引用。根据不同的选项，可以对暂存区或者工作区进行重置。参照下面的版本库模型图，来看一看不同的参数对第二种重置语法的影响。  \n* \n命令格式: `git reset [--soft | --mixed | --hard ] [<commit>]`  \n* 使用参数--hard，如：`git reset --hard <commit>`  \n会执行上图中的1、2、3全部的三个动作。即：  \n1. 替换引用的指向。引用指向新的提交ID。  \n2. 替换暂存区。替换后，暂存区的内容和引用指向的目录树一致。  \n3. 替换工作区。替换后，工作区的内容变得和暂存区一致，也和HEAD所指向的目录树内容相同。  \n\n* 使用参数--soft，如:`git reset --soft <commit>`  \n会执行上图中的操作1。即只更改引用的指向，不改变暂存区和工作区。  \n* 使用参数--mixed或者不使用参数（缺省即为--mixed），如:`git reset <commit>`  \n会执行上图中的操作1和操作2。即更改引用的指向以及重置暂存区，但是不改变工作区。下面通过一些示例，看一下重置命令的不同用法。  \n* 命令：`git reset`  \n仅用HEAD指向的目录树重置暂存区，工作区不会受到影响，相当于将之前用git add命令更新到暂存区的内容撤出暂存区。引用也未改变，因为引用重置到HEAD相当于没有重置。\n* 命令：`git reset HEAD`  \n同上。  \n* 命令：`git reset -- filename`  \n仅将文件filename撤出暂存区，暂存区中其他文件不改变。相当于对命令git add filename的反向操作。 \n* 命令：`git reset HEAD filename`  \n同上。  \n* 命令：`git reset --soft HEAD^`  \n工作区和暂存区不改变，但是引用向前回退一次。当对最新提交的提交说明或者提交的更改不满意时，撤销最新的提交以便重新提交。 \n在之前曾经介绍过一个修补提交命令`git commit --amend`，用于对最新的提交进行重新提交以修补错误的提交说明或者错误的提交文件。修补提交命令实际上相当于执行了下面两条命令。（注：文件.git/COMMIT_EDITMSG保存了上次的提交日志）  \n`$ git reset --soft HEAD^`  \n`$ git commit -e -F .git/COMMIT_EDITMSG`  \n\n* 命令：`git reset HEAD^`  \n工作区不改变，但是暂存区会回退到上一次提交之前，引用也会回退一次。  \n* 命令：`git reset --mixed HEAD^`  \n同上。  \n* 命令：`git reset --hard HEAD^`  \n彻底撤销最近的提交。引用回退到前一次，而且工作区和暂存区都会回退到上一次提交的状态。自上一次以来的提交全部丢失。  \n\n######    1.6 git checkout检出到工作区\n![git checkout](http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4nwpmikdzj20e5080dgv.jpg)\n\n检出命令（git checkout）是Git最常用的命令之一，同样也很危险，因为这条命令会重写工作区。  \n用法一： `git checkout [-q] [<commit>] [--] <paths>...`  \n用法二： `git checkout [<branch>]`  \n用法三： `git checkout [-m] [[-b|--orphan] <new_branch>] [<start_point>]`  \n\n上面列出的第一种用法和第二种用法的区别在于，第一种用法在命令中包含路径`<paths>`。为了避免路径和引用（或者提交ID）同名而冲突，可以在`<paths>`前用两个连续的短线（减号）作为分隔。  \n>\n* 第一种用法的`<commit>`是可选项，如果省略则相当于从暂存区（index）进行检出。这和上一章的重置命令大不相同：重置的默认值是HEAD，而检出的默认值是暂存区。因此__重置一般用于重置暂存区__（除非使用--hard参数，否则不重置工作区），而__检出命令主要是覆盖工作区__（如果`<commit>`不省略，也会替换暂存区中相应的文件）。  \n* 第一种用法（包含了路径`<paths>`的用法）不会改变HEAD头指针，主要是用于指定版本的文件覆盖工作区中对应的文件。如果省略`<commit>`，会拿暂存区的文件覆盖工作区的文件，否则用指定提交中的文件覆盖暂存区和工作区中对应的文件。  \n* 第二种用法（不使用路径`<paths>`的用法）则会改变HEAD头指针。之所以后面的参数写作`<branch>`，是因为只有HEAD切换到一个分支才可以对提交进行跟踪，否则仍然会进入“分离头指针”的状态。在“分离头指针”状态下的提交不能被引用关联到而可能会丢失。所以用法二最主要的作用就是切换到分支。如果省略`<branch>`则相当于对工作区进行状态检查。 \n* 第三种用法主要是创建和切换到新的分支（`<new_branch>`），新的分支从`<start_point>`指定的提交开始创建。新分支和我们熟悉的master分支没有什么实质的不同，都是在refs/heads命名空间下的引用。关于分支和`git checkout`命令的这个用法会在后面的章节做具体的介绍。 \n\n######    1.7 文件忽略\n`.gitignore ` \n\n文件`.gitignore`的作用范围是其所处的目录及其子目录  \n忽略只对未跟踪文件有效，对于已加入版本库的文件无效  \n\nGit的忽略文件的语法规则：   \n\n* 忽略文件中的空行或者以井号（#）开始的行被忽略。  \n* 可以使用通配符，参见Linux手册：glob(7)。例如：星号（*）代表任意多字符，问号（?）代表一个字符，方括号（[abc]）代表可选字符范围等。  \n* 如果名称的最前面是一个路径分隔符（/），表明要忽略的文件在此目录下，而非子目录的文件。  \n* 如果名称的最后面是一个路径分隔符（/），表明要忽略的是整个目录，同名文件不忽略，否则同名的文件和目录都忽略。  \n* 通过在名称的最前面添加一个感叹号（!），代表不忽略。\n\n下面的文件忽略示例，包含了上述要点：  \n\\# 这是注释行 —— 被忽略  \n\\*.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有以.a 为扩展名的文件。  \n\\!lib.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 但是 lib.a 文件或者目录不要忽略，即使前面设置了对 *.a 的忽略。  \n/TODO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 只忽略根目录下的 TODO 文件，子目录的 TODO 文件不忽略。  \nbuild&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有 build/ 目录下的文件。 \ndoc/*.txt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略文件如 doc/notes.txt，但是文件如 doc/server/arch.txt 不被忽略。  \n\n######    1.8 分支管理\n`git branch` 查看分支  \n`git branch -r` 查看远程分支  \n`git branch <branch name>`创建分支  \n\n创建一个叫做“feature_x”的分支，并切换过去：   \n`git checkout -b feature_x`  \n切换回主分支：  \n`git checkout master`  \n再把新建的分支删掉：  \n`git branch -d feature_x`\n\n\n#####    2、远程版本库\n * 克隆远程仓库  \n `git clone <url>`  \n* 添加远程仓库  \n`git remote add <name> <url>`   \n* 删除远程仓库  \n`git remote remove <name>`  \n`git fetch [remote]`  \n`git pull [remote [refspec]]`= `git fetch` +  `git merge`   \n`git push [remote] [branch]`   \n* 快进式推送 `git push`\n* 强制非快进式推送 `git push -f`\n\n\n__Tracking__  \n\n* 从远程分支创建新分支，会直接添加对应的tracking  \n`git checkout -b test origin/master`  \n* 手动为分支添加tracking  \n`git branch --set-upstream master origin/next`  \n\n__git merge__   \n\n`git merge <branch>[--no-ff ]`  \n\n* Fast forward &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git允许执行快进式合并，添加--no-ff参数强制不使用快\n\n\n#####    3、最佳实践\n* 保持Working directory clean  \n* 长期分支  \n由于 Git 使用简单的三方合并，所以就算在较长一段时间内，反复多次把某个分支合并到另一分支，也不是什么难事。也就是说，你可以同时拥有多个开放的分 支，每个分支用于完成特定的任务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。  \n许多使用 Git 的开发者都喜欢用这种方式来开展工作，比如仅在 master 分支中保留完全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名 为 develop 或 next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 — 当然并不是说一定要绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到 master 里。这样，在确保这些已完成的特性分支（短期分支）能够通过所有测试，并且不会引入更多错误之后，就可以并到主干分支中，等待下一次的发布。  \n本质上我们刚才谈论的，是随着提交对象不断右移的指针。稳定分支的指针总是在提交历史中落后一大截，而前沿分支总是比较靠前。\n![](http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4o337i90bj20d402j3yf.jpg)\n* 特性分支  \n特性分支从develop分支分出，最终必须合并回develop。  \n特性分支（也叫主题分支）用于开发新特性。每个新特性开一个新分支，最终会合并回develop（当特性开发完毕的时候），或者放弃（如果最终决定不开发这 个特性）。  \n特性分支只存在于开发者的仓库中。   \n在任何规模的项目中都可以使用特性（Topic）分支。一个特性分支是指一个短期的，用来实现单一特性或与其相关工作的分支。可能你在以前的版本控制系统 里从未做过类似这样的事情，因为通常创建与合并分支消耗太大。然而在 Git 中，一天之内建立、使用、合并再删除多个分支是常见的事。  \n我们可以创建特性分支，在提交了若干更新后，把它们合并到主干分支，然后删除。该技术允许你迅速且完全的进行语境切换 — 因为你的工作分散在不同的分 支里，每个分支里的改变都和它的目标特性相关，浏览代码之类的事情因而变得更简单了。你可以把作出的改变保持在特性分支中几分钟，几天甚至几个月，等 它们成熟以后再合并，而不用在乎它们建立的顺序或者进度。  \n现在我们来看一个实际的例子。请看图，由下往上，起先我们在 master 工作到 C1，然后开始一个新分支 iss91 尝试修复 91 号缺陷，提交到 C6 的时候，又冒 出一个解决该问题的新办法，于是从之前 C4 的地方又分出一个分支 iss91v2，干到 C8 的时候，又回到主干 master 中提交了 C9 和 C10，再回到 iss91v2 继续 工作，提交 C11，接着，又冒出个不太确定的想法，从 master 的最新提交 C10 处开了个新的分支 dumbidea 做些试验。    \n![](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o335f4fcj20bp0c8wen.jpg)  \n现在，假定两件事情：我们最终决定使用第二个解决方案，即 iss91v2 中的办法；另外，我们把 dumbidea 分支拿给同事们看了以后，发现它竟然是个天才之 作。所以接下来，我们准备抛弃原来的 iss91 分支（实际上会丢弃 C5 和 C6），直接在主干中并入另外两个分支。最终的提交历史将变成这样：  \n![](http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4o3360pojj209f0dzglq.jpg)  \n请务必牢记这些分支全部都是本地分支，这一点很重要。当你在使用分支及合并的时候，一切都是在你自己的Git仓库中进行的—完全不涉及与服务器的交互。\n\n* 提交做小  \n* git保存用户名、密码   \n1.在Windows中添加一个HOME环境变量，值为%USERPROFILE%，如下图：\n![](http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o336oe3gj20as0603yn.jpg)  \n2.在“开始>运行”中打开%Home%，新建一个名为“_netrc”的文件。  \n3.用记事本打开\\_netrc文件，输入Git服务器名、用户名、密码，并保存。示例如下  \n`machine github.com`  \n`login 用户名`  \n`password 密码`\n* 配置git mergetool和git difftool  \n__通过git config命令__  \n配置difftool:   \n`git config --global diff.tool bc`  \n`git config --global difftool.bc.cmd \"\\\"c:/program files/beyond compare 3/bcomp.exe\\\" \\\"\\$LOCAL\\\" \\\"\\$REMOTE\\\"\"`  \n`git config --global difftool.prompt false`  \n配置mergetool:  \n`git config --global merge.tool bc`  \n`git config --global mergetool.bc.cmd \"\\\"c:/program files/beyond compare 3/bcomp.exe\\\" \\\"\\$LOCAL\\\" \\\"\\$REMOTE\\\" \\\"\\$BASE\\\" \\\"\\$MERGED\\\"\"`  \n`git config --global mergetool.bc.trustExitCode true`  \n不生成备份文件  \n`git config --global mergetool.keepBackup false`  \n__直接修改%USERPROFILE%\\.gitconfig文件，完整文件如下：__  \n`[user]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`name = 用户名`   \n&nbsp;&nbsp;&nbsp;&nbsp;`email = 邮箱`  \n`[diff]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`tool = bc`  \n`[difftool \"bc\"]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`cmd = \\\"C:/bc4/BCompare.exe\\\" \\\"$LOCAL\\\" \\\"$REMOTE\\\" `  \n`[difftool]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`prompt = false `  \n`[merge]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`tool = bc `  \n`[mergetool \"bc\"]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`cmd = \\\"C:/bc4/BCompare.exe\\\" \\\"$LOCAL\\\" \\\"$REMOTE\\\" \\\"$BASE\\\" \\\"$MERGED\\\" `  \n&nbsp;&nbsp;&nbsp;&nbsp;`trustExitCode = true`  \n`[mergetool]`  \n&nbsp;&nbsp;&nbsp;&nbsp;`keepBackup = false`  \n\n#####    4、其他特性\n* git rebase  \n* git stash  \n* detached head 分离的头指针  \n* git reflog  ","slug":"Git语法","published":1,"updated":"2016-09-19T03:20:49.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfyi0012gwag3733zmyu","content":"<blockquote>\n<p>本文摘自我的小伙伴<a href=\"http://littlefisher.coding.me/2016/06/08/git/\" target=\"_blank\" rel=\"external\">KevinJin</a></p>\n</blockquote>\n<p>开源中国的 <a href=\"http://git.oschina.net/progit/index.html\" target=\"_blank\" rel=\"external\">Pro Git（中文版）</a></p>\n<h5 id=\"1、Git基础\"><a href=\"#1、Git基础\" class=\"headerlink\" title=\"1、Git基础\"></a>1、Git基础</h5><h6 id=\"1-1-分布式版本管理系统\"><a href=\"#1-1-分布式版本管理系统\" class=\"headerlink\" title=\"1.1 分布式版本管理系统\"></a>1.1 分布式版本管理系统</h6><p><strong>常用操作:</strong></p>\n<ul>\n<li><p>克隆远程仓库<br><code>git clone &lt;/path/to/repository&gt;</code></p>\n</li>\n<li><p>查看工作区状态<br><code>git status</code></p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><p>添加更改到暂存区<br><code>git add &lt;filename&gt;</code>&nbsp;&nbsp;添加某个文件<br><code>git add .</code>&nbsp;&nbsp;添加当前目录及子目录所有文件<br><code>git add -A</code>    &nbsp;&nbsp;添加所有改动</p>\n</li>\n<li><p>使用如下命令以实际提交改动<br><code>git commit -m &quot;代码提交信息&quot;</code></p>\n</li>\n<li><p>分支操作<br><code>git branch &lt;branch name&gt;</code>&nbsp;&nbsp;新建分支<br><code>git checkout &lt;branch name&gt;</code>&nbsp;&nbsp;切换到某个分支<br><code>git branch -d &lt;branch name&gt;</code>&nbsp;&nbsp;删除分支</p>\n</li>\n<li><p>要合并其他分支（可以是任何远程分支或本地分支）到你的当前分支，执行：<br><code>git merge &lt;branch&gt;</code>&nbsp;&nbsp;//git merge dev<br><code>git merge origin/dev</code></p>\n</li>\n<li><p>获取远程仓库改动<br><code>git fetch &lt;remote&gt;</code>&nbsp;&nbsp;//git fetch origin</p>\n</li>\n<li><p>获取远程仓库改动，同时合并（merge）到当前分支<br><code>git pull &lt;remote&gt; &lt;branch&gt;</code>&nbsp;&nbsp;//git pull origin dev&nbsp;&nbsp;获取远程仓库origin的dev分支，合并到当前分支</p>\n</li>\n<li><p>推送当前分支到远程仓库<br><code>git push &lt;remote&gt; &lt;branch&gt;</code>&nbsp;&nbsp;//git push origin dev&nbsp;&nbsp;推送当前分支到远程仓库origin的dev分支<br><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwpid97qj20j80r6n75.jpg\" alt=\"GIT CHEAT SHEET\"></p>\n</li>\n</ul>\n<h6 id=\"1-2-Git初始化，创建一个新的本地仓库\"><a href=\"#1-2-Git初始化，创建一个新的本地仓库\" class=\"headerlink\" title=\"1.2 Git初始化，创建一个新的本地仓库\"></a>1.2 Git初始化，创建一个新的本地仓库</h6><p>安装git后，配置自己的个人信息<br><code>git config --global user.name &quot;KevinJin614&quot;</code><br><code>git config --global user.email &quot;***@qq.com&quot;</code><br>创建新文件夹，打开，然后执行<br><code>git init git add</code><br><code>git commit</code><br>以创建新的 git 仓库</p>\n<h6 id=\"1-3-Git暂存区\"><a href=\"#1-3-Git暂存区\" class=\"headerlink\" title=\"1.3 Git暂存区\"></a>1.3 Git暂存区</h6><p>你的本地仓库由 git 维护的三棵“树”组成。第一个是你的<strong>工作目录</strong>，它持有实际文件；第二个是<strong>暂存区（Index）</strong>,它像个缓存区域，临时保存你的改动；最后是 <strong>HEAD</strong>，它指向你最后一次提交的结果。<br>HEAD和分支都是引用。<br><img src=\"http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4nwpjgxwqj20g607975m.jpg\" alt=\"Git暂存区\"><br>使用<code>git status [-s]</code> 查看工作区状态，添加-s参数以精简模式显示</p>\n<ul>\n<li><p>当执行git reset HEAD命令时，暂存区的目录树会被重写，被master分支指向的目录树所替换，但是工作区不受影响。</p>\n</li>\n<li><p>当执行<code>git rm --cached &lt;file&gt;</code>命令时，会直接从暂存区删除文件，工作区则不做出改变。 </p>\n</li>\n<li>当执行<code>git checkout</code>.或者<code>git checkout -- &lt;file&gt;</code>命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。 </li>\n<li>当执行<code>git checkout HEAD .</code>或者<code>git checkout HEAD &lt;file&gt;</code>命令时，会用HEAD指向的master分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。  </li>\n</ul>\n<h6 id=\"1-4-git-diff\"><a href=\"#1-4-git-diff\" class=\"headerlink\" title=\"1.4 git diff\"></a>1.4 git diff</h6><p><img src=\"http://ww3.sinaimg.cn/mw690/7dde05d2gw1f4nwpk1epjj20e50723zk.jpg\" alt=\"Git Diff\">  </p>\n<ul>\n<li>工作区和暂存区比较<br><code>git diff [--] [&lt;path&gt;…]</code>  </li>\n<li>暂存区和某次提交（如HEAD）比较<br><code>git diff --cached [&lt;commit&gt;] [--] [&lt;path&gt;…]</code></li>\n<li>工作区和某次提交（如HEAD）比较<br><code>git diff [&lt;commit&gt;] [--] [&lt;path&gt;…]</code></li>\n<li>比较任意两次commit之间的改动<br><code>git diff &lt;commit&gt; &lt;commit&gt; [--] [&lt;path&gt;]</code></li>\n</ul>\n<p><strong>所有的diff都可以用difftool替代</strong></p>\n<h6 id=\"1-5-git-reset重置暂存区\"><a href=\"#1-5-git-reset重置暂存区\" class=\"headerlink\" title=\"1.5 git reset重置暂存区\"></a>1.5 git reset重置暂存区</h6><p><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwple3j5j20gg079gmu.jpg\" alt=\"Git Reset\"><br><code>git reset</code><br><code>git reset --hard HEAD^</code></p>\n<p>重置命令（git reset）是Git最常用的命令之一，也是最危险，最容易误用的命令。来看看git reset命令的用法。<br>用法一：<code>git reset [-q] [&lt;commit&gt;] [--] &lt;paths&gt;...</code><br>用法二：<code>git reset [--soft | --mixed | --hard | --merge | --keep] [-q] [&lt;commit&gt;]</code></p>\n<p>上面列出了两个用法，其中 <commit> 都是可选项，可以使用引用或者提交ID，如果省略 <commit> 则相当于使用了HEAD的指向作为提交ID。<br>上面列出的两种用法的区别在于，第一种用法在命令中包含路径<paths>。为了避免路径和引用（或者提交ID）同名而冲突，可以在<paths>前用两个连续的短线（减号）作为分隔。  </paths></paths></commit></commit></p>\n<ul>\n<li>第一种用法（包含了路径<paths>的用法）不会重置引用，更不会改变工作区，而是用指定提交状态（<commit>）下的文件（<paths>）替换掉暂存区中的文件。例如命令git reset HEAD <paths>相当于取消之前执行的git add <paths>命令时改变的暂存区。  </paths></paths></paths></commit></paths></li>\n<li>第二种用法（不使用路径<paths>的用法）则会重置引用。根据不同的选项，可以对暂存区或者工作区进行重置。参照下面的版本库模型图，来看一看不同的参数对第二种重置语法的影响。  </paths></li>\n<li>命令格式: <code>git reset [--soft | --mixed | --hard ] [&lt;commit&gt;]</code>  </li>\n<li>使用参数–hard，如：<code>git reset --hard &lt;commit&gt;</code><br>会执行上图中的1、2、3全部的三个动作。即：  </li>\n</ul>\n<ol>\n<li>替换引用的指向。引用指向新的提交ID。  </li>\n<li>替换暂存区。替换后，暂存区的内容和引用指向的目录树一致。  </li>\n<li>替换工作区。替换后，工作区的内容变得和暂存区一致，也和HEAD所指向的目录树内容相同。  </li>\n</ol>\n<ul>\n<li>使用参数–soft，如:<code>git reset --soft &lt;commit&gt;</code><br>会执行上图中的操作1。即只更改引用的指向，不改变暂存区和工作区。  </li>\n<li>使用参数–mixed或者不使用参数（缺省即为–mixed），如:<code>git reset &lt;commit&gt;</code><br>会执行上图中的操作1和操作2。即更改引用的指向以及重置暂存区，但是不改变工作区。下面通过一些示例，看一下重置命令的不同用法。  </li>\n<li>命令：<code>git reset</code><br>仅用HEAD指向的目录树重置暂存区，工作区不会受到影响，相当于将之前用git add命令更新到暂存区的内容撤出暂存区。引用也未改变，因为引用重置到HEAD相当于没有重置。</li>\n<li>命令：<code>git reset HEAD</code><br>同上。  </li>\n<li>命令：<code>git reset -- filename</code><br>仅将文件filename撤出暂存区，暂存区中其他文件不改变。相当于对命令git add filename的反向操作。 </li>\n<li>命令：<code>git reset HEAD filename</code><br>同上。  </li>\n<li><p>命令：<code>git reset --soft HEAD^</code><br>工作区和暂存区不改变，但是引用向前回退一次。当对最新提交的提交说明或者提交的更改不满意时，撤销最新的提交以便重新提交。<br>在之前曾经介绍过一个修补提交命令<code>git commit --amend</code>，用于对最新的提交进行重新提交以修补错误的提交说明或者错误的提交文件。修补提交命令实际上相当于执行了下面两条命令。（注：文件.git/COMMIT_EDITMSG保存了上次的提交日志）<br><code>$ git reset --soft HEAD^</code><br><code>$ git commit -e -F .git/COMMIT_EDITMSG</code>  </p>\n</li>\n<li><p>命令：<code>git reset HEAD^</code><br>工作区不改变，但是暂存区会回退到上一次提交之前，引用也会回退一次。  </p>\n</li>\n<li>命令：<code>git reset --mixed HEAD^</code><br>同上。  </li>\n<li>命令：<code>git reset --hard HEAD^</code><br>彻底撤销最近的提交。引用回退到前一次，而且工作区和暂存区都会回退到上一次提交的状态。自上一次以来的提交全部丢失。  </li>\n</ul>\n<h6 id=\"1-6-git-checkout检出到工作区\"><a href=\"#1-6-git-checkout检出到工作区\" class=\"headerlink\" title=\"1.6 git checkout检出到工作区\"></a>1.6 git checkout检出到工作区</h6><p><img src=\"http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4nwpmikdzj20e5080dgv.jpg\" alt=\"git checkout\"></p>\n<p>检出命令（git checkout）是Git最常用的命令之一，同样也很危险，因为这条命令会重写工作区。<br>用法一： <code>git checkout [-q] [&lt;commit&gt;] [--] &lt;paths&gt;...</code><br>用法二： <code>git checkout [&lt;branch&gt;]</code><br>用法三： <code>git checkout [-m] [[-b|--orphan] &lt;new_branch&gt;] [&lt;start_point&gt;]</code>  </p>\n<p>上面列出的第一种用法和第二种用法的区别在于，第一种用法在命令中包含路径<code>&lt;paths&gt;</code>。为了避免路径和引用（或者提交ID）同名而冲突，可以在<code>&lt;paths&gt;</code>前用两个连续的短线（减号）作为分隔。<br>&gt;</p>\n<ul>\n<li>第一种用法的<code>&lt;commit&gt;</code>是可选项，如果省略则相当于从暂存区（index）进行检出。这和上一章的重置命令大不相同：重置的默认值是HEAD，而检出的默认值是暂存区。因此<strong>重置一般用于重置暂存区</strong>（除非使用–hard参数，否则不重置工作区），而<strong>检出命令主要是覆盖工作区</strong>（如果<code>&lt;commit&gt;</code>不省略，也会替换暂存区中相应的文件）。  </li>\n<li>第一种用法（包含了路径<code>&lt;paths&gt;</code>的用法）不会改变HEAD头指针，主要是用于指定版本的文件覆盖工作区中对应的文件。如果省略<code>&lt;commit&gt;</code>，会拿暂存区的文件覆盖工作区的文件，否则用指定提交中的文件覆盖暂存区和工作区中对应的文件。  </li>\n<li>第二种用法（不使用路径<code>&lt;paths&gt;</code>的用法）则会改变HEAD头指针。之所以后面的参数写作<code>&lt;branch&gt;</code>，是因为只有HEAD切换到一个分支才可以对提交进行跟踪，否则仍然会进入“分离头指针”的状态。在“分离头指针”状态下的提交不能被引用关联到而可能会丢失。所以用法二最主要的作用就是切换到分支。如果省略<code>&lt;branch&gt;</code>则相当于对工作区进行状态检查。 </li>\n<li>第三种用法主要是创建和切换到新的分支（<code>&lt;new_branch&gt;</code>），新的分支从<code>&lt;start_point&gt;</code>指定的提交开始创建。新分支和我们熟悉的master分支没有什么实质的不同，都是在refs/heads命名空间下的引用。关于分支和<code>git checkout</code>命令的这个用法会在后面的章节做具体的介绍。 </li>\n</ul>\n<h6 id=\"1-7-文件忽略\"><a href=\"#1-7-文件忽略\" class=\"headerlink\" title=\"1.7 文件忽略\"></a>1.7 文件忽略</h6><p><code>.gitignore</code> </p>\n<p>文件<code>.gitignore</code>的作用范围是其所处的目录及其子目录<br>忽略只对未跟踪文件有效，对于已加入版本库的文件无效  </p>\n<p>Git的忽略文件的语法规则：   </p>\n<ul>\n<li>忽略文件中的空行或者以井号（#）开始的行被忽略。  </li>\n<li>可以使用通配符，参见Linux手册：glob(7)。例如：星号（*）代表任意多字符，问号（?）代表一个字符，方括号（[abc]）代表可选字符范围等。  </li>\n<li>如果名称的最前面是一个路径分隔符（/），表明要忽略的文件在此目录下，而非子目录的文件。  </li>\n<li>如果名称的最后面是一个路径分隔符（/），表明要忽略的是整个目录，同名文件不忽略，否则同名的文件和目录都忽略。  </li>\n<li>通过在名称的最前面添加一个感叹号（!），代表不忽略。</li>\n</ul>\n<p>下面的文件忽略示例，包含了上述要点：<br># 这是注释行 —— 被忽略<br>*.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有以.a 为扩展名的文件。<br>!lib.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 但是 lib.a 文件或者目录不要忽略，即使前面设置了对 <em>.a 的忽略。<br>/TODO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 只忽略根目录下的 TODO 文件，子目录的 TODO 文件不忽略。<br>build&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有 build/ 目录下的文件。<br>doc/</em>.txt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略文件如 doc/notes.txt，但是文件如 doc/server/arch.txt 不被忽略。  </p>\n<h6 id=\"1-8-分支管理\"><a href=\"#1-8-分支管理\" class=\"headerlink\" title=\"1.8 分支管理\"></a>1.8 分支管理</h6><p><code>git branch</code> 查看分支<br><code>git branch -r</code> 查看远程分支<br><code>git branch &lt;branch name&gt;</code>创建分支  </p>\n<p>创建一个叫做“feature_x”的分支，并切换过去：<br><code>git checkout -b feature_x</code><br>切换回主分支：<br><code>git checkout master</code><br>再把新建的分支删掉：<br><code>git branch -d feature_x</code></p>\n<h5 id=\"2、远程版本库\"><a href=\"#2、远程版本库\" class=\"headerlink\" title=\"2、远程版本库\"></a>2、远程版本库</h5><ul>\n<li>克隆远程仓库<br><code>git clone &lt;url&gt;</code>  <ul>\n<li>添加远程仓库<br><code>git remote add &lt;name&gt; &lt;url&gt;</code>   </li>\n<li>删除远程仓库<br><code>git remote remove &lt;name&gt;</code><br><code>git fetch [remote]</code><br><code>git pull [remote [refspec]]</code>= <code>git fetch</code> +  <code>git merge</code><br><code>git push [remote] [branch]</code>   </li>\n<li>快进式推送 <code>git push</code></li>\n<li>强制非快进式推送 <code>git push -f</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>Tracking</strong>  </p>\n<ul>\n<li>从远程分支创建新分支，会直接添加对应的tracking<br><code>git checkout -b test origin/master</code>  </li>\n<li>手动为分支添加tracking<br><code>git branch --set-upstream master origin/next</code>  </li>\n</ul>\n<p><strong>git merge</strong>   </p>\n<p><code>git merge &lt;branch&gt;[--no-ff ]</code>  </p>\n<ul>\n<li>Fast forward &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git允许执行快进式合并，添加–no-ff参数强制不使用快</li>\n</ul>\n<h5 id=\"3、最佳实践\"><a href=\"#3、最佳实践\" class=\"headerlink\" title=\"3、最佳实践\"></a>3、最佳实践</h5><ul>\n<li>保持Working directory clean  </li>\n<li>长期分支<br>由于 Git 使用简单的三方合并，所以就算在较长一段时间内，反复多次把某个分支合并到另一分支，也不是什么难事。也就是说，你可以同时拥有多个开放的分 支，每个分支用于完成特定的任务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。<br>许多使用 Git 的开发者都喜欢用这种方式来开展工作，比如仅在 master 分支中保留完全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名 为 develop 或 next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 — 当然并不是说一定要绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到 master 里。这样，在确保这些已完成的特性分支（短期分支）能够通过所有测试，并且不会引入更多错误之后，就可以并到主干分支中，等待下一次的发布。<br>本质上我们刚才谈论的，是随着提交对象不断右移的指针。稳定分支的指针总是在提交历史中落后一大截，而前沿分支总是比较靠前。<br><img src=\"http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4o337i90bj20d402j3yf.jpg\" alt=\"\"></li>\n<li><p>特性分支<br>特性分支从develop分支分出，最终必须合并回develop。<br>特性分支（也叫主题分支）用于开发新特性。每个新特性开一个新分支，最终会合并回develop（当特性开发完毕的时候），或者放弃（如果最终决定不开发这 个特性）。<br>特性分支只存在于开发者的仓库中。<br>在任何规模的项目中都可以使用特性（Topic）分支。一个特性分支是指一个短期的，用来实现单一特性或与其相关工作的分支。可能你在以前的版本控制系统 里从未做过类似这样的事情，因为通常创建与合并分支消耗太大。然而在 Git 中，一天之内建立、使用、合并再删除多个分支是常见的事。<br>我们可以创建特性分支，在提交了若干更新后，把它们合并到主干分支，然后删除。该技术允许你迅速且完全的进行语境切换 — 因为你的工作分散在不同的分 支里，每个分支里的改变都和它的目标特性相关，浏览代码之类的事情因而变得更简单了。你可以把作出的改变保持在特性分支中几分钟，几天甚至几个月，等 它们成熟以后再合并，而不用在乎它们建立的顺序或者进度。<br>现在我们来看一个实际的例子。请看图，由下往上，起先我们在 master 工作到 C1，然后开始一个新分支 iss91 尝试修复 91 号缺陷，提交到 C6 的时候，又冒 出一个解决该问题的新办法，于是从之前 C4 的地方又分出一个分支 iss91v2，干到 C8 的时候，又回到主干 master 中提交了 C9 和 C10，再回到 iss91v2 继续 工作，提交 C11，接着，又冒出个不太确定的想法，从 master 的最新提交 C10 处开了个新的分支 dumbidea 做些试验。<br><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o335f4fcj20bp0c8wen.jpg\" alt=\"\"><br>现在，假定两件事情：我们最终决定使用第二个解决方案，即 iss91v2 中的办法；另外，我们把 dumbidea 分支拿给同事们看了以后，发现它竟然是个天才之 作。所以接下来，我们准备抛弃原来的 iss91 分支（实际上会丢弃 C5 和 C6），直接在主干中并入另外两个分支。最终的提交历史将变成这样：<br><img src=\"http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4o3360pojj209f0dzglq.jpg\" alt=\"\"><br>请务必牢记这些分支全部都是本地分支，这一点很重要。当你在使用分支及合并的时候，一切都是在你自己的Git仓库中进行的—完全不涉及与服务器的交互。</p>\n</li>\n<li><p>提交做小  </p>\n</li>\n<li>git保存用户名、密码<br>1.在Windows中添加一个HOME环境变量，值为%USERPROFILE%，如下图：<br><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o336oe3gj20as0603yn.jpg\" alt=\"\"><br>2.在“开始&gt;运行”中打开%Home%，新建一个名为“_netrc”的文件。<br>3.用记事本打开_netrc文件，输入Git服务器名、用户名、密码，并保存。示例如下<br><code>machine github.com</code><br><code>login 用户名</code><br><code>password 密码</code></li>\n<li>配置git mergetool和git difftool<br><strong>通过git config命令</strong><br>配置difftool:<br><code>git config --global diff.tool bc</code><br><code>git config --global difftool.bc.cmd &quot;\\&quot;c:/program files/beyond compare 3/bcomp.exe\\&quot; \\&quot;\\$LOCAL\\&quot; \\&quot;\\$REMOTE\\&quot;&quot;</code><br><code>git config --global difftool.prompt false</code><br>配置mergetool:<br><code>git config --global merge.tool bc</code><br><code>git config --global mergetool.bc.cmd &quot;\\&quot;c:/program files/beyond compare 3/bcomp.exe\\&quot; \\&quot;\\$LOCAL\\&quot; \\&quot;\\$REMOTE\\&quot; \\&quot;\\$BASE\\&quot; \\&quot;\\$MERGED\\&quot;&quot;</code><br><code>git config --global mergetool.bc.trustExitCode true</code><br>不生成备份文件<br><code>git config --global mergetool.keepBackup false</code><br><strong>直接修改%USERPROFILE%.gitconfig文件，完整文件如下：</strong><br><code>[user]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>name = 用户名</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>email = 邮箱</code><br><code>[diff]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>tool = bc</code><br><code>[difftool &quot;bc&quot;]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>cmd = \\&quot;C:/bc4/BCompare.exe\\&quot; \\&quot;$LOCAL\\&quot; \\&quot;$REMOTE\\&quot;</code><br><code>[difftool]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>prompt = false</code><br><code>[merge]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>tool = bc</code><br><code>[mergetool &quot;bc&quot;]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>cmd = \\&quot;C:/bc4/BCompare.exe\\&quot; \\&quot;$LOCAL\\&quot; \\&quot;$REMOTE\\&quot; \\&quot;$BASE\\&quot; \\&quot;$MERGED\\&quot;</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>trustExitCode = true</code><br><code>[mergetool]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>keepBackup = false</code>  </li>\n</ul>\n<h5 id=\"4、其他特性\"><a href=\"#4、其他特性\" class=\"headerlink\" title=\"4、其他特性\"></a>4、其他特性</h5><ul>\n<li>git rebase  </li>\n<li>git stash  </li>\n<li>detached head 分离的头指针  </li>\n<li>git reflog  </li>\n</ul>\n","excerpt":"<blockquote>\n<p>本文摘自我的小伙伴<a href=\"http://littlefisher.coding.me/2016/06/08/git/\">KevinJin</a></p>\n</blockquote>\n<p>开源中国的 <a href=\"http://git.oschina.net/progit/index.html\">Pro Git（中文版）</a></p>\n<h5 id=\"1、Git基础\"><a href=\"#1、Git基础\" class=\"headerlink\" title=\"1、Git基础\"></a>1、Git基础</h5><h6 id=\"1-1-分布式版本管理系统\"><a href=\"#1-1-分布式版本管理系统\" class=\"headerlink\" title=\"1.1 分布式版本管理系统\"></a>1.1 分布式版本管理系统</h6><p><strong>常用操作:</strong></p>\n<ul>\n<li><p>克隆远程仓库<br><code>git clone &lt;/path/to/repository&gt;</code></p>\n</li>\n<li><p>查看工作区状态<br><code>git status</code></p>\n</li>\n</ul>","more":"<ul>\n<li><p>添加更改到暂存区<br><code>git add &lt;filename&gt;</code>&nbsp;&nbsp;添加某个文件<br><code>git add .</code>&nbsp;&nbsp;添加当前目录及子目录所有文件<br><code>git add -A</code>    &nbsp;&nbsp;添加所有改动</p>\n</li>\n<li><p>使用如下命令以实际提交改动<br><code>git commit -m &quot;代码提交信息&quot;</code></p>\n</li>\n<li><p>分支操作<br><code>git branch &lt;branch name&gt;</code>&nbsp;&nbsp;新建分支<br><code>git checkout &lt;branch name&gt;</code>&nbsp;&nbsp;切换到某个分支<br><code>git branch -d &lt;branch name&gt;</code>&nbsp;&nbsp;删除分支</p>\n</li>\n<li><p>要合并其他分支（可以是任何远程分支或本地分支）到你的当前分支，执行：<br><code>git merge &lt;branch&gt;</code>&nbsp;&nbsp;//git merge dev<br><code>git merge origin/dev</code></p>\n</li>\n<li><p>获取远程仓库改动<br><code>git fetch &lt;remote&gt;</code>&nbsp;&nbsp;//git fetch origin</p>\n</li>\n<li><p>获取远程仓库改动，同时合并（merge）到当前分支<br><code>git pull &lt;remote&gt; &lt;branch&gt;</code>&nbsp;&nbsp;//git pull origin dev&nbsp;&nbsp;获取远程仓库origin的dev分支，合并到当前分支</p>\n</li>\n<li><p>推送当前分支到远程仓库<br><code>git push &lt;remote&gt; &lt;branch&gt;</code>&nbsp;&nbsp;//git push origin dev&nbsp;&nbsp;推送当前分支到远程仓库origin的dev分支<br><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwpid97qj20j80r6n75.jpg\" alt=\"GIT CHEAT SHEET\"></p>\n</li>\n</ul>\n<h6 id=\"1-2-Git初始化，创建一个新的本地仓库\"><a href=\"#1-2-Git初始化，创建一个新的本地仓库\" class=\"headerlink\" title=\"1.2 Git初始化，创建一个新的本地仓库\"></a>1.2 Git初始化，创建一个新的本地仓库</h6><p>安装git后，配置自己的个人信息<br><code>git config --global user.name &quot;KevinJin614&quot;</code><br><code>git config --global user.email &quot;***@qq.com&quot;</code><br>创建新文件夹，打开，然后执行<br><code>git init git add</code><br><code>git commit</code><br>以创建新的 git 仓库</p>\n<h6 id=\"1-3-Git暂存区\"><a href=\"#1-3-Git暂存区\" class=\"headerlink\" title=\"1.3 Git暂存区\"></a>1.3 Git暂存区</h6><p>你的本地仓库由 git 维护的三棵“树”组成。第一个是你的<strong>工作目录</strong>，它持有实际文件；第二个是<strong>暂存区（Index）</strong>,它像个缓存区域，临时保存你的改动；最后是 <strong>HEAD</strong>，它指向你最后一次提交的结果。<br>HEAD和分支都是引用。<br><img src=\"http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4nwpjgxwqj20g607975m.jpg\" alt=\"Git暂存区\"><br>使用<code>git status [-s]</code> 查看工作区状态，添加-s参数以精简模式显示</p>\n<ul>\n<li><p>当执行git reset HEAD命令时，暂存区的目录树会被重写，被master分支指向的目录树所替换，但是工作区不受影响。</p>\n</li>\n<li><p>当执行<code>git rm --cached &lt;file&gt;</code>命令时，会直接从暂存区删除文件，工作区则不做出改变。 </p>\n</li>\n<li>当执行<code>git checkout</code>.或者<code>git checkout -- &lt;file&gt;</code>命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。 </li>\n<li>当执行<code>git checkout HEAD .</code>或者<code>git checkout HEAD &lt;file&gt;</code>命令时，会用HEAD指向的master分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。  </li>\n</ul>\n<h6 id=\"1-4-git-diff\"><a href=\"#1-4-git-diff\" class=\"headerlink\" title=\"1.4 git diff\"></a>1.4 git diff</h6><p><img src=\"http://ww3.sinaimg.cn/mw690/7dde05d2gw1f4nwpk1epjj20e50723zk.jpg\" alt=\"Git Diff\">  </p>\n<ul>\n<li>工作区和暂存区比较<br><code>git diff [--] [&lt;path&gt;…]</code>  </li>\n<li>暂存区和某次提交（如HEAD）比较<br><code>git diff --cached [&lt;commit&gt;] [--] [&lt;path&gt;…]</code></li>\n<li>工作区和某次提交（如HEAD）比较<br><code>git diff [&lt;commit&gt;] [--] [&lt;path&gt;…]</code></li>\n<li>比较任意两次commit之间的改动<br><code>git diff &lt;commit&gt; &lt;commit&gt; [--] [&lt;path&gt;]</code></li>\n</ul>\n<p><strong>所有的diff都可以用difftool替代</strong></p>\n<h6 id=\"1-5-git-reset重置暂存区\"><a href=\"#1-5-git-reset重置暂存区\" class=\"headerlink\" title=\"1.5 git reset重置暂存区\"></a>1.5 git reset重置暂存区</h6><p><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4nwple3j5j20gg079gmu.jpg\" alt=\"Git Reset\"><br><code>git reset</code><br><code>git reset --hard HEAD^</code></p>\n<p>重置命令（git reset）是Git最常用的命令之一，也是最危险，最容易误用的命令。来看看git reset命令的用法。<br>用法一：<code>git reset [-q] [&lt;commit&gt;] [--] &lt;paths&gt;...</code><br>用法二：<code>git reset [--soft | --mixed | --hard | --merge | --keep] [-q] [&lt;commit&gt;]</code></p>\n<p>上面列出了两个用法，其中 <commit> 都是可选项，可以使用引用或者提交ID，如果省略 <commit> 则相当于使用了HEAD的指向作为提交ID。<br>上面列出的两种用法的区别在于，第一种用法在命令中包含路径<paths>。为了避免路径和引用（或者提交ID）同名而冲突，可以在<paths>前用两个连续的短线（减号）作为分隔。  </p>\n<ul>\n<li>第一种用法（包含了路径<paths>的用法）不会重置引用，更不会改变工作区，而是用指定提交状态（<commit>）下的文件（<paths>）替换掉暂存区中的文件。例如命令git reset HEAD <paths>相当于取消之前执行的git add <paths>命令时改变的暂存区。  </li>\n<li>第二种用法（不使用路径<paths>的用法）则会重置引用。根据不同的选项，可以对暂存区或者工作区进行重置。参照下面的版本库模型图，来看一看不同的参数对第二种重置语法的影响。  </li>\n<li>命令格式: <code>git reset [--soft | --mixed | --hard ] [&lt;commit&gt;]</code>  </li>\n<li>使用参数–hard，如：<code>git reset --hard &lt;commit&gt;</code><br>会执行上图中的1、2、3全部的三个动作。即：  </li>\n</ul>\n<ol>\n<li>替换引用的指向。引用指向新的提交ID。  </li>\n<li>替换暂存区。替换后，暂存区的内容和引用指向的目录树一致。  </li>\n<li>替换工作区。替换后，工作区的内容变得和暂存区一致，也和HEAD所指向的目录树内容相同。  </li>\n</ol>\n<ul>\n<li>使用参数–soft，如:<code>git reset --soft &lt;commit&gt;</code><br>会执行上图中的操作1。即只更改引用的指向，不改变暂存区和工作区。  </li>\n<li>使用参数–mixed或者不使用参数（缺省即为–mixed），如:<code>git reset &lt;commit&gt;</code><br>会执行上图中的操作1和操作2。即更改引用的指向以及重置暂存区，但是不改变工作区。下面通过一些示例，看一下重置命令的不同用法。  </li>\n<li>命令：<code>git reset</code><br>仅用HEAD指向的目录树重置暂存区，工作区不会受到影响，相当于将之前用git add命令更新到暂存区的内容撤出暂存区。引用也未改变，因为引用重置到HEAD相当于没有重置。</li>\n<li>命令：<code>git reset HEAD</code><br>同上。  </li>\n<li>命令：<code>git reset -- filename</code><br>仅将文件filename撤出暂存区，暂存区中其他文件不改变。相当于对命令git add filename的反向操作。 </li>\n<li>命令：<code>git reset HEAD filename</code><br>同上。  </li>\n<li><p>命令：<code>git reset --soft HEAD^</code><br>工作区和暂存区不改变，但是引用向前回退一次。当对最新提交的提交说明或者提交的更改不满意时，撤销最新的提交以便重新提交。<br>在之前曾经介绍过一个修补提交命令<code>git commit --amend</code>，用于对最新的提交进行重新提交以修补错误的提交说明或者错误的提交文件。修补提交命令实际上相当于执行了下面两条命令。（注：文件.git/COMMIT_EDITMSG保存了上次的提交日志）<br><code>$ git reset --soft HEAD^</code><br><code>$ git commit -e -F .git/COMMIT_EDITMSG</code>  </p>\n</li>\n<li><p>命令：<code>git reset HEAD^</code><br>工作区不改变，但是暂存区会回退到上一次提交之前，引用也会回退一次。  </p>\n</li>\n<li>命令：<code>git reset --mixed HEAD^</code><br>同上。  </li>\n<li>命令：<code>git reset --hard HEAD^</code><br>彻底撤销最近的提交。引用回退到前一次，而且工作区和暂存区都会回退到上一次提交的状态。自上一次以来的提交全部丢失。  </li>\n</ul>\n<h6 id=\"1-6-git-checkout检出到工作区\"><a href=\"#1-6-git-checkout检出到工作区\" class=\"headerlink\" title=\"1.6 git checkout检出到工作区\"></a>1.6 git checkout检出到工作区</h6><p><img src=\"http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4nwpmikdzj20e5080dgv.jpg\" alt=\"git checkout\"></p>\n<p>检出命令（git checkout）是Git最常用的命令之一，同样也很危险，因为这条命令会重写工作区。<br>用法一： <code>git checkout [-q] [&lt;commit&gt;] [--] &lt;paths&gt;...</code><br>用法二： <code>git checkout [&lt;branch&gt;]</code><br>用法三： <code>git checkout [-m] [[-b|--orphan] &lt;new_branch&gt;] [&lt;start_point&gt;]</code>  </p>\n<p>上面列出的第一种用法和第二种用法的区别在于，第一种用法在命令中包含路径<code>&lt;paths&gt;</code>。为了避免路径和引用（或者提交ID）同名而冲突，可以在<code>&lt;paths&gt;</code>前用两个连续的短线（减号）作为分隔。<br>&gt;</p>\n<ul>\n<li>第一种用法的<code>&lt;commit&gt;</code>是可选项，如果省略则相当于从暂存区（index）进行检出。这和上一章的重置命令大不相同：重置的默认值是HEAD，而检出的默认值是暂存区。因此<strong>重置一般用于重置暂存区</strong>（除非使用–hard参数，否则不重置工作区），而<strong>检出命令主要是覆盖工作区</strong>（如果<code>&lt;commit&gt;</code>不省略，也会替换暂存区中相应的文件）。  </li>\n<li>第一种用法（包含了路径<code>&lt;paths&gt;</code>的用法）不会改变HEAD头指针，主要是用于指定版本的文件覆盖工作区中对应的文件。如果省略<code>&lt;commit&gt;</code>，会拿暂存区的文件覆盖工作区的文件，否则用指定提交中的文件覆盖暂存区和工作区中对应的文件。  </li>\n<li>第二种用法（不使用路径<code>&lt;paths&gt;</code>的用法）则会改变HEAD头指针。之所以后面的参数写作<code>&lt;branch&gt;</code>，是因为只有HEAD切换到一个分支才可以对提交进行跟踪，否则仍然会进入“分离头指针”的状态。在“分离头指针”状态下的提交不能被引用关联到而可能会丢失。所以用法二最主要的作用就是切换到分支。如果省略<code>&lt;branch&gt;</code>则相当于对工作区进行状态检查。 </li>\n<li>第三种用法主要是创建和切换到新的分支（<code>&lt;new_branch&gt;</code>），新的分支从<code>&lt;start_point&gt;</code>指定的提交开始创建。新分支和我们熟悉的master分支没有什么实质的不同，都是在refs/heads命名空间下的引用。关于分支和<code>git checkout</code>命令的这个用法会在后面的章节做具体的介绍。 </li>\n</ul>\n<h6 id=\"1-7-文件忽略\"><a href=\"#1-7-文件忽略\" class=\"headerlink\" title=\"1.7 文件忽略\"></a>1.7 文件忽略</h6><p><code>.gitignore</code> </p>\n<p>文件<code>.gitignore</code>的作用范围是其所处的目录及其子目录<br>忽略只对未跟踪文件有效，对于已加入版本库的文件无效  </p>\n<p>Git的忽略文件的语法规则：   </p>\n<ul>\n<li>忽略文件中的空行或者以井号（#）开始的行被忽略。  </li>\n<li>可以使用通配符，参见Linux手册：glob(7)。例如：星号（*）代表任意多字符，问号（?）代表一个字符，方括号（[abc]）代表可选字符范围等。  </li>\n<li>如果名称的最前面是一个路径分隔符（/），表明要忽略的文件在此目录下，而非子目录的文件。  </li>\n<li>如果名称的最后面是一个路径分隔符（/），表明要忽略的是整个目录，同名文件不忽略，否则同名的文件和目录都忽略。  </li>\n<li>通过在名称的最前面添加一个感叹号（!），代表不忽略。</li>\n</ul>\n<p>下面的文件忽略示例，包含了上述要点：<br># 这是注释行 —— 被忽略<br>*.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有以.a 为扩展名的文件。<br>!lib.a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 但是 lib.a 文件或者目录不要忽略，即使前面设置了对 <em>.a 的忽略。<br>/TODO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 只忽略根目录下的 TODO 文件，子目录的 TODO 文件不忽略。<br>build&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略所有 build/ 目录下的文件。<br>doc/</em>.txt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 忽略文件如 doc/notes.txt，但是文件如 doc/server/arch.txt 不被忽略。  </p>\n<h6 id=\"1-8-分支管理\"><a href=\"#1-8-分支管理\" class=\"headerlink\" title=\"1.8 分支管理\"></a>1.8 分支管理</h6><p><code>git branch</code> 查看分支<br><code>git branch -r</code> 查看远程分支<br><code>git branch &lt;branch name&gt;</code>创建分支  </p>\n<p>创建一个叫做“feature_x”的分支，并切换过去：<br><code>git checkout -b feature_x</code><br>切换回主分支：<br><code>git checkout master</code><br>再把新建的分支删掉：<br><code>git branch -d feature_x</code></p>\n<h5 id=\"2、远程版本库\"><a href=\"#2、远程版本库\" class=\"headerlink\" title=\"2、远程版本库\"></a>2、远程版本库</h5><ul>\n<li>克隆远程仓库<br><code>git clone &lt;url&gt;</code>  <ul>\n<li>添加远程仓库<br><code>git remote add &lt;name&gt; &lt;url&gt;</code>   </li>\n<li>删除远程仓库<br><code>git remote remove &lt;name&gt;</code><br><code>git fetch [remote]</code><br><code>git pull [remote [refspec]]</code>= <code>git fetch</code> +  <code>git merge</code><br><code>git push [remote] [branch]</code>   </li>\n<li>快进式推送 <code>git push</code></li>\n<li>强制非快进式推送 <code>git push -f</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>Tracking</strong>  </p>\n<ul>\n<li>从远程分支创建新分支，会直接添加对应的tracking<br><code>git checkout -b test origin/master</code>  </li>\n<li>手动为分支添加tracking<br><code>git branch --set-upstream master origin/next</code>  </li>\n</ul>\n<p><strong>git merge</strong>   </p>\n<p><code>git merge &lt;branch&gt;[--no-ff ]</code>  </p>\n<ul>\n<li>Fast forward &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git允许执行快进式合并，添加–no-ff参数强制不使用快</li>\n</ul>\n<h5 id=\"3、最佳实践\"><a href=\"#3、最佳实践\" class=\"headerlink\" title=\"3、最佳实践\"></a>3、最佳实践</h5><ul>\n<li>保持Working directory clean  </li>\n<li>长期分支<br>由于 Git 使用简单的三方合并，所以就算在较长一段时间内，反复多次把某个分支合并到另一分支，也不是什么难事。也就是说，你可以同时拥有多个开放的分 支，每个分支用于完成特定的任务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。<br>许多使用 Git 的开发者都喜欢用这种方式来开展工作，比如仅在 master 分支中保留完全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名 为 develop 或 next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 — 当然并不是说一定要绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到 master 里。这样，在确保这些已完成的特性分支（短期分支）能够通过所有测试，并且不会引入更多错误之后，就可以并到主干分支中，等待下一次的发布。<br>本质上我们刚才谈论的，是随着提交对象不断右移的指针。稳定分支的指针总是在提交历史中落后一大截，而前沿分支总是比较靠前。<br><img src=\"http://ww2.sinaimg.cn/mw690/7dde05d2gw1f4o337i90bj20d402j3yf.jpg\" alt=\"\"></li>\n<li><p>特性分支<br>特性分支从develop分支分出，最终必须合并回develop。<br>特性分支（也叫主题分支）用于开发新特性。每个新特性开一个新分支，最终会合并回develop（当特性开发完毕的时候），或者放弃（如果最终决定不开发这 个特性）。<br>特性分支只存在于开发者的仓库中。<br>在任何规模的项目中都可以使用特性（Topic）分支。一个特性分支是指一个短期的，用来实现单一特性或与其相关工作的分支。可能你在以前的版本控制系统 里从未做过类似这样的事情，因为通常创建与合并分支消耗太大。然而在 Git 中，一天之内建立、使用、合并再删除多个分支是常见的事。<br>我们可以创建特性分支，在提交了若干更新后，把它们合并到主干分支，然后删除。该技术允许你迅速且完全的进行语境切换 — 因为你的工作分散在不同的分 支里，每个分支里的改变都和它的目标特性相关，浏览代码之类的事情因而变得更简单了。你可以把作出的改变保持在特性分支中几分钟，几天甚至几个月，等 它们成熟以后再合并，而不用在乎它们建立的顺序或者进度。<br>现在我们来看一个实际的例子。请看图，由下往上，起先我们在 master 工作到 C1，然后开始一个新分支 iss91 尝试修复 91 号缺陷，提交到 C6 的时候，又冒 出一个解决该问题的新办法，于是从之前 C4 的地方又分出一个分支 iss91v2，干到 C8 的时候，又回到主干 master 中提交了 C9 和 C10，再回到 iss91v2 继续 工作，提交 C11，接着，又冒出个不太确定的想法，从 master 的最新提交 C10 处开了个新的分支 dumbidea 做些试验。<br><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o335f4fcj20bp0c8wen.jpg\" alt=\"\"><br>现在，假定两件事情：我们最终决定使用第二个解决方案，即 iss91v2 中的办法；另外，我们把 dumbidea 分支拿给同事们看了以后，发现它竟然是个天才之 作。所以接下来，我们准备抛弃原来的 iss91 分支（实际上会丢弃 C5 和 C6），直接在主干中并入另外两个分支。最终的提交历史将变成这样：<br><img src=\"http://ww1.sinaimg.cn/mw690/7dde05d2gw1f4o3360pojj209f0dzglq.jpg\" alt=\"\"><br>请务必牢记这些分支全部都是本地分支，这一点很重要。当你在使用分支及合并的时候，一切都是在你自己的Git仓库中进行的—完全不涉及与服务器的交互。</p>\n</li>\n<li><p>提交做小  </p>\n</li>\n<li>git保存用户名、密码<br>1.在Windows中添加一个HOME环境变量，值为%USERPROFILE%，如下图：<br><img src=\"http://ww4.sinaimg.cn/mw690/7dde05d2gw1f4o336oe3gj20as0603yn.jpg\" alt=\"\"><br>2.在“开始&gt;运行”中打开%Home%，新建一个名为“_netrc”的文件。<br>3.用记事本打开_netrc文件，输入Git服务器名、用户名、密码，并保存。示例如下<br><code>machine github.com</code><br><code>login 用户名</code><br><code>password 密码</code></li>\n<li>配置git mergetool和git difftool<br><strong>通过git config命令</strong><br>配置difftool:<br><code>git config --global diff.tool bc</code><br><code>git config --global difftool.bc.cmd &quot;\\&quot;c:/program files/beyond compare 3/bcomp.exe\\&quot; \\&quot;\\$LOCAL\\&quot; \\&quot;\\$REMOTE\\&quot;&quot;</code><br><code>git config --global difftool.prompt false</code><br>配置mergetool:<br><code>git config --global merge.tool bc</code><br><code>git config --global mergetool.bc.cmd &quot;\\&quot;c:/program files/beyond compare 3/bcomp.exe\\&quot; \\&quot;\\$LOCAL\\&quot; \\&quot;\\$REMOTE\\&quot; \\&quot;\\$BASE\\&quot; \\&quot;\\$MERGED\\&quot;&quot;</code><br><code>git config --global mergetool.bc.trustExitCode true</code><br>不生成备份文件<br><code>git config --global mergetool.keepBackup false</code><br><strong>直接修改%USERPROFILE%.gitconfig文件，完整文件如下：</strong><br><code>[user]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>name = 用户名</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>email = 邮箱</code><br><code>[diff]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>tool = bc</code><br><code>[difftool &quot;bc&quot;]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>cmd = \\&quot;C:/bc4/BCompare.exe\\&quot; \\&quot;$LOCAL\\&quot; \\&quot;$REMOTE\\&quot;</code><br><code>[difftool]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>prompt = false</code><br><code>[merge]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>tool = bc</code><br><code>[mergetool &quot;bc&quot;]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>cmd = \\&quot;C:/bc4/BCompare.exe\\&quot; \\&quot;$LOCAL\\&quot; \\&quot;$REMOTE\\&quot; \\&quot;$BASE\\&quot; \\&quot;$MERGED\\&quot;</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>trustExitCode = true</code><br><code>[mergetool]</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>keepBackup = false</code>  </li>\n</ul>\n<h5 id=\"4、其他特性\"><a href=\"#4、其他特性\" class=\"headerlink\" title=\"4、其他特性\"></a>4、其他特性</h5><ul>\n<li>git rebase  </li>\n<li>git stash  </li>\n<li>detached head 分离的头指针  </li>\n<li>git reflog  </li>\n</ul>"},{"title":"Hexo个人博客搭建","date":"2015-04-12T02:39:08.000Z","_content":"\n**前言**\n一直想要一个自己的独立博客，今天偶然发现[Hexo](https://hexo.io/)这个优秀的`静态博客框架`，于是乎，便开始着手搭建个人博客。当然要搭配现在流行的`gitHub`(国内的`coding`也是相当不错的)，简直是完美写博客的黄金搭档（免费+方便），毕竟咱就是体验下而已，并不需要去买域名(当然,`阿里云`有的域名很便宜,我买了个第一年4元的,续费就也就几十块,不需要就用`github`默认域名就OK)！搭建过程也是磕磕碰碰，主要参考如下！供需要的小伙伴借鉴！\n\n> 主要参考如下两个博客:\n>[嘟嘟独立博客](http://tengj.top/2016/02/22/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89hexo+gitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/)\n>[CrazyMilk](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/)\n<!-- more -->\n\n\n[Next](https://github.com/iissnan/hexo-theme-next)主题相关配置: [详见官方文档](http://theme-next.iissnan.com/):http://theme-next.iissnan.com/\n\n`主要的配置项`:\n\n1. `打赏`\n![打赏.png](http://7fv9bd.com1.z0.glb.clouddn.com/%E6%89%93%E8%B5%8F.png?attname=&e=1466582042&token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:8jHYgu4CYgIJHukq6ZVNzCQsHP8)\n2. `文章阅读数`\n3. `代码高亮`↓↓↓\n![code_highlight.png](http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f52wlho0c3j20lw03h0ts.jpg)\n4. `添加多说评论`\n5. `导航图标`↓↓↓\n![Font Awesome.png](http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f52wlgzqvhj20fx01jq2w.jpg)\n6. `评论头像旋转`-->[设置方法](http://prozhuchen.github.io/2015/10/01/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E7%AB%99/)\n7. 添加`Fork me on Github` ribbon[详见](http://www.cnblogs.com/zhcncn/p/4097881.html) ↓↓↓\n![QQ截图20160621153752.png](http://naxiexiaojiyi1.qiniudn.com/QQ截图20160621153752.png?e=1466498312&token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:gQUGqur7xBAj4Yq80nD3KjrKe98=)\n8. `站点访问量`\n[不蒜子](http://service.ibruce.info/) : 只需两行代码就可以完成\n9. `置顶功能`,跟小伙伴[LittleFish](http://littlefisher.coding.me)学习的\n请戳[👉](http://littlefisher.coding.me/2016/07/12/Hexo%E7%BD%AE%E9%A1%B6%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/)\n10. `文本、图片`居中\n  <blockquote class=\"blockquote-center\">参考: http://theme-next.iissnan.com/tag-plugins.html</blockquote>\n\n![](http://theme-next.iissnan.com/uploads/tags/full-image.jpg)\n11. 如何关闭新建页面的评论功能？\n```\ntitle: All tags\ndate: 2015-12-16 17:05:24\ntype: \"tags\"\ncomments: false\n---\n```","source":"_posts/Hexo个人博客搭建.md","raw":"---\ntitle: Hexo个人博客搭建\ndate: 2015-04-12 10:39:08\ntags: [Hexo,个人博客]\ncategories: Hexo\n---\n\n**前言**\n一直想要一个自己的独立博客，今天偶然发现[Hexo](https://hexo.io/)这个优秀的`静态博客框架`，于是乎，便开始着手搭建个人博客。当然要搭配现在流行的`gitHub`(国内的`coding`也是相当不错的)，简直是完美写博客的黄金搭档（免费+方便），毕竟咱就是体验下而已，并不需要去买域名(当然,`阿里云`有的域名很便宜,我买了个第一年4元的,续费就也就几十块,不需要就用`github`默认域名就OK)！搭建过程也是磕磕碰碰，主要参考如下！供需要的小伙伴借鉴！\n\n> 主要参考如下两个博客:\n>[嘟嘟独立博客](http://tengj.top/2016/02/22/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89hexo+gitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/)\n>[CrazyMilk](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/)\n<!-- more -->\n\n\n[Next](https://github.com/iissnan/hexo-theme-next)主题相关配置: [详见官方文档](http://theme-next.iissnan.com/):http://theme-next.iissnan.com/\n\n`主要的配置项`:\n\n1. `打赏`\n![打赏.png](http://7fv9bd.com1.z0.glb.clouddn.com/%E6%89%93%E8%B5%8F.png?attname=&e=1466582042&token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:8jHYgu4CYgIJHukq6ZVNzCQsHP8)\n2. `文章阅读数`\n3. `代码高亮`↓↓↓\n![code_highlight.png](http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f52wlho0c3j20lw03h0ts.jpg)\n4. `添加多说评论`\n5. `导航图标`↓↓↓\n![Font Awesome.png](http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f52wlgzqvhj20fx01jq2w.jpg)\n6. `评论头像旋转`-->[设置方法](http://prozhuchen.github.io/2015/10/01/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E7%AB%99/)\n7. 添加`Fork me on Github` ribbon[详见](http://www.cnblogs.com/zhcncn/p/4097881.html) ↓↓↓\n![QQ截图20160621153752.png](http://naxiexiaojiyi1.qiniudn.com/QQ截图20160621153752.png?e=1466498312&token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:gQUGqur7xBAj4Yq80nD3KjrKe98=)\n8. `站点访问量`\n[不蒜子](http://service.ibruce.info/) : 只需两行代码就可以完成\n9. `置顶功能`,跟小伙伴[LittleFish](http://littlefisher.coding.me)学习的\n请戳[👉](http://littlefisher.coding.me/2016/07/12/Hexo%E7%BD%AE%E9%A1%B6%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/)\n10. `文本、图片`居中\n  <blockquote class=\"blockquote-center\">参考: http://theme-next.iissnan.com/tag-plugins.html</blockquote>\n\n![](http://theme-next.iissnan.com/uploads/tags/full-image.jpg)\n11. 如何关闭新建页面的评论功能？\n```\ntitle: All tags\ndate: 2015-12-16 17:05:24\ntype: \"tags\"\ncomments: false\n---\n```","slug":"Hexo个人博客搭建","published":1,"updated":"2016-09-21T02:57:40.769Z","_id":"citbcwfyn0016gwagbn86dvbz","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>前言</strong><br>一直想要一个自己的独立博客，今天偶然发现<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>这个优秀的<code>静态博客框架</code>，于是乎，便开始着手搭建个人博客。当然要搭配现在流行的<code>gitHub</code>(国内的<code>coding</code>也是相当不错的)，简直是完美写博客的黄金搭档（免费+方便），毕竟咱就是体验下而已，并不需要去买域名(当然,<code>阿里云</code>有的域名很便宜,我买了个第一年4元的,续费就也就几十块,不需要就用<code>github</code>默认域名就OK)！搭建过程也是磕磕碰碰，主要参考如下！供需要的小伙伴借鉴！</p>\n<blockquote>\n<p>主要参考如下两个博客:<br><a href=\"http://tengj.top/2016/02/22/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89hexo+gitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/\" target=\"_blank\" rel=\"external\">嘟嘟独立博客</a><br><a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/\" target=\"_blank\" rel=\"external\">CrazyMilk</a><br><a id=\"more\"></a></p>\n</blockquote>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">Next</a>主题相关配置: <a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">详见官方文档</a>:<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/</a></p>\n<p><code>主要的配置项</code>:</p>\n<ol>\n<li><code>打赏</code><br><img src=\"http://7fv9bd.com1.z0.glb.clouddn.com/%E6%89%93%E8%B5%8F.png?attname=&amp;e=1466582042&amp;token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:8jHYgu4CYgIJHukq6ZVNzCQsHP8\" alt=\"打赏.png\"></li>\n<li><code>文章阅读数</code></li>\n<li><code>代码高亮</code>↓↓↓<br><img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f52wlho0c3j20lw03h0ts.jpg\" alt=\"code_highlight.png\"></li>\n<li><code>添加多说评论</code></li>\n<li><code>导航图标</code>↓↓↓<br><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f52wlgzqvhj20fx01jq2w.jpg\" alt=\"Font Awesome.png\"></li>\n<li><code>评论头像旋转</code>–&gt;<a href=\"http://prozhuchen.github.io/2015/10/01/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E7%AB%99/\" target=\"_blank\" rel=\"external\">设置方法</a></li>\n<li>添加<code>Fork me on Github</code> ribbon<a href=\"http://www.cnblogs.com/zhcncn/p/4097881.html\" target=\"_blank\" rel=\"external\">详见</a> ↓↓↓<br><img src=\"http://naxiexiaojiyi1.qiniudn.com/QQ截图20160621153752.png?e=1466498312&amp;token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:gQUGqur7xBAj4Yq80nD3KjrKe98=\" alt=\"QQ截图20160621153752.png\"></li>\n<li><code>站点访问量</code><br><a href=\"http://service.ibruce.info/\" target=\"_blank\" rel=\"external\">不蒜子</a> : 只需两行代码就可以完成</li>\n<li><code>置顶功能</code>,跟小伙伴<a href=\"http://littlefisher.coding.me\" target=\"_blank\" rel=\"external\">LittleFish</a>学习的<br>请戳<a href=\"http://littlefisher.coding.me/2016/07/12/Hexo%E7%BD%AE%E9%A1%B6%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/\" target=\"_blank\" rel=\"external\">👉</a></li>\n<li><code>文本、图片</code>居中<blockquote class=\"blockquote-center\">参考: <a href=\"http://theme-next.iissnan.com/tag-plugins.html\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/tag-plugins.html</a></blockquote>\n\n</li>\n</ol>\n<p><img src=\"http://theme-next.iissnan.com/uploads/tags/full-image.jpg\" alt=\"\"></p>\n<ol>\n<li>如何关闭新建页面的评论功能？<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> All tags</span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2015</span><span class=\"bullet\">-12</span><span class=\"bullet\">-16</span> <span class=\"number\">17</span>:<span class=\"number\">05</span>:<span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">\"tags\"</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"<p><strong>前言</strong><br>一直想要一个自己的独立博客，今天偶然发现<a href=\"https://hexo.io/\">Hexo</a>这个优秀的<code>静态博客框架</code>，于是乎，便开始着手搭建个人博客。当然要搭配现在流行的<code>gitHub</code>(国内的<code>coding</code>也是相当不错的)，简直是完美写博客的黄金搭档（免费+方便），毕竟咱就是体验下而已，并不需要去买域名(当然,<code>阿里云</code>有的域名很便宜,我买了个第一年4元的,续费就也就几十块,不需要就用<code>github</code>默认域名就OK)！搭建过程也是磕磕碰碰，主要参考如下！供需要的小伙伴借鉴！</p>\n<blockquote>\n<p>主要参考如下两个博客:<br><a href=\"http://tengj.top/2016/02/22/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89hexo+gitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/\">嘟嘟独立博客</a><br><a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/\">CrazyMilk</a><br>","more":"</p>\n</blockquote>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\">Next</a>主题相关配置: <a href=\"http://theme-next.iissnan.com/\">详见官方文档</a>:<a href=\"http://theme-next.iissnan.com/\">http://theme-next.iissnan.com/</a></p>\n<p><code>主要的配置项</code>:</p>\n<ol>\n<li><code>打赏</code><br><img src=\"http://7fv9bd.com1.z0.glb.clouddn.com/%E6%89%93%E8%B5%8F.png?attname=&amp;e=1466582042&amp;token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:8jHYgu4CYgIJHukq6ZVNzCQsHP8\" alt=\"打赏.png\"></li>\n<li><code>文章阅读数</code></li>\n<li><code>代码高亮</code>↓↓↓<br><img src=\"http://ww3.sinaimg.cn/mw1024/c05ae6b6gw1f52wlho0c3j20lw03h0ts.jpg\" alt=\"code_highlight.png\"></li>\n<li><code>添加多说评论</code></li>\n<li><code>导航图标</code>↓↓↓<br><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f52wlgzqvhj20fx01jq2w.jpg\" alt=\"Font Awesome.png\"></li>\n<li><code>评论头像旋转</code>–&gt;<a href=\"http://prozhuchen.github.io/2015/10/01/Hexo%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E7%AB%99/\">设置方法</a></li>\n<li>添加<code>Fork me on Github</code> ribbon<a href=\"http://www.cnblogs.com/zhcncn/p/4097881.html\">详见</a> ↓↓↓<br><img src=\"http://naxiexiaojiyi1.qiniudn.com/QQ截图20160621153752.png?e=1466498312&amp;token=1JBeQi3vz7kUmQlsAf00FRntxudo01dbWsLMQT30:gQUGqur7xBAj4Yq80nD3KjrKe98=\" alt=\"QQ截图20160621153752.png\"></li>\n<li><code>站点访问量</code><br><a href=\"http://service.ibruce.info/\">不蒜子</a> : 只需两行代码就可以完成</li>\n<li><code>置顶功能</code>,跟小伙伴<a href=\"http://littlefisher.coding.me\">LittleFish</a>学习的<br>请戳<a href=\"http://littlefisher.coding.me/2016/07/12/Hexo%E7%BD%AE%E9%A1%B6%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/\">👉</a></li>\n<li><code>文本、图片</code>居中<blockquote class=\"blockquote-center\">参考: <a href=\"http://theme-next.iissnan.com/tag-plugins.html\">http://theme-next.iissnan.com/tag-plugins.html</a></blockquote>\n\n</li>\n</ol>\n<p><img src=\"http://theme-next.iissnan.com/uploads/tags/full-image.jpg\" alt=\"\"></p>\n<ol>\n<li>如何关闭新建页面的评论功能？<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> All tags</span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2015</span><span class=\"bullet\">-12</span><span class=\"bullet\">-16</span> <span class=\"number\">17</span>:<span class=\"number\">05</span>:<span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">\"tags\"</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"MumuXi安卓版开发","date":"2015-05-23T03:37:37.000Z","_content":"\n`这也是自己第一个算是正式的练手App项目`\n\n`目的:` 督促自己不断积累知识经验。\n下面进入正文\n\n# 准备工作\n* Android Studio\n* [Gank Api](http://gank.io/) ([gank.io/api](http://gank.io/api) 由 [代码家](https://github.com/daimajia)维护的开源Api)\n* N多依赖jar包\n* 学习[CaMnter/EasyGank](https://github.com/CaMnter/EasyGank)完成的项目\n\n# 开发准备\n* 框架搭建\n* 界面原型设计\n* 主要功能\n<!-- more -->\n# 完成功能:\n- 知乎专栏-作者文章-文章detail\n- 妹子福利\n- about_me-换头像\n- about_app-app开发目的,以及使用的框架\n- for_what-是目标功能(有的还没实现)\n- 所有的[loading动画](https://github.com/zzz40500/android-shapeLoadingView)用的是开源框架- 布局放在了EasyRecyclerView的 [layout_empty](https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/res/layout/fragment_zhuanlan_layout.xml) ,layout_progress,error中,具体根据实际来放\n- 上拉,下拉刷新用的开源框架[EasyRecyclerView](https://github.com/Jude95/EasyRecyclerView)\n-侧滑Drawer功能还没加,后面考虑加些其他功能~~~\n\n>项目详细 注解 以及功能在[github](https://github.com/yangxiaoge/MumuXi)提交的[message](https://github.com/yangxiaoge/MumuXi)和代码注解中\n\n>经过一个星期的折腾,终于完成了第一个版本,并且试着上架了应用商城! O(∩_∩)O~~\n\n## 下载\n<a href=\"http://fir.im/sq2t\" target=\"_blank\" alt=\"Fir\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f802wvh1s2j203301cq2q.jpg\"/></a>\n\n<a href=\"http://android.myapp.com/myapp/detail.htm?apkName=com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"应用宝\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f5pv5t3kwwj203w01jglf.jpg\"/></a>\n\n<a href=\"http://www.wandoujia.com/apps/com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"豌豆荚\"><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f5iyz0qbdgj204k01mglg.jpg\"/></a>\n\n\n**add google analytics谷歌分析** ( 2016-9-5 11:58:26 )\n\n1. `google-services.json`[文件下载](https://developers.google.com/mobile/add?platform=android&cntapi=analytics&cnturl=https:%2F%2Fdevelopers.google.com%2Fanalytics%2Fdevguides%2Fcollection%2Fandroid%2Fv4%2Fapp%3Fconfigured%3Dtrue&cntlbl=Continue%20Adding%20Analytics)\n2. 官方集成文档: https://developers.google.com/analytics/devguides/collection/android/v4/app?configured=true\n3. 分析用户使用情况的平台: https://analytics.google.com/analytics/web/#realtime/rt-app-overview/a83624565w124744507p129062318/\n4. ![google 分析](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f7iknnth8nj217y0lx43d.jpg)","source":"_posts/MumuXi安卓版开发.md","raw":"---\ntitle: MumuXi安卓版开发\ndate: 2015-05-23 11:37:37\ntags: [Android,Gank]\ncategories: APP开发记\n---\n\n`这也是自己第一个算是正式的练手App项目`\n\n`目的:` 督促自己不断积累知识经验。\n下面进入正文\n\n# 准备工作\n* Android Studio\n* [Gank Api](http://gank.io/) ([gank.io/api](http://gank.io/api) 由 [代码家](https://github.com/daimajia)维护的开源Api)\n* N多依赖jar包\n* 学习[CaMnter/EasyGank](https://github.com/CaMnter/EasyGank)完成的项目\n\n# 开发准备\n* 框架搭建\n* 界面原型设计\n* 主要功能\n<!-- more -->\n# 完成功能:\n- 知乎专栏-作者文章-文章detail\n- 妹子福利\n- about_me-换头像\n- about_app-app开发目的,以及使用的框架\n- for_what-是目标功能(有的还没实现)\n- 所有的[loading动画](https://github.com/zzz40500/android-shapeLoadingView)用的是开源框架- 布局放在了EasyRecyclerView的 [layout_empty](https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/res/layout/fragment_zhuanlan_layout.xml) ,layout_progress,error中,具体根据实际来放\n- 上拉,下拉刷新用的开源框架[EasyRecyclerView](https://github.com/Jude95/EasyRecyclerView)\n-侧滑Drawer功能还没加,后面考虑加些其他功能~~~\n\n>项目详细 注解 以及功能在[github](https://github.com/yangxiaoge/MumuXi)提交的[message](https://github.com/yangxiaoge/MumuXi)和代码注解中\n\n>经过一个星期的折腾,终于完成了第一个版本,并且试着上架了应用商城! O(∩_∩)O~~\n\n## 下载\n<a href=\"http://fir.im/sq2t\" target=\"_blank\" alt=\"Fir\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f802wvh1s2j203301cq2q.jpg\"/></a>\n\n<a href=\"http://android.myapp.com/myapp/detail.htm?apkName=com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"应用宝\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f5pv5t3kwwj203w01jglf.jpg\"/></a>\n\n<a href=\"http://www.wandoujia.com/apps/com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"豌豆荚\"><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f5iyz0qbdgj204k01mglg.jpg\"/></a>\n\n\n**add google analytics谷歌分析** ( 2016-9-5 11:58:26 )\n\n1. `google-services.json`[文件下载](https://developers.google.com/mobile/add?platform=android&cntapi=analytics&cnturl=https:%2F%2Fdevelopers.google.com%2Fanalytics%2Fdevguides%2Fcollection%2Fandroid%2Fv4%2Fapp%3Fconfigured%3Dtrue&cntlbl=Continue%20Adding%20Analytics)\n2. 官方集成文档: https://developers.google.com/analytics/devguides/collection/android/v4/app?configured=true\n3. 分析用户使用情况的平台: https://analytics.google.com/analytics/web/#realtime/rt-app-overview/a83624565w124744507p129062318/\n4. ![google 分析](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f7iknnth8nj217y0lx43d.jpg)","slug":"MumuXi安卓版开发","published":1,"updated":"2016-09-20T07:30:26.327Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfyq0018gwagbf2m2d55","content":"<p><code>这也是自己第一个算是正式的练手App项目</code></p>\n<p><code>目的:</code> 督促自己不断积累知识经验。<br>下面进入正文</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><ul>\n<li>Android Studio</li>\n<li><a href=\"http://gank.io/\" target=\"_blank\" rel=\"external\">Gank Api</a> (<a href=\"http://gank.io/api\" target=\"_blank\" rel=\"external\">gank.io/api</a> 由 <a href=\"https://github.com/daimajia\" target=\"_blank\" rel=\"external\">代码家</a>维护的开源Api)</li>\n<li>N多依赖jar包</li>\n<li>学习<a href=\"https://github.com/CaMnter/EasyGank\" target=\"_blank\" rel=\"external\">CaMnter/EasyGank</a>完成的项目</li>\n</ul>\n<h1 id=\"开发准备\"><a href=\"#开发准备\" class=\"headerlink\" title=\"开发准备\"></a>开发准备</h1><ul>\n<li>框架搭建</li>\n<li>界面原型设计</li>\n<li>主要功能<a id=\"more\"></a>\n<h1 id=\"完成功能\"><a href=\"#完成功能\" class=\"headerlink\" title=\"完成功能:\"></a>完成功能:</h1></li>\n</ul>\n<ul>\n<li>知乎专栏-作者文章-文章detail</li>\n<li>妹子福利</li>\n<li>about_me-换头像</li>\n<li>about_app-app开发目的,以及使用的框架</li>\n<li>for_what-是目标功能(有的还没实现)</li>\n<li>所有的<a href=\"https://github.com/zzz40500/android-shapeLoadingView\" target=\"_blank\" rel=\"external\">loading动画</a>用的是开源框架- 布局放在了EasyRecyclerView的 <a href=\"https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/res/layout/fragment_zhuanlan_layout.xml\" target=\"_blank\" rel=\"external\">layout_empty</a> ,layout_progress,error中,具体根据实际来放</li>\n<li>上拉,下拉刷新用的开源框架<a href=\"https://github.com/Jude95/EasyRecyclerView\" target=\"_blank\" rel=\"external\">EasyRecyclerView</a><br>-侧滑Drawer功能还没加,后面考虑加些其他功能~~~</li>\n</ul>\n<blockquote>\n<p>项目详细 注解 以及功能在<a href=\"https://github.com/yangxiaoge/MumuXi\" target=\"_blank\" rel=\"external\">github</a>提交的<a href=\"https://github.com/yangxiaoge/MumuXi\" target=\"_blank\" rel=\"external\">message</a>和代码注解中</p>\n<p>经过一个星期的折腾,终于完成了第一个版本,并且试着上架了应用商城! O(∩_∩)O~~</p>\n</blockquote>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://fir.im/sq2t\" target=\"_blank\" alt=\"Fir\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f802wvh1s2j203301cq2q.jpg\"></a></p>\n<p><a href=\"http://android.myapp.com/myapp/detail.htm?apkName=com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"应用宝\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f5pv5t3kwwj203w01jglf.jpg\"></a></p>\n<p><a href=\"http://www.wandoujia.com/apps/com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"豌豆荚\"><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f5iyz0qbdgj204k01mglg.jpg\"></a></p>\n<p><strong>add google analytics谷歌分析</strong> ( 2016-9-5 11:58:26 )</p>\n<ol>\n<li><code>google-services.json</code><a href=\"https://developers.google.com/mobile/add?platform=android&amp;cntapi=analytics&amp;cnturl=https:%2F%2Fdevelopers.google.com%2Fanalytics%2Fdevguides%2Fcollection%2Fandroid%2Fv4%2Fapp%3Fconfigured%3Dtrue&amp;cntlbl=Continue%20Adding%20Analytics\" target=\"_blank\" rel=\"external\">文件下载</a></li>\n<li>官方集成文档: <a href=\"https://developers.google.com/analytics/devguides/collection/android/v4/app?configured=true\" target=\"_blank\" rel=\"external\">https://developers.google.com/analytics/devguides/collection/android/v4/app?configured=true</a></li>\n<li>分析用户使用情况的平台: <a href=\"https://analytics.google.com/analytics/web/#realtime/rt-app-overview/a83624565w124744507p129062318/\" target=\"_blank\" rel=\"external\">https://analytics.google.com/analytics/web/#realtime/rt-app-overview/a83624565w124744507p129062318/</a></li>\n<li><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f7iknnth8nj217y0lx43d.jpg\" alt=\"google 分析\"></li>\n</ol>\n","excerpt":"<p><code>这也是自己第一个算是正式的练手App项目</code></p>\n<p><code>目的:</code> 督促自己不断积累知识经验。<br>下面进入正文</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><ul>\n<li>Android Studio</li>\n<li><a href=\"http://gank.io/\">Gank Api</a> (<a href=\"http://gank.io/api\">gank.io/api</a> 由 <a href=\"https://github.com/daimajia\">代码家</a>维护的开源Api)</li>\n<li>N多依赖jar包</li>\n<li>学习<a href=\"https://github.com/CaMnter/EasyGank\">CaMnter/EasyGank</a>完成的项目</li>\n</ul>\n<h1 id=\"开发准备\"><a href=\"#开发准备\" class=\"headerlink\" title=\"开发准备\"></a>开发准备</h1><ul>\n<li>框架搭建</li>\n<li>界面原型设计</li>\n<li>主要功能","more":"<h1 id=\"完成功能\"><a href=\"#完成功能\" class=\"headerlink\" title=\"完成功能:\"></a>完成功能:</h1></li>\n</ul>\n<ul>\n<li>知乎专栏-作者文章-文章detail</li>\n<li>妹子福利</li>\n<li>about_me-换头像</li>\n<li>about_app-app开发目的,以及使用的框架</li>\n<li>for_what-是目标功能(有的还没实现)</li>\n<li>所有的<a href=\"https://github.com/zzz40500/android-shapeLoadingView\">loading动画</a>用的是开源框架- 布局放在了EasyRecyclerView的 <a href=\"https://github.com/yangxiaoge/MumuXi/blob/master/app/src/main/res/layout/fragment_zhuanlan_layout.xml\">layout_empty</a> ,layout_progress,error中,具体根据实际来放</li>\n<li>上拉,下拉刷新用的开源框架<a href=\"https://github.com/Jude95/EasyRecyclerView\">EasyRecyclerView</a><br>-侧滑Drawer功能还没加,后面考虑加些其他功能~~~</li>\n</ul>\n<blockquote>\n<p>项目详细 注解 以及功能在<a href=\"https://github.com/yangxiaoge/MumuXi\">github</a>提交的<a href=\"https://github.com/yangxiaoge/MumuXi\">message</a>和代码注解中</p>\n<p>经过一个星期的折腾,终于完成了第一个版本,并且试着上架了应用商城! O(∩_∩)O~~</p>\n</blockquote>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://fir.im/sq2t\" target=\"_blank\" alt=\"Fir\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f802wvh1s2j203301cq2q.jpg\"/></a></p>\n<p><a href=\"http://android.myapp.com/myapp/detail.htm?apkName=com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"应用宝\"><img src=\"http://ww4.sinaimg.cn/mw1024/c05ae6b6gw1f5pv5t3kwwj203w01jglf.jpg\"/></a></p>\n<p><a href=\"http://www.wandoujia.com/apps/com.yang.bruce.mumuxi\" target=\"_blank\" alt=\"豌豆荚\"><img src=\"http://ww1.sinaimg.cn/mw690/c05ae6b6gw1f5iyz0qbdgj204k01mglg.jpg\"/></a></p>\n<p><strong>add google analytics谷歌分析</strong> ( 2016-9-5 11:58:26 )</p>\n<ol>\n<li><code>google-services.json</code><a href=\"https://developers.google.com/mobile/add?platform=android&amp;cntapi=analytics&amp;cnturl=https:%2F%2Fdevelopers.google.com%2Fanalytics%2Fdevguides%2Fcollection%2Fandroid%2Fv4%2Fapp%3Fconfigured%3Dtrue&amp;cntlbl=Continue%20Adding%20Analytics\">文件下载</a></li>\n<li>官方集成文档: <a href=\"https://developers.google.com/analytics/devguides/collection/android/v4/app?configured=true\">https://developers.google.com/analytics/devguides/collection/android/v4/app?configured=true</a></li>\n<li>分析用户使用情况的平台: <a href=\"https://analytics.google.com/analytics/web/#realtime/rt-app-overview/a83624565w124744507p129062318/\">https://analytics.google.com/analytics/web/#realtime/rt-app-overview/a83624565w124744507p129062318/</a></li>\n<li><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f7iknnth8nj217y0lx43d.jpg\" alt=\"google 分析\"></li>\n</ol>"},{"title":"bughd让bug无处遁形","date":"2016-08-17T01:21:05.000Z","_content":"\n[BugHD](http://bughd.com/product/android) 帮助 `Android开发`, 崩溃分析 & 检测更新& 开放 API。\n\n*如何在app中配置？* [*详见官方文档*](http://bughd.com/doc/android)\n>[MumuXi](https://github.com/yangxiaoge/MumuXi)app中已经配置好了,可以供参考\n\n集成到app中分为如下几步:\n\n## General Key\n    General Key 用来唯一标识您的应用，为防止别人滥用，请勿泄露，建立每个项目时将自动生成项目对应的 General Key，可在项目列表页查看每个项目对应的 General Key值\n\n## 导入SDK -->其一方法: 通过 `Gradle` 自动构建\n    \n\n    在项目的 build.gradle（Top-level build file，项目最外层的 build.gradle 文件）中添加这个 maven repositories，例如：\n<!-- more -->    \n```\nbuildscript {\n\n  repositories {\n    jcenter()\n  }\n\n  dependencies {\n    classpath 'com.android.tools.build:gradle:1.0.0'\n  }\n}\n\nallprojects {\n  repositories {\n    jcenter()\n\n    maven {\n      url \"http://maven.bughd.com/public\"\n    }\n  }\n}\n```\n\n    在要集成的项目中的 build.gradle 中添加依赖，如下：\n\n    \n```\ndependencies {\n  compile 'im.fir:fir-sdk:latest.integration@aar'\n}\n```\n\n## 配置\n\n```\n<manifest……>\n  <!-- 必选 -->\n  <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"></uses-permission>\n  <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n  <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"></uses-permission>\n\n  <!-- 可选 -->\n  <uses-permission android:name=\"android.permission.GET_TASKS\"></uses-permission>\n\n  <application ……>\n    <activity ……/>\n    <meta-data android:value=\"你的GENERAL_KEY\" android:name=\"BUG_HD_SDK_GENERAL_KEY\" />\n  </application>\n</manifest>\n```\n\n## 调用SDK\n    \n    继承 Application，并在 onCreate() 方法中的第一行加入 FIR.init(this) \n```\npublic class MyApplication extends Application {\n\n    @Override\n    public void onCreate() {\n\n        super.onCreate();\n        FIR.init(this);\n    }\n}\n```\n    修改 AndroidManifest.xml，在其中加入 android:name=\"xxxx\"，使用继承过的的 application 类,例如\n```\n<application\n    android:name=\".MyApplication\"\n    android:allowBackup=\"true\"\n    android:icon=\"@drawable/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@style/AppTheme\" >\n    ....\n</application>\n```\n\n**如上配置归纳,就是3步**\n![如上配置归纳,就是3步](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6whn2lru1j20sy0blabf.jpg)\n**最后看下分析界面**\n![bughd应用崩溃分析界面](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6wgxou5muj211n0ktwie.jpg)\n","source":"_posts/bughd让bug无处遁形.md","raw":"---\ntitle: bughd让bug无处遁形\ndate: 2016-08-17 09:21:05\ntags: Android\ncategories: BugHD\n---\n\n[BugHD](http://bughd.com/product/android) 帮助 `Android开发`, 崩溃分析 & 检测更新& 开放 API。\n\n*如何在app中配置？* [*详见官方文档*](http://bughd.com/doc/android)\n>[MumuXi](https://github.com/yangxiaoge/MumuXi)app中已经配置好了,可以供参考\n\n集成到app中分为如下几步:\n\n## General Key\n    General Key 用来唯一标识您的应用，为防止别人滥用，请勿泄露，建立每个项目时将自动生成项目对应的 General Key，可在项目列表页查看每个项目对应的 General Key值\n\n## 导入SDK -->其一方法: 通过 `Gradle` 自动构建\n    \n\n    在项目的 build.gradle（Top-level build file，项目最外层的 build.gradle 文件）中添加这个 maven repositories，例如：\n<!-- more -->    \n```\nbuildscript {\n\n  repositories {\n    jcenter()\n  }\n\n  dependencies {\n    classpath 'com.android.tools.build:gradle:1.0.0'\n  }\n}\n\nallprojects {\n  repositories {\n    jcenter()\n\n    maven {\n      url \"http://maven.bughd.com/public\"\n    }\n  }\n}\n```\n\n    在要集成的项目中的 build.gradle 中添加依赖，如下：\n\n    \n```\ndependencies {\n  compile 'im.fir:fir-sdk:latest.integration@aar'\n}\n```\n\n## 配置\n\n```\n<manifest……>\n  <!-- 必选 -->\n  <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"></uses-permission>\n  <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n  <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"></uses-permission>\n\n  <!-- 可选 -->\n  <uses-permission android:name=\"android.permission.GET_TASKS\"></uses-permission>\n\n  <application ……>\n    <activity ……/>\n    <meta-data android:value=\"你的GENERAL_KEY\" android:name=\"BUG_HD_SDK_GENERAL_KEY\" />\n  </application>\n</manifest>\n```\n\n## 调用SDK\n    \n    继承 Application，并在 onCreate() 方法中的第一行加入 FIR.init(this) \n```\npublic class MyApplication extends Application {\n\n    @Override\n    public void onCreate() {\n\n        super.onCreate();\n        FIR.init(this);\n    }\n}\n```\n    修改 AndroidManifest.xml，在其中加入 android:name=\"xxxx\"，使用继承过的的 application 类,例如\n```\n<application\n    android:name=\".MyApplication\"\n    android:allowBackup=\"true\"\n    android:icon=\"@drawable/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@style/AppTheme\" >\n    ....\n</application>\n```\n\n**如上配置归纳,就是3步**\n![如上配置归纳,就是3步](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6whn2lru1j20sy0blabf.jpg)\n**最后看下分析界面**\n![bughd应用崩溃分析界面](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6wgxou5muj211n0ktwie.jpg)\n","slug":"bughd让bug无处遁形","published":1,"updated":"2016-09-10T02:36:03.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfyw001cgwagv0bqgbv2","content":"<p><a href=\"http://bughd.com/product/android\" target=\"_blank\" rel=\"external\">BugHD</a> 帮助 <code>Android开发</code>, 崩溃分析 &amp; 检测更新&amp; 开放 API。</p>\n<p><em>如何在app中配置？</em> <a href=\"http://bughd.com/doc/android\" target=\"_blank\" rel=\"external\"><em>详见官方文档</em></a></p>\n<blockquote>\n<p><a href=\"https://github.com/yangxiaoge/MumuXi\" target=\"_blank\" rel=\"external\">MumuXi</a>app中已经配置好了,可以供参考</p>\n</blockquote>\n<p>集成到app中分为如下几步:</p>\n<h2 id=\"General-Key\"><a href=\"#General-Key\" class=\"headerlink\" title=\"General Key\"></a>General Key</h2><pre><code>General Key 用来唯一标识您的应用，为防止别人滥用，请勿泄露，建立每个项目时将自动生成项目对应的 General Key，可在项目列表页查看每个项目对应的 General Key值\n</code></pre><h2 id=\"导入SDK-–-gt-其一方法-通过-Gradle-自动构建\"><a href=\"#导入SDK-–-gt-其一方法-通过-Gradle-自动构建\" class=\"headerlink\" title=\"导入SDK –&gt;其一方法: 通过 Gradle 自动构建\"></a>导入SDK –&gt;其一方法: 通过 <code>Gradle</code> 自动构建</h2><pre><code>在项目的 build.gradle（Top-level build file，项目最外层的 build.gradle 文件）中添加这个 maven repositories，例如：\n</code></pre><a id=\"more\"></a>    \n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    jcenter()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">classpath</span> <span class=\"string\">'com.android.tools.build:gradle:1.0.0'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    jcenter()</span><br><span class=\"line\"></span><br><span class=\"line\">    maven &#123;</span><br><span class=\"line\">      url <span class=\"string\">\"http://maven.bughd.com/public\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>在要集成的项目中的 build.gradle 中添加依赖，如下：\n</code></pre><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">compile</span> <span class=\"string\">'im.fir:fir-sdk:latest.integration<span class=\"variable\">@aar</span>'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">manifest……</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 必选 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.ACCESS_NETWORK_STATE\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.ACCESS_WIFI_STATE\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.READ_PHONE_STATE\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 可选 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.GET_TASKS\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">application</span> ……&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">activity</span> ……/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta-data</span> <span class=\"attr\">android:value</span>=<span class=\"string\">\"你的GENERAL_KEY\"</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"BUG_HD_SDK_GENERAL_KEY\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">application</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"调用SDK\"><a href=\"#调用SDK\" class=\"headerlink\" title=\"调用SDK\"></a>调用SDK</h2><pre><code>继承 Application，并在 onCreate() 方法中的第一行加入 FIR.init(this) \n</code></pre><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    public void onCreate() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        <span class=\"type\">FIR</span>.init(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>修改 AndroidManifest.xml，在其中加入 android:name=&quot;xxxx&quot;，使用继承过的的 application 类,例如\n</code></pre><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"built_in\">application</span></span><br><span class=\"line\">    android:<span class=\"built_in\">name</span>=<span class=\"string\">\".MyApplication\"</span></span><br><span class=\"line\">    android:allowBackup=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">    android:icon=<span class=\"string\">\"@drawable/ic_launcher\"</span></span><br><span class=\"line\">    android:label=<span class=\"string\">\"@string/app_name\"</span></span><br><span class=\"line\">    android:theme=<span class=\"string\">\"@style/AppTheme\"</span> &gt;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&lt;/<span class=\"built_in\">application</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>如上配置归纳,就是3步</strong><br><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6whn2lru1j20sy0blabf.jpg\" alt=\"如上配置归纳,就是3步\"><br><strong>最后看下分析界面</strong><br><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6wgxou5muj211n0ktwie.jpg\" alt=\"bughd应用崩溃分析界面\"></p>\n","excerpt":"<p><a href=\"http://bughd.com/product/android\">BugHD</a> 帮助 <code>Android开发</code>, 崩溃分析 &amp; 检测更新&amp; 开放 API。</p>\n<p><em>如何在app中配置？</em> <a href=\"http://bughd.com/doc/android\"><em>详见官方文档</em></a></p>\n<blockquote>\n<p><a href=\"https://github.com/yangxiaoge/MumuXi\">MumuXi</a>app中已经配置好了,可以供参考</p>\n</blockquote>\n<p>集成到app中分为如下几步:</p>\n<h2 id=\"General-Key\"><a href=\"#General-Key\" class=\"headerlink\" title=\"General Key\"></a>General Key</h2><pre><code>General Key 用来唯一标识您的应用，为防止别人滥用，请勿泄露，建立每个项目时将自动生成项目对应的 General Key，可在项目列表页查看每个项目对应的 General Key值\n</code></pre><h2 id=\"导入SDK-–-gt-其一方法-通过-Gradle-自动构建\"><a href=\"#导入SDK-–-gt-其一方法-通过-Gradle-自动构建\" class=\"headerlink\" title=\"导入SDK –&gt;其一方法: 通过 Gradle 自动构建\"></a>导入SDK –&gt;其一方法: 通过 <code>Gradle</code> 自动构建</h2><pre><code>在项目的 build.gradle（Top-level build file，项目最外层的 build.gradle 文件）中添加这个 maven repositories，例如：\n</code></pre>","more":"<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    jcenter()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">classpath</span> <span class=\"string\">'com.android.tools.build:gradle:1.0.0'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    jcenter()</span><br><span class=\"line\"></span><br><span class=\"line\">    maven &#123;</span><br><span class=\"line\">      url <span class=\"string\">\"http://maven.bughd.com/public\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>在要集成的项目中的 build.gradle 中添加依赖，如下：\n</code></pre><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">compile</span> <span class=\"string\">'im.fir:fir-sdk:latest.integration<span class=\"variable\">@aar</span>'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">manifest……</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 必选 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.ACCESS_NETWORK_STATE\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.ACCESS_WIFI_STATE\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.READ_PHONE_STATE\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 可选 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.GET_TASKS\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">application</span> ……&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">activity</span> ……/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta-data</span> <span class=\"attr\">android:value</span>=<span class=\"string\">\"你的GENERAL_KEY\"</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"BUG_HD_SDK_GENERAL_KEY\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">application</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"调用SDK\"><a href=\"#调用SDK\" class=\"headerlink\" title=\"调用SDK\"></a>调用SDK</h2><pre><code>继承 Application，并在 onCreate() 方法中的第一行加入 FIR.init(this) \n</code></pre><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    public void onCreate() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        <span class=\"type\">FIR</span>.init(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>修改 AndroidManifest.xml，在其中加入 android:name=&quot;xxxx&quot;，使用继承过的的 application 类,例如\n</code></pre><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"built_in\">application</span></span><br><span class=\"line\">    android:<span class=\"built_in\">name</span>=<span class=\"string\">\".MyApplication\"</span></span><br><span class=\"line\">    android:allowBackup=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">    android:icon=<span class=\"string\">\"@drawable/ic_launcher\"</span></span><br><span class=\"line\">    android:label=<span class=\"string\">\"@string/app_name\"</span></span><br><span class=\"line\">    android:theme=<span class=\"string\">\"@style/AppTheme\"</span> &gt;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&lt;/<span class=\"built_in\">application</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>如上配置归纳,就是3步</strong><br><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6whn2lru1j20sy0blabf.jpg\" alt=\"如上配置归纳,就是3步\"><br><strong>最后看下分析界面</strong><br><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6wgxou5muj211n0ktwie.jpg\" alt=\"bughd应用崩溃分析界面\"></p>"},{"title":"daocloud持续集成个人博客","date":"2016-09-20T05:46:54.000Z","top":13,"_content":">直接看我基友的文章:[Hexo + DaoCloud 持续集成](http://littlefisher.coding.me/2016/09/20/Hexo%20+%20DaoCloud%20%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/)","source":"_posts/daocloud持续集成个人博客.md","raw":"---\ntitle: daocloud持续集成个人博客\ndate: 2016-09-20 13:46:54\ntags: daocloud\ncategories: 持续集成\ntop: 13\n---\n>直接看我基友的文章:[Hexo + DaoCloud 持续集成](http://littlefisher.coding.me/2016/09/20/Hexo%20+%20DaoCloud%20%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/)","slug":"daocloud持续集成个人博客","published":1,"updated":"2016-09-20T06:10:12.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfyy001egwag51fjxg7i","content":"<blockquote>\n<p>直接看我基友的文章:<a href=\"http://littlefisher.coding.me/2016/09/20/Hexo%20+%20DaoCloud%20%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/\" target=\"_blank\" rel=\"external\">Hexo + DaoCloud 持续集成</a></p>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>直接看我基友的文章:<a href=\"http://littlefisher.coding.me/2016/09/20/Hexo%20+%20DaoCloud%20%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/\">Hexo + DaoCloud 持续集成</a></p>\n</blockquote>\n"},{"title":"使用gradle命令打包apk","date":"2016-05-16T11:04:04.000Z","_content":"\n# 前言\n\n**系统环境：Windows7**\n\n**Android Studio版本：2.1.1**\n\n**Gradle版本：2.8**\n\n**整个过程默认`翻墙`！**\n\n本文参考了[`Android Studio系列教程五–Gradle命令详解与导入第三方包`](http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/)，[`gradle项目构建`](http://www.cnblogs.com/smyhvae/p/4456420.html)这两篇博客以及[`Gradle官网`](https://guides.codepath.com/android/Getting-Started-with-Gradle)上关于Gradle使用说明。\n\n随着学习的深入，对Gradle的了解也多了些，今天我们就来聊聊如何用Gradle打测试包和正式包（debug与release）。Gradle官网上对Windows平台的Gradle也有描述。感觉学东西还是得多去官网上看看，毕竟上面都讲的非常详细。\n<!-- more -->\n# `下载Gradle与生成APK`\n\n在Android Studio中的`Terminal`窗口下输入：`gradlew -v` 。来查看下项目所用的`Gradle版本`。\n如果你是第一次执行会去下载Gradle \n![](http://i.imgur.com/0MMYnHj.png)\n下载成功后会出现如下信息：\n![](http://i.imgur.com/3yrVM2F.png)\n\n接着输入：`gradlew clean`。 执行这个命令会去下载Gradle的一些依赖\n![](http://i.imgur.com/Nb4nDvL.png)\n\n最后执行：`gradlew build`。 这个命令会直接`编译`并`生成`相应的`apk文件`，如果看到如下字样就代表build成功了\n![](http://i.imgur.com/wt3gYQC.png)\n\n# APK签名\n\n关于签名，有两种方法，`第一种`是在Android Studio`菜单栏`里中`build目录`下的`Generate signed APK`这种图形界面实现。`第二种`是直接在`gradle.build`里面通过代码实现;不过两种方法都差不多。在这里我只介绍一下第一种方法。\n\n1. `先执行`：`gradlew clean` 命令，将APK文件`清除`。\n2. `然后执行`：`radlew build` 命令，这个时候注意看Project目录下将出现如下图所示的测试版和未签名的正式版\n![](http://i.imgur.com/3yzNOQF.png)\n\n\n# 生成Keystore文件\n\n点击Android Studio菜单栏上的build——>`Generate signed APK` 将出现下图所示的对话框。由于第一次使用还没有创建Keystore文件，所以需要创建一个。\n\n![](http://i.imgur.com/bpYYeMz.png)\n\n接下来出现如下的对话框，按要求填好信息后，点击OK（注意：`请牢记自己设置的密码，等会要用到`）\n![](http://i.imgur.com/NhoVIBv.png)\n\n\n接下来将`设置Keystore`的存放路径及命名文件名称，该文件后缀默认为jks。点击OK。\n![](http://i.imgur.com/JPXx54o.png)\n\n\n# 生成带签名的正式版APK\n\n填写`之前`设置的`密码`，点击Next\n\n![](http://i.imgur.com/7CURn7K.png)\n\n选择`build Type`为`release`，点击finish\n\n![](http://i.imgur.com/KQyRn0l.png)\n\n接下来你将看到`Project目录`下多了一个带签名的正式版\n\n![](http://i.imgur.com/BLiEWiN.png)\n\n点击`Android Studio`中`右上角`的这个路径提示\n\n![](http://i.imgur.com/LsjDyua.png)\n\n*`大功告成！！`* `带签名的正式版以及测试版`都在这个文件夹里了。\n\n# Gradle常用命令\n\n更详细的请[Google](https://www.google.com/)下\n\n`gradlew`代表 `gradle wrapper`，意思是`gradle的一层包装`，大家可以理解为在这个项目本地就封装了gradle，即gradle wrapper。下面列举了几个常见的命令：\n\n`gradlew -v`：版本号\n\n`gradlew clean`：把之前打包所产生的所有文件全部清除(注意：和第一次下载Gradle时候的命令相同，但作用不同)\n\n`gradlew build`：检查依赖并编译打包(注意：和第一次下载Gradle时候的命令相同，但作用不同)\n\n> 这里注意的是 `gradlew build`\n> 命令把`debug`、`release`环境的包都打出来，如果正式发布`只需要`打Release的包，可以使用下面的这两个命令：\n\n1. gradlew assembleDebug 编译并打`Debug包`\n2. gradlew assembleRelease 编译并打`Release的包`","source":"_posts/使用gradle命令打包apk.md","raw":"---\ntitle: 使用gradle命令打包apk\ndate: 2016-05-16 19:04:04\ntags: [Gradle,Android,Android Studio]\ncategories: Android\n---\n\n# 前言\n\n**系统环境：Windows7**\n\n**Android Studio版本：2.1.1**\n\n**Gradle版本：2.8**\n\n**整个过程默认`翻墙`！**\n\n本文参考了[`Android Studio系列教程五–Gradle命令详解与导入第三方包`](http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/)，[`gradle项目构建`](http://www.cnblogs.com/smyhvae/p/4456420.html)这两篇博客以及[`Gradle官网`](https://guides.codepath.com/android/Getting-Started-with-Gradle)上关于Gradle使用说明。\n\n随着学习的深入，对Gradle的了解也多了些，今天我们就来聊聊如何用Gradle打测试包和正式包（debug与release）。Gradle官网上对Windows平台的Gradle也有描述。感觉学东西还是得多去官网上看看，毕竟上面都讲的非常详细。\n<!-- more -->\n# `下载Gradle与生成APK`\n\n在Android Studio中的`Terminal`窗口下输入：`gradlew -v` 。来查看下项目所用的`Gradle版本`。\n如果你是第一次执行会去下载Gradle \n![](http://i.imgur.com/0MMYnHj.png)\n下载成功后会出现如下信息：\n![](http://i.imgur.com/3yrVM2F.png)\n\n接着输入：`gradlew clean`。 执行这个命令会去下载Gradle的一些依赖\n![](http://i.imgur.com/Nb4nDvL.png)\n\n最后执行：`gradlew build`。 这个命令会直接`编译`并`生成`相应的`apk文件`，如果看到如下字样就代表build成功了\n![](http://i.imgur.com/wt3gYQC.png)\n\n# APK签名\n\n关于签名，有两种方法，`第一种`是在Android Studio`菜单栏`里中`build目录`下的`Generate signed APK`这种图形界面实现。`第二种`是直接在`gradle.build`里面通过代码实现;不过两种方法都差不多。在这里我只介绍一下第一种方法。\n\n1. `先执行`：`gradlew clean` 命令，将APK文件`清除`。\n2. `然后执行`：`radlew build` 命令，这个时候注意看Project目录下将出现如下图所示的测试版和未签名的正式版\n![](http://i.imgur.com/3yzNOQF.png)\n\n\n# 生成Keystore文件\n\n点击Android Studio菜单栏上的build——>`Generate signed APK` 将出现下图所示的对话框。由于第一次使用还没有创建Keystore文件，所以需要创建一个。\n\n![](http://i.imgur.com/bpYYeMz.png)\n\n接下来出现如下的对话框，按要求填好信息后，点击OK（注意：`请牢记自己设置的密码，等会要用到`）\n![](http://i.imgur.com/NhoVIBv.png)\n\n\n接下来将`设置Keystore`的存放路径及命名文件名称，该文件后缀默认为jks。点击OK。\n![](http://i.imgur.com/JPXx54o.png)\n\n\n# 生成带签名的正式版APK\n\n填写`之前`设置的`密码`，点击Next\n\n![](http://i.imgur.com/7CURn7K.png)\n\n选择`build Type`为`release`，点击finish\n\n![](http://i.imgur.com/KQyRn0l.png)\n\n接下来你将看到`Project目录`下多了一个带签名的正式版\n\n![](http://i.imgur.com/BLiEWiN.png)\n\n点击`Android Studio`中`右上角`的这个路径提示\n\n![](http://i.imgur.com/LsjDyua.png)\n\n*`大功告成！！`* `带签名的正式版以及测试版`都在这个文件夹里了。\n\n# Gradle常用命令\n\n更详细的请[Google](https://www.google.com/)下\n\n`gradlew`代表 `gradle wrapper`，意思是`gradle的一层包装`，大家可以理解为在这个项目本地就封装了gradle，即gradle wrapper。下面列举了几个常见的命令：\n\n`gradlew -v`：版本号\n\n`gradlew clean`：把之前打包所产生的所有文件全部清除(注意：和第一次下载Gradle时候的命令相同，但作用不同)\n\n`gradlew build`：检查依赖并编译打包(注意：和第一次下载Gradle时候的命令相同，但作用不同)\n\n> 这里注意的是 `gradlew build`\n> 命令把`debug`、`release`环境的包都打出来，如果正式发布`只需要`打Release的包，可以使用下面的这两个命令：\n\n1. gradlew assembleDebug 编译并打`Debug包`\n2. gradlew assembleRelease 编译并打`Release的包`","slug":"使用gradle命令打包apk","published":1,"updated":"2016-05-19T05:05:34.553Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfz2001jgwagfkkvz5mn","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><strong>系统环境：Windows7</strong></p>\n<p><strong>Android Studio版本：2.1.1</strong></p>\n<p><strong>Gradle版本：2.8</strong></p>\n<p><strong>整个过程默认<code>翻墙</code>！</strong></p>\n<p>本文参考了<a href=\"http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/\" target=\"_blank\" rel=\"external\"><code>Android Studio系列教程五–Gradle命令详解与导入第三方包</code></a>，<a href=\"http://www.cnblogs.com/smyhvae/p/4456420.html\" target=\"_blank\" rel=\"external\"><code>gradle项目构建</code></a>这两篇博客以及<a href=\"https://guides.codepath.com/android/Getting-Started-with-Gradle\" target=\"_blank\" rel=\"external\"><code>Gradle官网</code></a>上关于Gradle使用说明。</p>\n<p>随着学习的深入，对Gradle的了解也多了些，今天我们就来聊聊如何用Gradle打测试包和正式包（debug与release）。Gradle官网上对Windows平台的Gradle也有描述。感觉学东西还是得多去官网上看看，毕竟上面都讲的非常详细。<br><a id=\"more\"></a></p>\n<h1 id=\"下载Gradle与生成APK\"><a href=\"#下载Gradle与生成APK\" class=\"headerlink\" title=\"下载Gradle与生成APK\"></a><code>下载Gradle与生成APK</code></h1><p>在Android Studio中的<code>Terminal</code>窗口下输入：<code>gradlew -v</code> 。来查看下项目所用的<code>Gradle版本</code>。<br>如果你是第一次执行会去下载Gradle<br><img src=\"http://i.imgur.com/0MMYnHj.png\" alt=\"\"><br>下载成功后会出现如下信息：<br><img src=\"http://i.imgur.com/3yrVM2F.png\" alt=\"\"></p>\n<p>接着输入：<code>gradlew clean</code>。 执行这个命令会去下载Gradle的一些依赖<br><img src=\"http://i.imgur.com/Nb4nDvL.png\" alt=\"\"></p>\n<p>最后执行：<code>gradlew build</code>。 这个命令会直接<code>编译</code>并<code>生成</code>相应的<code>apk文件</code>，如果看到如下字样就代表build成功了<br><img src=\"http://i.imgur.com/wt3gYQC.png\" alt=\"\"></p>\n<h1 id=\"APK签名\"><a href=\"#APK签名\" class=\"headerlink\" title=\"APK签名\"></a>APK签名</h1><p>关于签名，有两种方法，<code>第一种</code>是在Android Studio<code>菜单栏</code>里中<code>build目录</code>下的<code>Generate signed APK</code>这种图形界面实现。<code>第二种</code>是直接在<code>gradle.build</code>里面通过代码实现;不过两种方法都差不多。在这里我只介绍一下第一种方法。</p>\n<ol>\n<li><code>先执行</code>：<code>gradlew clean</code> 命令，将APK文件<code>清除</code>。</li>\n<li><code>然后执行</code>：<code>radlew build</code> 命令，这个时候注意看Project目录下将出现如下图所示的测试版和未签名的正式版<br><img src=\"http://i.imgur.com/3yzNOQF.png\" alt=\"\"></li>\n</ol>\n<h1 id=\"生成Keystore文件\"><a href=\"#生成Keystore文件\" class=\"headerlink\" title=\"生成Keystore文件\"></a>生成Keystore文件</h1><p>点击Android Studio菜单栏上的build——&gt;<code>Generate signed APK</code> 将出现下图所示的对话框。由于第一次使用还没有创建Keystore文件，所以需要创建一个。</p>\n<p><img src=\"http://i.imgur.com/bpYYeMz.png\" alt=\"\"></p>\n<p>接下来出现如下的对话框，按要求填好信息后，点击OK（注意：<code>请牢记自己设置的密码，等会要用到</code>）<br><img src=\"http://i.imgur.com/NhoVIBv.png\" alt=\"\"></p>\n<p>接下来将<code>设置Keystore</code>的存放路径及命名文件名称，该文件后缀默认为jks。点击OK。<br><img src=\"http://i.imgur.com/JPXx54o.png\" alt=\"\"></p>\n<h1 id=\"生成带签名的正式版APK\"><a href=\"#生成带签名的正式版APK\" class=\"headerlink\" title=\"生成带签名的正式版APK\"></a>生成带签名的正式版APK</h1><p>填写<code>之前</code>设置的<code>密码</code>，点击Next</p>\n<p><img src=\"http://i.imgur.com/7CURn7K.png\" alt=\"\"></p>\n<p>选择<code>build Type</code>为<code>release</code>，点击finish</p>\n<p><img src=\"http://i.imgur.com/KQyRn0l.png\" alt=\"\"></p>\n<p>接下来你将看到<code>Project目录</code>下多了一个带签名的正式版</p>\n<p><img src=\"http://i.imgur.com/BLiEWiN.png\" alt=\"\"></p>\n<p>点击<code>Android Studio</code>中<code>右上角</code>的这个路径提示</p>\n<p><img src=\"http://i.imgur.com/LsjDyua.png\" alt=\"\"></p>\n<p><em><code>大功告成！！</code></em> <code>带签名的正式版以及测试版</code>都在这个文件夹里了。</p>\n<h1 id=\"Gradle常用命令\"><a href=\"#Gradle常用命令\" class=\"headerlink\" title=\"Gradle常用命令\"></a>Gradle常用命令</h1><p>更详细的请<a href=\"https://www.google.com/\" target=\"_blank\" rel=\"external\">Google</a>下</p>\n<p><code>gradlew</code>代表 <code>gradle wrapper</code>，意思是<code>gradle的一层包装</code>，大家可以理解为在这个项目本地就封装了gradle，即gradle wrapper。下面列举了几个常见的命令：</p>\n<p><code>gradlew -v</code>：版本号</p>\n<p><code>gradlew clean</code>：把之前打包所产生的所有文件全部清除(注意：和第一次下载Gradle时候的命令相同，但作用不同)</p>\n<p><code>gradlew build</code>：检查依赖并编译打包(注意：和第一次下载Gradle时候的命令相同，但作用不同)</p>\n<blockquote>\n<p>这里注意的是 <code>gradlew build</code><br>命令把<code>debug</code>、<code>release</code>环境的包都打出来，如果正式发布<code>只需要</code>打Release的包，可以使用下面的这两个命令：</p>\n</blockquote>\n<ol>\n<li>gradlew assembleDebug 编译并打<code>Debug包</code></li>\n<li>gradlew assembleRelease 编译并打<code>Release的包</code></li>\n</ol>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><strong>系统环境：Windows7</strong></p>\n<p><strong>Android Studio版本：2.1.1</strong></p>\n<p><strong>Gradle版本：2.8</strong></p>\n<p><strong>整个过程默认<code>翻墙</code>！</strong></p>\n<p>本文参考了<a href=\"http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/\"><code>Android Studio系列教程五–Gradle命令详解与导入第三方包</code></a>，<a href=\"http://www.cnblogs.com/smyhvae/p/4456420.html\"><code>gradle项目构建</code></a>这两篇博客以及<a href=\"https://guides.codepath.com/android/Getting-Started-with-Gradle\"><code>Gradle官网</code></a>上关于Gradle使用说明。</p>\n<p>随着学习的深入，对Gradle的了解也多了些，今天我们就来聊聊如何用Gradle打测试包和正式包（debug与release）。Gradle官网上对Windows平台的Gradle也有描述。感觉学东西还是得多去官网上看看，毕竟上面都讲的非常详细。<br>","more":"</p>\n<h1 id=\"下载Gradle与生成APK\"><a href=\"#下载Gradle与生成APK\" class=\"headerlink\" title=\"下载Gradle与生成APK\"></a><code>下载Gradle与生成APK</code></h1><p>在Android Studio中的<code>Terminal</code>窗口下输入：<code>gradlew -v</code> 。来查看下项目所用的<code>Gradle版本</code>。<br>如果你是第一次执行会去下载Gradle<br><img src=\"http://i.imgur.com/0MMYnHj.png\" alt=\"\"><br>下载成功后会出现如下信息：<br><img src=\"http://i.imgur.com/3yrVM2F.png\" alt=\"\"></p>\n<p>接着输入：<code>gradlew clean</code>。 执行这个命令会去下载Gradle的一些依赖<br><img src=\"http://i.imgur.com/Nb4nDvL.png\" alt=\"\"></p>\n<p>最后执行：<code>gradlew build</code>。 这个命令会直接<code>编译</code>并<code>生成</code>相应的<code>apk文件</code>，如果看到如下字样就代表build成功了<br><img src=\"http://i.imgur.com/wt3gYQC.png\" alt=\"\"></p>\n<h1 id=\"APK签名\"><a href=\"#APK签名\" class=\"headerlink\" title=\"APK签名\"></a>APK签名</h1><p>关于签名，有两种方法，<code>第一种</code>是在Android Studio<code>菜单栏</code>里中<code>build目录</code>下的<code>Generate signed APK</code>这种图形界面实现。<code>第二种</code>是直接在<code>gradle.build</code>里面通过代码实现;不过两种方法都差不多。在这里我只介绍一下第一种方法。</p>\n<ol>\n<li><code>先执行</code>：<code>gradlew clean</code> 命令，将APK文件<code>清除</code>。</li>\n<li><code>然后执行</code>：<code>radlew build</code> 命令，这个时候注意看Project目录下将出现如下图所示的测试版和未签名的正式版<br><img src=\"http://i.imgur.com/3yzNOQF.png\" alt=\"\"></li>\n</ol>\n<h1 id=\"生成Keystore文件\"><a href=\"#生成Keystore文件\" class=\"headerlink\" title=\"生成Keystore文件\"></a>生成Keystore文件</h1><p>点击Android Studio菜单栏上的build——&gt;<code>Generate signed APK</code> 将出现下图所示的对话框。由于第一次使用还没有创建Keystore文件，所以需要创建一个。</p>\n<p><img src=\"http://i.imgur.com/bpYYeMz.png\" alt=\"\"></p>\n<p>接下来出现如下的对话框，按要求填好信息后，点击OK（注意：<code>请牢记自己设置的密码，等会要用到</code>）<br><img src=\"http://i.imgur.com/NhoVIBv.png\" alt=\"\"></p>\n<p>接下来将<code>设置Keystore</code>的存放路径及命名文件名称，该文件后缀默认为jks。点击OK。<br><img src=\"http://i.imgur.com/JPXx54o.png\" alt=\"\"></p>\n<h1 id=\"生成带签名的正式版APK\"><a href=\"#生成带签名的正式版APK\" class=\"headerlink\" title=\"生成带签名的正式版APK\"></a>生成带签名的正式版APK</h1><p>填写<code>之前</code>设置的<code>密码</code>，点击Next</p>\n<p><img src=\"http://i.imgur.com/7CURn7K.png\" alt=\"\"></p>\n<p>选择<code>build Type</code>为<code>release</code>，点击finish</p>\n<p><img src=\"http://i.imgur.com/KQyRn0l.png\" alt=\"\"></p>\n<p>接下来你将看到<code>Project目录</code>下多了一个带签名的正式版</p>\n<p><img src=\"http://i.imgur.com/BLiEWiN.png\" alt=\"\"></p>\n<p>点击<code>Android Studio</code>中<code>右上角</code>的这个路径提示</p>\n<p><img src=\"http://i.imgur.com/LsjDyua.png\" alt=\"\"></p>\n<p><em><code>大功告成！！</code></em> <code>带签名的正式版以及测试版</code>都在这个文件夹里了。</p>\n<h1 id=\"Gradle常用命令\"><a href=\"#Gradle常用命令\" class=\"headerlink\" title=\"Gradle常用命令\"></a>Gradle常用命令</h1><p>更详细的请<a href=\"https://www.google.com/\">Google</a>下</p>\n<p><code>gradlew</code>代表 <code>gradle wrapper</code>，意思是<code>gradle的一层包装</code>，大家可以理解为在这个项目本地就封装了gradle，即gradle wrapper。下面列举了几个常见的命令：</p>\n<p><code>gradlew -v</code>：版本号</p>\n<p><code>gradlew clean</code>：把之前打包所产生的所有文件全部清除(注意：和第一次下载Gradle时候的命令相同，但作用不同)</p>\n<p><code>gradlew build</code>：检查依赖并编译打包(注意：和第一次下载Gradle时候的命令相同，但作用不同)</p>\n<blockquote>\n<p>这里注意的是 <code>gradlew build</code><br>命令把<code>debug</code>、<code>release</code>环境的包都打出来，如果正式发布<code>只需要</code>打Release的包，可以使用下面的这两个命令：</p>\n</blockquote>\n<ol>\n<li>gradlew assembleDebug 编译并打<code>Debug包</code></li>\n<li>gradlew assembleRelease 编译并打<code>Release的包</code></li>\n</ol>"},{"title":"实现多行多列的RadioButton","date":"2016-08-02T10:21:33.000Z","_content":"\n>由于最近的项目中多处需要用到多行多列的RadioButton,而google原生的RadioGroup又不能实现!因此就要自己动手实现了~\n\n`注意:`*这里所说的RadioButton都是在代码中动态添加的!*\n\n看下效果图:\n![实现多行多列的RadioButton](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkjnjio2j20b404ewed.jpg)\n<!-- more -->\n![行列对齐RadioButton](http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f6ga5gamz4j20ba047mx3.jpg)\n\n## 开始造轮子: *分为四步*\n### 重写RadioGroup-->目的是使 RadioButton可以自动换行\n### 布局中引用MyRadioGroupAuto\n### 代码中根据数据动态添加RadioButton,然后MyRadioGroup通过`addView`把RadioButton加进去\n - 这里需要讲下RadioButton的`几个属性 `\n    - radioButton.setPadding(20, 0, screenWidth / 6, 0);// 设置文字距离按钮图片四周的距离\n    - radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable); //点击效果\n    - radioButton.setTag(loanAndFeeList.get(i)); // 设置tag,可以存一些数据\n    - radioButton.setTextSize(13); //默认单位是 sp\n    - radioButton.setHeight(50); //默认单位是px\n    - RadioButton clickRadioButton = (RadioButton) radioGroup.findViewById(checkedId); //通过RadioGroup对象获取点击的RadioButton组件\n\t\n### 设置RadioGroup点击事件\n\n\n## 下面直接上代码: *三步*\n\n### 自定义MyRadioGroupAuto\n\n```\n/**\n * Author: 0027008122 [yang.jianan@zte.com.cn]\n * Time: 2016-08-02 11:33\n * Version: 1.0\n * TaskId:\n * Description:\n */\n public class MyRadioGroupAuto extends RadioGroup {\n    public MyRadioGroupAuto(Context context) {\n        super(context);\n    }\n\n    public MyRadioGroupAuto(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        //获取最大宽度\n        int maxWidth = MeasureSpec.getSize(widthMeasureSpec);\n        //获取Group中的Child数量\n        int childCount = getChildCount();\n        //设置Group的左边距，下面也会使用x计算每行所占的宽度\n        int x = 0;\n        //设置Group的上边距，下面也会使用y计算Group所占的高度\n        int y = 30;\n        //设置Group的行数\n        int row = 0;\n        for (int index = 0; index < childCount; index++) {\n            final View child = getChildAt(index);\n            if (child.getVisibility() != View.GONE) {\n                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n                //重新计算child的宽高\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                //添加到X中，(width+10) 设置child左边距\n                x += (width + 10);\n                //行数*child高度+这次child高度=现在Group的高度,(height + 10)设置child上边距\n                y = row * (height + 10) + (height + 10);\n                //当前行宽X大于Group的最大宽度时，进行换行\n                if (x > maxWidth) {\n                    //当index不为0时，进行row++，防止FirstChild出现大于maxWidth时,提前进行row++\n                    if (index != 0)\n                        row++;\n                    //child的width大于maxWidth时，重新设置child的width为最大宽度\n                    if (width >= maxWidth) {\n                        width = maxWidth - 30;\n                    }\n                    //重新设置当前X\n                    x = (width + 20);\n                    //重新设置现在Group的高度\n                    y = row * (height + 10) + (height + 10);\n                }\n            }\n        }\n        // 设置容器所需的宽度和高度\n        setMeasuredDimension(maxWidth, y);\n    }\n\n\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        final int childCount = getChildCount();\n        int maxWidth = r - l;\n        int x = 10;\n        int y = 0;\n        int row = 0;\n        for (int i = 0; i < childCount; i++) {\n            final View child = this.getChildAt(i);\n            if (child.getVisibility() != View.GONE) {\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += (width + 10);\n                y = row * (height + 10) + (height + 10);\n                if (x > maxWidth) {\n                    if (i != 0)\n                        row++;\n                    if (width >= maxWidth) {\n                        width = maxWidth - 30;\n                    }\n                    x = (width + 20);\n                    y = row * (height + 10) + (height + 10);\n                }\n                child.layout(x - width, y - height, x, y);\n            }\n        }\n    }\n}\n\n```\n\n### 布局中引用MyRadioGroupAuto\n\n```\n<com.ztesoft.zsmart.datamall.app.widget.MyRadioGroupAuto\n        android:id=\"@+id/my_radio_group_auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"33dp\"\n        android:layout_marginLeft=\"22dp\"\n        android:layout_marginRight=\"22dp\"\n        android:layout_marginTop=\"16dp\">\n</com.ztesoft.zsmart.datamall.app.widget.MyRadioGroupAuto>\n```\n\n### 代码中动态添加RadioButton\n\n```\npublic class CheckboxRadiobuttonDemo extends Activity {\n    /**\n     * Called when the activity is first created.\n     */\n    private RadioGroupAuto rgp;\n    private RadioGroup yuansheng;\n\n    private String[] loanList;\n    private String[] loanFeeList;\n    private List<String> loanAndFeeList;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n\n        //获取屏幕信息\n        DisplayMetrics dm = new DisplayMetrics();\n        getWindowManager().getDefaultDisplay().getMetrics(dm);\n        int screenWidth = dm.widthPixels;\n\n        loanAndFeeList = new ArrayList<>();\n        loanList = \"800,1000,1600,200,300,500,700\".split(\",\");\n        loanFeeList = \"50,80,100,20,30,50,70\".split(\",\");\n\t\t\n\t\t//求最大最小值 (为了保持RadioButton文字长度一致,跟最长的保持一致!)\n        int max = Integer.parseInt(loanList[0]);\n        int min = Integer.parseInt(loanList[0]);\n        for (String i : loanList) {\n            int j = Integer.parseInt(i);\n            max = max > j ? max : j;\n            min = min < j ? min : j;\n        }\n        \n        String maxS = String.valueOf(max);\n        int maxLen = maxS.length();\n\n        for (int i = 0; i < loanList.length; i++) {\n            loanAndFeeList.add( loanList[i] + \",\" + loanFeeList[i]);\n        }\n\n\n        rgp = (RadioGroupAuto) findViewById(R.id.RadioGroup01);\n\n        int len = loanAndFeeList.size();\n\n        for (int j = 0; j < len; j++) {\n\n            RadioButton radioButton = new RadioButton(this);\n            radioButton.setPadding(20, 0, screenWidth / 6, 0); // 设置文字距离按钮四周的距离\n            radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable);\n\n            String newLoanList = loanList[j];\n            if (loanList[j].length() < maxLen) {\n                newLoanList = newLoanList + appendLength(maxLen - loanList[j].length());\n\n                // 实现 TextView同时显示两种风格文字 http://txlong-onz.iteye.com/blog/1142781\n                SpannableStringBuilder sb = new SpannableStringBuilder(newLoanList);\n                final ForegroundColorSpan fcs = new ForegroundColorSpan(Color.WHITE);\n                sb.setSpan(fcs, loanList[j].length(), maxLen, Spannable.SPAN_INCLUSIVE_INCLUSIVE);\n                radioButton.setText(sb);\n            } else {\n                newLoanList = loanList[j];\n                radioButton.setText(newLoanList);\n            }\n\t\t\t\n\t\t\tradioButton.setId(j); //设置RadioButton的id\n            radioButton.setTag(loanAndFeeList.get(j));\n            radioButton.setTextSize(13); //默认单位是 sp\n            radioButton.setHeight(50); //默认单位是px\n            rgp.addView(radioButton); //添加到RadioGroup中\n\n        }\n\n        rgp.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\n\n            @Override\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\n                RadioButton clickRadioButton = (RadioButton) group.findViewById(checkedId);\n\n                String tipInfo = \"id: \" + clickRadioButton.getId() + \" text: \" + clickRadioButton.getText() +\n                        /*\"hint: \" + clickRadioButton.getHint() +*/ \" tag:\" + clickRadioButton.getTag();\n                System.out.println(tipInfo);\n\n                Toast.makeText(CheckboxRadiobuttonDemo.this, tipInfo,\n                        Toast.LENGTH_SHORT).show();\n            }\n        });\n\t\t\n\t\t//根据这个来设置默认选中的项, 注意,这个要设置在监听之后!,否则默认点击监听不到!虽然有选中效果\n        //参考 http://blog.csdn.net/lzqjfly/article/details/16963645\n        //以及http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android\n        rgp.check(0);\n    }\n\n    /**\n     * 补全长度,保持最长的长度\n     *\n     * @param count 字符串长度\n     * @return 补全后的长度\n     * 这里长度不够的就用 \"s\" 占位, 赋值的时候将字体设置白色!\n     */\n    public String appendLength(int count) {\n        String st = \"\";\n        if (count < 0) {\n            count = 0;\n        }\n        for (int i = 0; i < count; i++) {\n            st = st + \"s\";\n        }\n        return st;\n    }\n}\n```\n\n## 总结:\n碰到的问题: RadioGroup中RadioButton不能互斥\n解决方法: 需要用`RadioGroup.check(id)`,来设置被默认选中的项，其中id为RadioButton的id，如果`动态添加的RadioButton`，需要设置好`id`\n参考:http://blog.csdn.net/lzqjfly/article/details/16963645 , http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android","source":"_posts/实现多行多列的RadioButton.md","raw":"---\ntitle: 实现多行多列的RadioButton\ndate: 2016-08-02 18:21:33\ntags: Android\ncategories: Android\n---\n\n>由于最近的项目中多处需要用到多行多列的RadioButton,而google原生的RadioGroup又不能实现!因此就要自己动手实现了~\n\n`注意:`*这里所说的RadioButton都是在代码中动态添加的!*\n\n看下效果图:\n![实现多行多列的RadioButton](http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkjnjio2j20b404ewed.jpg)\n<!-- more -->\n![行列对齐RadioButton](http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f6ga5gamz4j20ba047mx3.jpg)\n\n## 开始造轮子: *分为四步*\n### 重写RadioGroup-->目的是使 RadioButton可以自动换行\n### 布局中引用MyRadioGroupAuto\n### 代码中根据数据动态添加RadioButton,然后MyRadioGroup通过`addView`把RadioButton加进去\n - 这里需要讲下RadioButton的`几个属性 `\n    - radioButton.setPadding(20, 0, screenWidth / 6, 0);// 设置文字距离按钮图片四周的距离\n    - radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable); //点击效果\n    - radioButton.setTag(loanAndFeeList.get(i)); // 设置tag,可以存一些数据\n    - radioButton.setTextSize(13); //默认单位是 sp\n    - radioButton.setHeight(50); //默认单位是px\n    - RadioButton clickRadioButton = (RadioButton) radioGroup.findViewById(checkedId); //通过RadioGroup对象获取点击的RadioButton组件\n\t\n### 设置RadioGroup点击事件\n\n\n## 下面直接上代码: *三步*\n\n### 自定义MyRadioGroupAuto\n\n```\n/**\n * Author: 0027008122 [yang.jianan@zte.com.cn]\n * Time: 2016-08-02 11:33\n * Version: 1.0\n * TaskId:\n * Description:\n */\n public class MyRadioGroupAuto extends RadioGroup {\n    public MyRadioGroupAuto(Context context) {\n        super(context);\n    }\n\n    public MyRadioGroupAuto(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        //获取最大宽度\n        int maxWidth = MeasureSpec.getSize(widthMeasureSpec);\n        //获取Group中的Child数量\n        int childCount = getChildCount();\n        //设置Group的左边距，下面也会使用x计算每行所占的宽度\n        int x = 0;\n        //设置Group的上边距，下面也会使用y计算Group所占的高度\n        int y = 30;\n        //设置Group的行数\n        int row = 0;\n        for (int index = 0; index < childCount; index++) {\n            final View child = getChildAt(index);\n            if (child.getVisibility() != View.GONE) {\n                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n                //重新计算child的宽高\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                //添加到X中，(width+10) 设置child左边距\n                x += (width + 10);\n                //行数*child高度+这次child高度=现在Group的高度,(height + 10)设置child上边距\n                y = row * (height + 10) + (height + 10);\n                //当前行宽X大于Group的最大宽度时，进行换行\n                if (x > maxWidth) {\n                    //当index不为0时，进行row++，防止FirstChild出现大于maxWidth时,提前进行row++\n                    if (index != 0)\n                        row++;\n                    //child的width大于maxWidth时，重新设置child的width为最大宽度\n                    if (width >= maxWidth) {\n                        width = maxWidth - 30;\n                    }\n                    //重新设置当前X\n                    x = (width + 20);\n                    //重新设置现在Group的高度\n                    y = row * (height + 10) + (height + 10);\n                }\n            }\n        }\n        // 设置容器所需的宽度和高度\n        setMeasuredDimension(maxWidth, y);\n    }\n\n\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        final int childCount = getChildCount();\n        int maxWidth = r - l;\n        int x = 10;\n        int y = 0;\n        int row = 0;\n        for (int i = 0; i < childCount; i++) {\n            final View child = this.getChildAt(i);\n            if (child.getVisibility() != View.GONE) {\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += (width + 10);\n                y = row * (height + 10) + (height + 10);\n                if (x > maxWidth) {\n                    if (i != 0)\n                        row++;\n                    if (width >= maxWidth) {\n                        width = maxWidth - 30;\n                    }\n                    x = (width + 20);\n                    y = row * (height + 10) + (height + 10);\n                }\n                child.layout(x - width, y - height, x, y);\n            }\n        }\n    }\n}\n\n```\n\n### 布局中引用MyRadioGroupAuto\n\n```\n<com.ztesoft.zsmart.datamall.app.widget.MyRadioGroupAuto\n        android:id=\"@+id/my_radio_group_auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"33dp\"\n        android:layout_marginLeft=\"22dp\"\n        android:layout_marginRight=\"22dp\"\n        android:layout_marginTop=\"16dp\">\n</com.ztesoft.zsmart.datamall.app.widget.MyRadioGroupAuto>\n```\n\n### 代码中动态添加RadioButton\n\n```\npublic class CheckboxRadiobuttonDemo extends Activity {\n    /**\n     * Called when the activity is first created.\n     */\n    private RadioGroupAuto rgp;\n    private RadioGroup yuansheng;\n\n    private String[] loanList;\n    private String[] loanFeeList;\n    private List<String> loanAndFeeList;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n\n        //获取屏幕信息\n        DisplayMetrics dm = new DisplayMetrics();\n        getWindowManager().getDefaultDisplay().getMetrics(dm);\n        int screenWidth = dm.widthPixels;\n\n        loanAndFeeList = new ArrayList<>();\n        loanList = \"800,1000,1600,200,300,500,700\".split(\",\");\n        loanFeeList = \"50,80,100,20,30,50,70\".split(\",\");\n\t\t\n\t\t//求最大最小值 (为了保持RadioButton文字长度一致,跟最长的保持一致!)\n        int max = Integer.parseInt(loanList[0]);\n        int min = Integer.parseInt(loanList[0]);\n        for (String i : loanList) {\n            int j = Integer.parseInt(i);\n            max = max > j ? max : j;\n            min = min < j ? min : j;\n        }\n        \n        String maxS = String.valueOf(max);\n        int maxLen = maxS.length();\n\n        for (int i = 0; i < loanList.length; i++) {\n            loanAndFeeList.add( loanList[i] + \",\" + loanFeeList[i]);\n        }\n\n\n        rgp = (RadioGroupAuto) findViewById(R.id.RadioGroup01);\n\n        int len = loanAndFeeList.size();\n\n        for (int j = 0; j < len; j++) {\n\n            RadioButton radioButton = new RadioButton(this);\n            radioButton.setPadding(20, 0, screenWidth / 6, 0); // 设置文字距离按钮四周的距离\n            radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable);\n\n            String newLoanList = loanList[j];\n            if (loanList[j].length() < maxLen) {\n                newLoanList = newLoanList + appendLength(maxLen - loanList[j].length());\n\n                // 实现 TextView同时显示两种风格文字 http://txlong-onz.iteye.com/blog/1142781\n                SpannableStringBuilder sb = new SpannableStringBuilder(newLoanList);\n                final ForegroundColorSpan fcs = new ForegroundColorSpan(Color.WHITE);\n                sb.setSpan(fcs, loanList[j].length(), maxLen, Spannable.SPAN_INCLUSIVE_INCLUSIVE);\n                radioButton.setText(sb);\n            } else {\n                newLoanList = loanList[j];\n                radioButton.setText(newLoanList);\n            }\n\t\t\t\n\t\t\tradioButton.setId(j); //设置RadioButton的id\n            radioButton.setTag(loanAndFeeList.get(j));\n            radioButton.setTextSize(13); //默认单位是 sp\n            radioButton.setHeight(50); //默认单位是px\n            rgp.addView(radioButton); //添加到RadioGroup中\n\n        }\n\n        rgp.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\n\n            @Override\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\n                RadioButton clickRadioButton = (RadioButton) group.findViewById(checkedId);\n\n                String tipInfo = \"id: \" + clickRadioButton.getId() + \" text: \" + clickRadioButton.getText() +\n                        /*\"hint: \" + clickRadioButton.getHint() +*/ \" tag:\" + clickRadioButton.getTag();\n                System.out.println(tipInfo);\n\n                Toast.makeText(CheckboxRadiobuttonDemo.this, tipInfo,\n                        Toast.LENGTH_SHORT).show();\n            }\n        });\n\t\t\n\t\t//根据这个来设置默认选中的项, 注意,这个要设置在监听之后!,否则默认点击监听不到!虽然有选中效果\n        //参考 http://blog.csdn.net/lzqjfly/article/details/16963645\n        //以及http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android\n        rgp.check(0);\n    }\n\n    /**\n     * 补全长度,保持最长的长度\n     *\n     * @param count 字符串长度\n     * @return 补全后的长度\n     * 这里长度不够的就用 \"s\" 占位, 赋值的时候将字体设置白色!\n     */\n    public String appendLength(int count) {\n        String st = \"\";\n        if (count < 0) {\n            count = 0;\n        }\n        for (int i = 0; i < count; i++) {\n            st = st + \"s\";\n        }\n        return st;\n    }\n}\n```\n\n## 总结:\n碰到的问题: RadioGroup中RadioButton不能互斥\n解决方法: 需要用`RadioGroup.check(id)`,来设置被默认选中的项，其中id为RadioButton的id，如果`动态添加的RadioButton`，需要设置好`id`\n参考:http://blog.csdn.net/lzqjfly/article/details/16963645 , http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android","slug":"实现多行多列的RadioButton","published":1,"updated":"2016-08-04T07:38:01.273Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfz4001mgwagy3c4pzxj","content":"<blockquote>\n<p>由于最近的项目中多处需要用到多行多列的RadioButton,而google原生的RadioGroup又不能实现!因此就要自己动手实现了~</p>\n</blockquote>\n<p><code>注意:</code><em>这里所说的RadioButton都是在代码中动态添加的!</em></p>\n<p>看下效果图:<br><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkjnjio2j20b404ewed.jpg\" alt=\"实现多行多列的RadioButton\"><br><a id=\"more\"></a><br><img src=\"http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f6ga5gamz4j20ba047mx3.jpg\" alt=\"行列对齐RadioButton\"></p>\n<h2 id=\"开始造轮子-分为四步\"><a href=\"#开始造轮子-分为四步\" class=\"headerlink\" title=\"开始造轮子: 分为四步\"></a>开始造轮子: <em>分为四步</em></h2><h3 id=\"重写RadioGroup–-gt-目的是使-RadioButton可以自动换行\"><a href=\"#重写RadioGroup–-gt-目的是使-RadioButton可以自动换行\" class=\"headerlink\" title=\"重写RadioGroup–&gt;目的是使 RadioButton可以自动换行\"></a>重写RadioGroup–&gt;目的是使 RadioButton可以自动换行</h3><h3 id=\"布局中引用MyRadioGroupAuto\"><a href=\"#布局中引用MyRadioGroupAuto\" class=\"headerlink\" title=\"布局中引用MyRadioGroupAuto\"></a>布局中引用MyRadioGroupAuto</h3><h3 id=\"代码中根据数据动态添加RadioButton-然后MyRadioGroup通过addView把RadioButton加进去\"><a href=\"#代码中根据数据动态添加RadioButton-然后MyRadioGroup通过addView把RadioButton加进去\" class=\"headerlink\" title=\"代码中根据数据动态添加RadioButton,然后MyRadioGroup通过addView把RadioButton加进去\"></a>代码中根据数据动态添加RadioButton,然后MyRadioGroup通过<code>addView</code>把RadioButton加进去</h3><ul>\n<li>这里需要讲下RadioButton的<code>几个属性</code><ul>\n<li>radioButton.setPadding(20, 0, screenWidth / 6, 0);// 设置文字距离按钮图片四周的距离</li>\n<li>radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable); //点击效果</li>\n<li>radioButton.setTag(loanAndFeeList.get(i)); // 设置tag,可以存一些数据</li>\n<li>radioButton.setTextSize(13); //默认单位是 sp</li>\n<li>radioButton.setHeight(50); //默认单位是px</li>\n<li>RadioButton clickRadioButton = (RadioButton) radioGroup.findViewById(checkedId); //通过RadioGroup对象获取点击的RadioButton组件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"设置RadioGroup点击事件\"><a href=\"#设置RadioGroup点击事件\" class=\"headerlink\" title=\"设置RadioGroup点击事件\"></a>设置RadioGroup点击事件</h3><h2 id=\"下面直接上代码-三步\"><a href=\"#下面直接上代码-三步\" class=\"headerlink\" title=\"下面直接上代码: 三步\"></a>下面直接上代码: <em>三步</em></h2><h3 id=\"自定义MyRadioGroupAuto\"><a href=\"#自定义MyRadioGroupAuto\" class=\"headerlink\" title=\"自定义MyRadioGroupAuto\"></a>自定义MyRadioGroupAuto</h3><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Author: 0027008122 [yang.jianan@zte.com.cn]</span><br><span class=\"line\"> * Time: 2016-08-02 11:33</span><br><span class=\"line\"> * Version: 1.0</span><br><span class=\"line\"> * TaskId:</span><br><span class=\"line\"> * Description:</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span> class MyRadioGroupAuto extends RadioGroup &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> MyRadioGroupAuto(Context context) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MyRadioGroupAuto(Context context, AttributeSet attrs) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> onMeasure(<span class=\"built_in\">int</span> widthMeasureSpec, <span class=\"built_in\">int</span> heightMeasureSpec) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取最大宽度</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> maxWidth = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"comment\">//获取Group中的Child数量</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> childCount = getChildCount();</span><br><span class=\"line\">        <span class=\"comment\">//设置Group的左边距，下面也会使用x计算每行所占的宽度</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//设置Group的上边距，下面也会使用y计算Group所占的高度</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> y = <span class=\"number\">30</span>;</span><br><span class=\"line\">        <span class=\"comment\">//设置Group的行数</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> row = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> index = <span class=\"number\">0</span>; index &lt; childCount; index++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> View child = getChildAt(index);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (child.getVisibility() != View.GONE) &#123;</span><br><span class=\"line\">                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);</span><br><span class=\"line\">                <span class=\"comment\">//重新计算child的宽高</span></span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">width</span> = child.getMeasuredWidth();</span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">height</span> = child.getMeasuredHeight();</span><br><span class=\"line\">                <span class=\"comment\">//添加到X中，(width+10) 设置child左边距</span></span><br><span class=\"line\">                x += (<span class=\"built_in\">width</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"comment\">//行数*child高度+这次child高度=现在Group的高度,(height + 10)设置child上边距</span></span><br><span class=\"line\">                y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"comment\">//当前行宽X大于Group的最大宽度时，进行换行</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (x &gt; maxWidth) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//当index不为0时，进行row++，防止FirstChild出现大于maxWidth时,提前进行row++</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (index != <span class=\"number\">0</span>)</span><br><span class=\"line\">                        row++;</span><br><span class=\"line\">                    <span class=\"comment\">//child的width大于maxWidth时，重新设置child的width为最大宽度</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">width</span> &gt;= maxWidth) &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">width</span> = maxWidth - <span class=\"number\">30</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"comment\">//重新设置当前X</span></span><br><span class=\"line\">                    x = (<span class=\"built_in\">width</span> + <span class=\"number\">20</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//重新设置现在Group的高度</span></span><br><span class=\"line\">                    y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 设置容器所需的宽度和高度</span></span><br><span class=\"line\">        setMeasuredDimension(maxWidth, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> onLayout(<span class=\"built_in\">boolean</span> changed, <span class=\"built_in\">int</span> l, <span class=\"built_in\">int</span> t, <span class=\"built_in\">int</span> r, <span class=\"built_in\">int</span> b) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"built_in\">int</span> childCount = getChildCount();</span><br><span class=\"line\">        <span class=\"built_in\">int</span> maxWidth = r - l;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> x = <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> y = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> row = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; childCount; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> View child = <span class=\"keyword\">this</span>.getChildAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (child.getVisibility() != View.GONE) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">width</span> = child.getMeasuredWidth();</span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">height</span> = child.getMeasuredHeight();</span><br><span class=\"line\">                x += (<span class=\"built_in\">width</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (x &gt; maxWidth) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span>)</span><br><span class=\"line\">                        row++;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">width</span> &gt;= maxWidth) &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">width</span> = maxWidth - <span class=\"number\">30</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    x = (<span class=\"built_in\">width</span> + <span class=\"number\">20</span>);</span><br><span class=\"line\">                    y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                child.layout(x - <span class=\"built_in\">width</span>, y - <span class=\"built_in\">height</span>, x, y);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"布局中引用MyRadioGroupAuto-1\"><a href=\"#布局中引用MyRadioGroupAuto-1\" class=\"headerlink\" title=\"布局中引用MyRadioGroupAuto\"></a>布局中引用MyRadioGroupAuto</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com<span class=\"selector-class\">.ztesoft</span><span class=\"selector-class\">.zsmart</span><span class=\"selector-class\">.datamall</span><span class=\"selector-class\">.app</span><span class=\"selector-class\">.widget</span><span class=\"selector-class\">.MyRadioGroupAuto</span></span><br><span class=\"line\">        android:id=<span class=\"string\">\"@+id/my_radio_group_auto\"</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">\"wrap_content\"</span></span><br><span class=\"line\">        android:layout_marginBottom=<span class=\"string\">\"33dp\"</span></span><br><span class=\"line\">        android:layout_marginLeft=<span class=\"string\">\"22dp\"</span></span><br><span class=\"line\">        android:layout_marginRight=<span class=\"string\">\"22dp\"</span></span><br><span class=\"line\">        android:layout_marginTop=<span class=\"string\">\"16dp\"</span>&gt;</span><br><span class=\"line\">&lt;/com<span class=\"selector-class\">.ztesoft</span><span class=\"selector-class\">.zsmart</span><span class=\"selector-class\">.datamall</span><span class=\"selector-class\">.app</span><span class=\"selector-class\">.widget</span><span class=\"selector-class\">.MyRadioGroupAuto</span>&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码中动态添加RadioButton\"><a href=\"#代码中动态添加RadioButton\" class=\"headerlink\" title=\"代码中动态添加RadioButton\"></a>代码中动态添加RadioButton</h3><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> class CheckboxRadiobuttonDemo extends Activity &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * Called when the activity is first created.</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RadioGroupAuto rgp;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> RadioGroup yuansheng;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">String</span>[] loanList;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">String</span>[] loanFeeList;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">String</span>&gt; loanAndFeeList;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.main);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取屏幕信息</span></span><br><span class=\"line\">        DisplayMetrics dm = <span class=\"keyword\">new</span> DisplayMetrics();</span><br><span class=\"line\">        getWindowManager().getDefaultDisplay().getMetrics(dm);</span><br><span class=\"line\">        <span class=\"built_in\">int</span> screenWidth = dm.widthPixels;</span><br><span class=\"line\"></span><br><span class=\"line\">        loanAndFeeList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        loanList = <span class=\"string\">\"800,1000,1600,200,300,500,700\"</span>.<span class=\"built_in\">split</span>(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\">        loanFeeList = <span class=\"string\">\"50,80,100,20,30,50,70\"</span>.<span class=\"built_in\">split</span>(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//求最大最小值 (为了保持RadioButton文字长度一致,跟最长的保持一致!)</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> <span class=\"built_in\">max</span> = Integer.parseInt(loanList[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"built_in\">int</span> <span class=\"built_in\">min</span> = Integer.parseInt(loanList[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">String</span> i : loanList) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> j = Integer.parseInt(i);</span><br><span class=\"line\">            <span class=\"built_in\">max</span> = <span class=\"built_in\">max</span> &gt; j ? <span class=\"built_in\">max</span> : j;</span><br><span class=\"line\">            <span class=\"built_in\">min</span> = <span class=\"built_in\">min</span> &lt; j ? <span class=\"built_in\">min</span> : j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">String</span> maxS = <span class=\"keyword\">String</span>.valueOf(<span class=\"built_in\">max</span>);</span><br><span class=\"line\">        <span class=\"built_in\">int</span> maxLen = maxS.length();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; loanList.length; i++) &#123;</span><br><span class=\"line\">            loanAndFeeList.<span class=\"built_in\">add</span>( loanList[i] + <span class=\"string\">\",\"</span> + loanFeeList[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        rgp = (RadioGroupAuto) findViewById(R.id.RadioGroup01);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">int</span> len = loanAndFeeList.<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; len; j++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            RadioButton radioButton = <span class=\"keyword\">new</span> RadioButton(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            radioButton.setPadding(<span class=\"number\">20</span>, <span class=\"number\">0</span>, screenWidth / <span class=\"number\">6</span>, <span class=\"number\">0</span>); <span class=\"comment\">// 设置文字距离按钮四周的距离</span></span><br><span class=\"line\">            radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">String</span> newLoanList = loanList[j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (loanList[j].length() &lt; maxLen) &#123;</span><br><span class=\"line\">                newLoanList = newLoanList + appendLength(maxLen - loanList[j].length());</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 实现 TextView同时显示两种风格文字 http://txlong-onz.iteye.com/blog/1142781</span></span><br><span class=\"line\">                SpannableStringBuilder sb = <span class=\"keyword\">new</span> SpannableStringBuilder(newLoanList);</span><br><span class=\"line\">                <span class=\"keyword\">final</span> ForegroundColorSpan fcs = <span class=\"keyword\">new</span> ForegroundColorSpan(Color.WHITE);</span><br><span class=\"line\">                sb.setSpan(fcs, loanList[j].length(), maxLen, Spannable.SPAN_INCLUSIVE_INCLUSIVE);</span><br><span class=\"line\">                radioButton.setText(sb);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                newLoanList = loanList[j];</span><br><span class=\"line\">                radioButton.setText(newLoanList);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tradioButton.setId(j); <span class=\"comment\">//设置RadioButton的id</span></span><br><span class=\"line\">            radioButton.setTag(loanAndFeeList.<span class=\"built_in\">get</span>(j));</span><br><span class=\"line\">            radioButton.setTextSize(<span class=\"number\">13</span>); <span class=\"comment\">//默认单位是 sp</span></span><br><span class=\"line\">            radioButton.setHeight(<span class=\"number\">50</span>); <span class=\"comment\">//默认单位是px</span></span><br><span class=\"line\">            rgp.addView(radioButton); <span class=\"comment\">//添加到RadioGroup中</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        rgp.setOnCheckedChangeListener(<span class=\"keyword\">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onCheckedChanged(RadioGroup group, <span class=\"built_in\">int</span> checkedId) &#123;</span><br><span class=\"line\">                RadioButton clickRadioButton = (RadioButton) group.findViewById(checkedId);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">String</span> tipInfo = <span class=\"string\">\"id: \"</span> + clickRadioButton.getId() + <span class=\"string\">\" text: \"</span> + clickRadioButton.getText() +</span><br><span class=\"line\">                        <span class=\"comment\">/*\"hint: \" + clickRadioButton.getHint() +*/</span> <span class=\"string\">\" tag:\"</span> + clickRadioButton.getTag();</span><br><span class=\"line\">                System.out.<span class=\"built_in\">println</span>(tipInfo);</span><br><span class=\"line\"></span><br><span class=\"line\">                Toast.makeText(CheckboxRadiobuttonDemo.<span class=\"keyword\">this</span>, tipInfo,</span><br><span class=\"line\">                        Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//根据这个来设置默认选中的项, 注意,这个要设置在监听之后!,否则默认点击监听不到!虽然有选中效果</span></span><br><span class=\"line\">        <span class=\"comment\">//参考 http://blog.csdn.net/lzqjfly/article/details/16963645</span></span><br><span class=\"line\">        <span class=\"comment\">//以及http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android</span></span><br><span class=\"line\">        rgp.check(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * 补全长度,保持最长的长度</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param count 字符串长度</span><br><span class=\"line\">     * @return 补全后的长度</span><br><span class=\"line\">     * 这里长度不够的就用 \"s\" 占位, 赋值的时候将字体设置白色!</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> appendLength(<span class=\"built_in\">int</span> count) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">String</span> st = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            st = st + <span class=\"string\">\"s\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> st;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结:\"></a>总结:</h2><p>碰到的问题: RadioGroup中RadioButton不能互斥<br>解决方法: 需要用<code>RadioGroup.check(id)</code>,来设置被默认选中的项，其中id为RadioButton的id，如果<code>动态添加的RadioButton</code>，需要设置好<code>id</code><br>参考:<a href=\"http://blog.csdn.net/lzqjfly/article/details/16963645\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/lzqjfly/article/details/16963645</a> , <a href=\"http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android</a></p>\n","excerpt":"<blockquote>\n<p>由于最近的项目中多处需要用到多行多列的RadioButton,而google原生的RadioGroup又不能实现!因此就要自己动手实现了~</p>\n</blockquote>\n<p><code>注意:</code><em>这里所说的RadioButton都是在代码中动态添加的!</em></p>\n<p>看下效果图:<br><img src=\"http://ww2.sinaimg.cn/mw1024/c05ae6b6gw1f6fkjnjio2j20b404ewed.jpg\" alt=\"实现多行多列的RadioButton\"><br>","more":"<br><img src=\"http://ww1.sinaimg.cn/mw1024/c05ae6b6gw1f6ga5gamz4j20ba047mx3.jpg\" alt=\"行列对齐RadioButton\"></p>\n<h2 id=\"开始造轮子-分为四步\"><a href=\"#开始造轮子-分为四步\" class=\"headerlink\" title=\"开始造轮子: 分为四步\"></a>开始造轮子: <em>分为四步</em></h2><h3 id=\"重写RadioGroup–-gt-目的是使-RadioButton可以自动换行\"><a href=\"#重写RadioGroup–-gt-目的是使-RadioButton可以自动换行\" class=\"headerlink\" title=\"重写RadioGroup–&gt;目的是使 RadioButton可以自动换行\"></a>重写RadioGroup–&gt;目的是使 RadioButton可以自动换行</h3><h3 id=\"布局中引用MyRadioGroupAuto\"><a href=\"#布局中引用MyRadioGroupAuto\" class=\"headerlink\" title=\"布局中引用MyRadioGroupAuto\"></a>布局中引用MyRadioGroupAuto</h3><h3 id=\"代码中根据数据动态添加RadioButton-然后MyRadioGroup通过addView把RadioButton加进去\"><a href=\"#代码中根据数据动态添加RadioButton-然后MyRadioGroup通过addView把RadioButton加进去\" class=\"headerlink\" title=\"代码中根据数据动态添加RadioButton,然后MyRadioGroup通过addView把RadioButton加进去\"></a>代码中根据数据动态添加RadioButton,然后MyRadioGroup通过<code>addView</code>把RadioButton加进去</h3><ul>\n<li>这里需要讲下RadioButton的<code>几个属性</code><ul>\n<li>radioButton.setPadding(20, 0, screenWidth / 6, 0);// 设置文字距离按钮图片四周的距离</li>\n<li>radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable); //点击效果</li>\n<li>radioButton.setTag(loanAndFeeList.get(i)); // 设置tag,可以存一些数据</li>\n<li>radioButton.setTextSize(13); //默认单位是 sp</li>\n<li>radioButton.setHeight(50); //默认单位是px</li>\n<li>RadioButton clickRadioButton = (RadioButton) radioGroup.findViewById(checkedId); //通过RadioGroup对象获取点击的RadioButton组件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"设置RadioGroup点击事件\"><a href=\"#设置RadioGroup点击事件\" class=\"headerlink\" title=\"设置RadioGroup点击事件\"></a>设置RadioGroup点击事件</h3><h2 id=\"下面直接上代码-三步\"><a href=\"#下面直接上代码-三步\" class=\"headerlink\" title=\"下面直接上代码: 三步\"></a>下面直接上代码: <em>三步</em></h2><h3 id=\"自定义MyRadioGroupAuto\"><a href=\"#自定义MyRadioGroupAuto\" class=\"headerlink\" title=\"自定义MyRadioGroupAuto\"></a>自定义MyRadioGroupAuto</h3><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Author: 0027008122 [yang.jianan@zte.com.cn]</span><br><span class=\"line\"> * Time: 2016-08-02 11:33</span><br><span class=\"line\"> * Version: 1.0</span><br><span class=\"line\"> * TaskId:</span><br><span class=\"line\"> * Description:</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span> class MyRadioGroupAuto extends RadioGroup &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> MyRadioGroupAuto(Context context) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MyRadioGroupAuto(Context context, AttributeSet attrs) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> onMeasure(<span class=\"built_in\">int</span> widthMeasureSpec, <span class=\"built_in\">int</span> heightMeasureSpec) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取最大宽度</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> maxWidth = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"comment\">//获取Group中的Child数量</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> childCount = getChildCount();</span><br><span class=\"line\">        <span class=\"comment\">//设置Group的左边距，下面也会使用x计算每行所占的宽度</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//设置Group的上边距，下面也会使用y计算Group所占的高度</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> y = <span class=\"number\">30</span>;</span><br><span class=\"line\">        <span class=\"comment\">//设置Group的行数</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> row = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> index = <span class=\"number\">0</span>; index &lt; childCount; index++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> View child = getChildAt(index);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (child.getVisibility() != View.GONE) &#123;</span><br><span class=\"line\">                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);</span><br><span class=\"line\">                <span class=\"comment\">//重新计算child的宽高</span></span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">width</span> = child.getMeasuredWidth();</span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">height</span> = child.getMeasuredHeight();</span><br><span class=\"line\">                <span class=\"comment\">//添加到X中，(width+10) 设置child左边距</span></span><br><span class=\"line\">                x += (<span class=\"built_in\">width</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"comment\">//行数*child高度+这次child高度=现在Group的高度,(height + 10)设置child上边距</span></span><br><span class=\"line\">                y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"comment\">//当前行宽X大于Group的最大宽度时，进行换行</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (x &gt; maxWidth) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//当index不为0时，进行row++，防止FirstChild出现大于maxWidth时,提前进行row++</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (index != <span class=\"number\">0</span>)</span><br><span class=\"line\">                        row++;</span><br><span class=\"line\">                    <span class=\"comment\">//child的width大于maxWidth时，重新设置child的width为最大宽度</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">width</span> &gt;= maxWidth) &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">width</span> = maxWidth - <span class=\"number\">30</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"comment\">//重新设置当前X</span></span><br><span class=\"line\">                    x = (<span class=\"built_in\">width</span> + <span class=\"number\">20</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//重新设置现在Group的高度</span></span><br><span class=\"line\">                    y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 设置容器所需的宽度和高度</span></span><br><span class=\"line\">        setMeasuredDimension(maxWidth, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> onLayout(<span class=\"built_in\">boolean</span> changed, <span class=\"built_in\">int</span> l, <span class=\"built_in\">int</span> t, <span class=\"built_in\">int</span> r, <span class=\"built_in\">int</span> b) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"built_in\">int</span> childCount = getChildCount();</span><br><span class=\"line\">        <span class=\"built_in\">int</span> maxWidth = r - l;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> x = <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> y = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> row = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; childCount; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> View child = <span class=\"keyword\">this</span>.getChildAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (child.getVisibility() != View.GONE) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">width</span> = child.getMeasuredWidth();</span><br><span class=\"line\">                <span class=\"built_in\">int</span> <span class=\"built_in\">height</span> = child.getMeasuredHeight();</span><br><span class=\"line\">                x += (<span class=\"built_in\">width</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (x &gt; maxWidth) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span>)</span><br><span class=\"line\">                        row++;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">width</span> &gt;= maxWidth) &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">width</span> = maxWidth - <span class=\"number\">30</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    x = (<span class=\"built_in\">width</span> + <span class=\"number\">20</span>);</span><br><span class=\"line\">                    y = row * (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>) + (<span class=\"built_in\">height</span> + <span class=\"number\">10</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                child.layout(x - <span class=\"built_in\">width</span>, y - <span class=\"built_in\">height</span>, x, y);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"布局中引用MyRadioGroupAuto-1\"><a href=\"#布局中引用MyRadioGroupAuto-1\" class=\"headerlink\" title=\"布局中引用MyRadioGroupAuto\"></a>布局中引用MyRadioGroupAuto</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com<span class=\"selector-class\">.ztesoft</span><span class=\"selector-class\">.zsmart</span><span class=\"selector-class\">.datamall</span><span class=\"selector-class\">.app</span><span class=\"selector-class\">.widget</span><span class=\"selector-class\">.MyRadioGroupAuto</span></span><br><span class=\"line\">        android:id=<span class=\"string\">\"@+id/my_radio_group_auto\"</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">\"wrap_content\"</span></span><br><span class=\"line\">        android:layout_marginBottom=<span class=\"string\">\"33dp\"</span></span><br><span class=\"line\">        android:layout_marginLeft=<span class=\"string\">\"22dp\"</span></span><br><span class=\"line\">        android:layout_marginRight=<span class=\"string\">\"22dp\"</span></span><br><span class=\"line\">        android:layout_marginTop=<span class=\"string\">\"16dp\"</span>&gt;</span><br><span class=\"line\">&lt;/com<span class=\"selector-class\">.ztesoft</span><span class=\"selector-class\">.zsmart</span><span class=\"selector-class\">.datamall</span><span class=\"selector-class\">.app</span><span class=\"selector-class\">.widget</span><span class=\"selector-class\">.MyRadioGroupAuto</span>&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码中动态添加RadioButton\"><a href=\"#代码中动态添加RadioButton\" class=\"headerlink\" title=\"代码中动态添加RadioButton\"></a>代码中动态添加RadioButton</h3><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> class CheckboxRadiobuttonDemo extends Activity &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * Called when the activity is first created.</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RadioGroupAuto rgp;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> RadioGroup yuansheng;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">String</span>[] loanList;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">String</span>[] loanFeeList;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">String</span>&gt; loanAndFeeList;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.main);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取屏幕信息</span></span><br><span class=\"line\">        DisplayMetrics dm = <span class=\"keyword\">new</span> DisplayMetrics();</span><br><span class=\"line\">        getWindowManager().getDefaultDisplay().getMetrics(dm);</span><br><span class=\"line\">        <span class=\"built_in\">int</span> screenWidth = dm.widthPixels;</span><br><span class=\"line\"></span><br><span class=\"line\">        loanAndFeeList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        loanList = <span class=\"string\">\"800,1000,1600,200,300,500,700\"</span>.<span class=\"built_in\">split</span>(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\">        loanFeeList = <span class=\"string\">\"50,80,100,20,30,50,70\"</span>.<span class=\"built_in\">split</span>(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//求最大最小值 (为了保持RadioButton文字长度一致,跟最长的保持一致!)</span></span><br><span class=\"line\">        <span class=\"built_in\">int</span> <span class=\"built_in\">max</span> = Integer.parseInt(loanList[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"built_in\">int</span> <span class=\"built_in\">min</span> = Integer.parseInt(loanList[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">String</span> i : loanList) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> j = Integer.parseInt(i);</span><br><span class=\"line\">            <span class=\"built_in\">max</span> = <span class=\"built_in\">max</span> &gt; j ? <span class=\"built_in\">max</span> : j;</span><br><span class=\"line\">            <span class=\"built_in\">min</span> = <span class=\"built_in\">min</span> &lt; j ? <span class=\"built_in\">min</span> : j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">String</span> maxS = <span class=\"keyword\">String</span>.valueOf(<span class=\"built_in\">max</span>);</span><br><span class=\"line\">        <span class=\"built_in\">int</span> maxLen = maxS.length();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; loanList.length; i++) &#123;</span><br><span class=\"line\">            loanAndFeeList.<span class=\"built_in\">add</span>( loanList[i] + <span class=\"string\">\",\"</span> + loanFeeList[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        rgp = (RadioGroupAuto) findViewById(R.id.RadioGroup01);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">int</span> len = loanAndFeeList.<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; len; j++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            RadioButton radioButton = <span class=\"keyword\">new</span> RadioButton(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            radioButton.setPadding(<span class=\"number\">20</span>, <span class=\"number\">0</span>, screenWidth / <span class=\"number\">6</span>, <span class=\"number\">0</span>); <span class=\"comment\">// 设置文字距离按钮四周的距离</span></span><br><span class=\"line\">            radioButton.setButtonDrawable(R.drawable.transfer_radiobutton_drawable);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">String</span> newLoanList = loanList[j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (loanList[j].length() &lt; maxLen) &#123;</span><br><span class=\"line\">                newLoanList = newLoanList + appendLength(maxLen - loanList[j].length());</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 实现 TextView同时显示两种风格文字 http://txlong-onz.iteye.com/blog/1142781</span></span><br><span class=\"line\">                SpannableStringBuilder sb = <span class=\"keyword\">new</span> SpannableStringBuilder(newLoanList);</span><br><span class=\"line\">                <span class=\"keyword\">final</span> ForegroundColorSpan fcs = <span class=\"keyword\">new</span> ForegroundColorSpan(Color.WHITE);</span><br><span class=\"line\">                sb.setSpan(fcs, loanList[j].length(), maxLen, Spannable.SPAN_INCLUSIVE_INCLUSIVE);</span><br><span class=\"line\">                radioButton.setText(sb);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                newLoanList = loanList[j];</span><br><span class=\"line\">                radioButton.setText(newLoanList);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tradioButton.setId(j); <span class=\"comment\">//设置RadioButton的id</span></span><br><span class=\"line\">            radioButton.setTag(loanAndFeeList.<span class=\"built_in\">get</span>(j));</span><br><span class=\"line\">            radioButton.setTextSize(<span class=\"number\">13</span>); <span class=\"comment\">//默认单位是 sp</span></span><br><span class=\"line\">            radioButton.setHeight(<span class=\"number\">50</span>); <span class=\"comment\">//默认单位是px</span></span><br><span class=\"line\">            rgp.addView(radioButton); <span class=\"comment\">//添加到RadioGroup中</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        rgp.setOnCheckedChangeListener(<span class=\"keyword\">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> onCheckedChanged(RadioGroup group, <span class=\"built_in\">int</span> checkedId) &#123;</span><br><span class=\"line\">                RadioButton clickRadioButton = (RadioButton) group.findViewById(checkedId);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">String</span> tipInfo = <span class=\"string\">\"id: \"</span> + clickRadioButton.getId() + <span class=\"string\">\" text: \"</span> + clickRadioButton.getText() +</span><br><span class=\"line\">                        <span class=\"comment\">/*\"hint: \" + clickRadioButton.getHint() +*/</span> <span class=\"string\">\" tag:\"</span> + clickRadioButton.getTag();</span><br><span class=\"line\">                System.out.<span class=\"built_in\">println</span>(tipInfo);</span><br><span class=\"line\"></span><br><span class=\"line\">                Toast.makeText(CheckboxRadiobuttonDemo.<span class=\"keyword\">this</span>, tipInfo,</span><br><span class=\"line\">                        Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//根据这个来设置默认选中的项, 注意,这个要设置在监听之后!,否则默认点击监听不到!虽然有选中效果</span></span><br><span class=\"line\">        <span class=\"comment\">//参考 http://blog.csdn.net/lzqjfly/article/details/16963645</span></span><br><span class=\"line\">        <span class=\"comment\">//以及http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android</span></span><br><span class=\"line\">        rgp.check(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span><br><span class=\"line\">     * 补全长度,保持最长的长度</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param count 字符串长度</span><br><span class=\"line\">     * @return 补全后的长度</span><br><span class=\"line\">     * 这里长度不够的就用 \"s\" 占位, 赋值的时候将字体设置白色!</span><br><span class=\"line\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> appendLength(<span class=\"built_in\">int</span> count) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">String</span> st = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            st = st + <span class=\"string\">\"s\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> st;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结:\"></a>总结:</h2><p>碰到的问题: RadioGroup中RadioButton不能互斥<br>解决方法: 需要用<code>RadioGroup.check(id)</code>,来设置被默认选中的项，其中id为RadioButton的id，如果<code>动态添加的RadioButton</code>，需要设置好<code>id</code><br>参考:<a href=\"http://blog.csdn.net/lzqjfly/article/details/16963645\">http://blog.csdn.net/lzqjfly/article/details/16963645</a> , <a href=\"http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android\">http://stackoverflow.com/questions/9175635/how-to-set-radio-button-checked-as-default-in-radiogroup-with-android</a></p>"},{"title":"开源项目收集","date":"2016-09-14T03:39:56.000Z","top":12,"_content":"1. http://osplus.cc/android\n\t- QQ上拉弹出键盘 [AndroidKeyboardListener](https://github.com/zzzlw/AndroidKeyboardListener)\n\t- 各种下拉效果[SpringView](https://github.com/liaoinstan/SpringView)(美图,QQ网页下拉等等)\n\t- 等等...\n2. 印象笔记(目前不对外公布)\n3. 收集中(鸿洋,郭霖微信博客都可以关注下)...\n4. 滴滴滴~~~来不及解释了! 快上车!","source":"_posts/开源项目收集.md","raw":"---\ntitle: 开源项目收集\ndate: 2016-09-14 11:39:56\ntags: 开源收集\ncategories: 开源项目\ntop: 12\n---\n1. http://osplus.cc/android\n\t- QQ上拉弹出键盘 [AndroidKeyboardListener](https://github.com/zzzlw/AndroidKeyboardListener)\n\t- 各种下拉效果[SpringView](https://github.com/liaoinstan/SpringView)(美图,QQ网页下拉等等)\n\t- 等等...\n2. 印象笔记(目前不对外公布)\n3. 收集中(鸿洋,郭霖微信博客都可以关注下)...\n4. 滴滴滴~~~来不及解释了! 快上车!","slug":"开源项目收集","published":1,"updated":"2016-09-14T03:48:13.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfze001rgwagkbmopmk5","content":"<ol>\n<li><a href=\"http://osplus.cc/android\" target=\"_blank\" rel=\"external\">http://osplus.cc/android</a><ul>\n<li>QQ上拉弹出键盘 <a href=\"https://github.com/zzzlw/AndroidKeyboardListener\" target=\"_blank\" rel=\"external\">AndroidKeyboardListener</a></li>\n<li>各种下拉效果<a href=\"https://github.com/liaoinstan/SpringView\" target=\"_blank\" rel=\"external\">SpringView</a>(美图,QQ网页下拉等等)</li>\n<li>等等…</li>\n</ul>\n</li>\n<li>印象笔记(目前不对外公布)</li>\n<li>收集中(鸿洋,郭霖微信博客都可以关注下)…</li>\n<li>滴滴滴~~~来不及解释了! 快上车!</li>\n</ol>\n","excerpt":"","more":"<ol>\n<li><a href=\"http://osplus.cc/android\">http://osplus.cc/android</a><ul>\n<li>QQ上拉弹出键盘 <a href=\"https://github.com/zzzlw/AndroidKeyboardListener\">AndroidKeyboardListener</a></li>\n<li>各种下拉效果<a href=\"https://github.com/liaoinstan/SpringView\">SpringView</a>(美图,QQ网页下拉等等)</li>\n<li>等等…</li>\n</ul>\n</li>\n<li>印象笔记(目前不对外公布)</li>\n<li>收集中(鸿洋,郭霖微信博客都可以关注下)…</li>\n<li>滴滴滴~~~来不及解释了! 快上车!</li>\n</ol>\n"},{"title":"技术文档收集","date":"2015-04-15T04:39:08.000Z","_content":"\n1. [给 Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083#toc_1) by [`扔物线`](https://github.com/rengwuxian)\n2. 印象笔记\n3. collecting...\n4. 友情链接也有许多大神\n5. 使用CheckStyle检查代码(http://gudong.name/2016/04/07/checkstyle.html)","source":"_posts/技术文档收集.md","raw":"---\ntitle: 技术文档收集\ndate: 2015-04-15 12:39:08\ntags: 文档\ncategories: 技术文档\n---\n\n1. [给 Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083#toc_1) by [`扔物线`](https://github.com/rengwuxian)\n2. 印象笔记\n3. collecting...\n4. 友情链接也有许多大神\n5. 使用CheckStyle检查代码(http://gudong.name/2016/04/07/checkstyle.html)","slug":"技术文档收集","published":1,"updated":"2016-08-04T07:36:39.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfzh001ugwagpi9v4q6q","content":"<ol>\n<li><a href=\"http://gank.io/post/560e15be2dca930e00da1083#toc_1\" target=\"_blank\" rel=\"external\">给 Android 开发者的 RxJava 详解</a> by <a href=\"https://github.com/rengwuxian\" target=\"_blank\" rel=\"external\"><code>扔物线</code></a></li>\n<li>印象笔记</li>\n<li>collecting…</li>\n<li>友情链接也有许多大神</li>\n<li>使用CheckStyle检查代码(<a href=\"http://gudong.name/2016/04/07/checkstyle.html\" target=\"_blank\" rel=\"external\">http://gudong.name/2016/04/07/checkstyle.html</a>)</li>\n</ol>\n","excerpt":"","more":"<ol>\n<li><a href=\"http://gank.io/post/560e15be2dca930e00da1083#toc_1\">给 Android 开发者的 RxJava 详解</a> by <a href=\"https://github.com/rengwuxian\"><code>扔物线</code></a></li>\n<li>印象笔记</li>\n<li>collecting…</li>\n<li>友情链接也有许多大神</li>\n<li>使用CheckStyle检查代码(<a href=\"http://gudong.name/2016/04/07/checkstyle.html\">http://gudong.name/2016/04/07/checkstyle.html</a>)</li>\n</ol>\n"},{"title":"承载着回忆","date":"2016-05-22T03:28:07.000Z","comments":1,"top":11,"_content":"\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=461436212&auto=0&height=430\"></iframe>","source":"_posts/网易music_剑三.md","raw":"---\ntitle: 承载着回忆\ndate: 2016-05-22 11:28:07\ncomments: true\ncategories: Music\ntop: 11\n---\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=461436212&auto=0&height=430\"></iframe>","slug":"网易music_剑三","published":1,"updated":"2016-09-10T02:35:14.886Z","layout":"post","photos":[],"link":"","_id":"citbcwfzl001xgwaghxn85t1w","content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=0&id=461436212&auto=0&height=430\"></iframe>","excerpt":"","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=461436212&auto=0&height=430\"></iframe>"},{"title":"自定义Button(图文居中)","date":"2015-04-29T05:39:56.000Z","_content":"\n>首先看下 **效果**\n\n![带图片箭头的按钮](http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3dxjw0a3aj208601ft8j.jpg)\n`核心代码:`\n<!-- more -->\n```\npackage com.ztesoft.zsmart.datamall.app.widget;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.Drawable;\nimport android.util.AttributeSet;\nimport android.widget.Button;\n\n/**\n * Description: 自定义Button(图文居中)\n * Author: 0027008122 [yang.jianan@zte.com.cn]\n * Time: 2016/1/26 14:21\n * Version: 1.0\n */\npublic class DrawableCenterButton extends Button{\n\n    public DrawableCenterButton(Context context) {\n        super(context);\n        // TODO Auto-generated constructor stub\n    }\n\n    public DrawableCenterButton(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    public DrawableCenterButton(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        Drawable[] drawables = getCompoundDrawables();\n        if (drawables != null) {\n            Drawable drawableLeft = drawables[2];\n            if (drawableLeft != null) {\n                float textWidth = getPaint().measureText(getText().toString());\n                int drawablePadding = getCompoundDrawablePadding();\n                int drawableWidth = 0;\n                drawableWidth = drawableLeft.getIntrinsicWidth();\n                // 20 是偏移量,不加,长文本会折行\n                float bodyWidth = textWidth + 20 + drawableWidth + drawablePadding;\n                setPadding(0, 0, (int)(getWidth() - bodyWidth), 0);\n                canvas.translate((getWidth() - bodyWidth) / 2, 0);\n            }\n        }\n        super.onDraw(canvas);\n    }\n}\n\n```\n","source":"_posts/自定义Button(图文居中).md","raw":"---\ntitle: 自定义Button(图文居中)\ndate: 2015-04-29 13:39:56\ntags: [Android,自定义View]\ncategories: Android\n---\n\n>首先看下 **效果**\n\n![带图片箭头的按钮](http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3dxjw0a3aj208601ft8j.jpg)\n`核心代码:`\n<!-- more -->\n```\npackage com.ztesoft.zsmart.datamall.app.widget;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.Drawable;\nimport android.util.AttributeSet;\nimport android.widget.Button;\n\n/**\n * Description: 自定义Button(图文居中)\n * Author: 0027008122 [yang.jianan@zte.com.cn]\n * Time: 2016/1/26 14:21\n * Version: 1.0\n */\npublic class DrawableCenterButton extends Button{\n\n    public DrawableCenterButton(Context context) {\n        super(context);\n        // TODO Auto-generated constructor stub\n    }\n\n    public DrawableCenterButton(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    public DrawableCenterButton(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        Drawable[] drawables = getCompoundDrawables();\n        if (drawables != null) {\n            Drawable drawableLeft = drawables[2];\n            if (drawableLeft != null) {\n                float textWidth = getPaint().measureText(getText().toString());\n                int drawablePadding = getCompoundDrawablePadding();\n                int drawableWidth = 0;\n                drawableWidth = drawableLeft.getIntrinsicWidth();\n                // 20 是偏移量,不加,长文本会折行\n                float bodyWidth = textWidth + 20 + drawableWidth + drawablePadding;\n                setPadding(0, 0, (int)(getWidth() - bodyWidth), 0);\n                canvas.translate((getWidth() - bodyWidth) / 2, 0);\n            }\n        }\n        super.onDraw(canvas);\n    }\n}\n\n```\n","slug":"自定义Button(图文居中)","published":1,"updated":"2016-07-15T06:44:13.094Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfzq0022gwagf0ti0imq","content":"<blockquote>\n<p>首先看下 <strong>效果</strong></p>\n</blockquote>\n<p><img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3dxjw0a3aj208601ft8j.jpg\" alt=\"带图片箭头的按钮\"><br><code>核心代码:</code><br><a id=\"more\"></a><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ztesoft.zsmart.datamall.app.widget;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.graphics.Canvas;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.Drawable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.AttributeSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Button;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Description: 自定义Button(图文居中)</span><br><span class=\"line\"> * Author: 0027008122 [yang.jianan@zte.com.cn]</span><br><span class=\"line\"> * Time: 2016/1/26 14:21</span><br><span class=\"line\"> * Version: 1.0</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawableCenterButton</span> <span class=\"keyword\">extends</span> <span class=\"title\">Button</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawableCenterButton</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated constructor stub</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawableCenterButton</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawableCenterButton</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        Drawable[] drawables = getCompoundDrawables();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (drawables != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            Drawable drawableLeft = drawables[<span class=\"number\">2</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (drawableLeft != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> textWidth = getPaint().measureText(getText().toString());</span><br><span class=\"line\">                <span class=\"keyword\">int</span> drawablePadding = getCompoundDrawablePadding();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> drawableWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">                drawableWidth = drawableLeft.getIntrinsicWidth();</span><br><span class=\"line\">                <span class=\"comment\">// 20 是偏移量,不加,长文本会折行</span></span><br><span class=\"line\">                <span class=\"keyword\">float</span> bodyWidth = textWidth + <span class=\"number\">20</span> + drawableWidth + drawablePadding;</span><br><span class=\"line\">                setPadding(<span class=\"number\">0</span>, <span class=\"number\">0</span>, (<span class=\"keyword\">int</span>)(getWidth() - bodyWidth), <span class=\"number\">0</span>);</span><br><span class=\"line\">                canvas.translate((getWidth() - bodyWidth) / <span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<blockquote>\n<p>首先看下 <strong>效果</strong></p>\n</blockquote>\n<p><img src=\"http://ww4.sinaimg.cn/mw690/c05ae6b6gw1f3dxjw0a3aj208601ft8j.jpg\" alt=\"带图片箭头的按钮\"><br><code>核心代码:</code><br>","more":"<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ztesoft.zsmart.datamall.app.widget;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.graphics.Canvas;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.Drawable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.AttributeSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Button;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Description: 自定义Button(图文居中)</span><br><span class=\"line\"> * Author: 0027008122 [yang.jianan@zte.com.cn]</span><br><span class=\"line\"> * Time: 2016/1/26 14:21</span><br><span class=\"line\"> * Version: 1.0</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawableCenterButton</span> <span class=\"keyword\">extends</span> <span class=\"title\">Button</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawableCenterButton</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated constructor stub</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawableCenterButton</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawableCenterButton</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        Drawable[] drawables = getCompoundDrawables();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (drawables != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            Drawable drawableLeft = drawables[<span class=\"number\">2</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (drawableLeft != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> textWidth = getPaint().measureText(getText().toString());</span><br><span class=\"line\">                <span class=\"keyword\">int</span> drawablePadding = getCompoundDrawablePadding();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> drawableWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">                drawableWidth = drawableLeft.getIntrinsicWidth();</span><br><span class=\"line\">                <span class=\"comment\">// 20 是偏移量,不加,长文本会折行</span></span><br><span class=\"line\">                <span class=\"keyword\">float</span> bodyWidth = textWidth + <span class=\"number\">20</span> + drawableWidth + drawablePadding;</span><br><span class=\"line\">                setPadding(<span class=\"number\">0</span>, <span class=\"number\">0</span>, (<span class=\"keyword\">int</span>)(getWidth() - bodyWidth), <span class=\"number\">0</span>);</span><br><span class=\"line\">                canvas.translate((getWidth() - bodyWidth) / <span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"high起来","date":"2016-05-22T03:28:07.000Z","comments":1,"_content":"\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=123398028&auto=0&height=430\"></iframe>","source":"_posts/网易music-2016-5-22.md","raw":"---\ntitle: high起来\ndate: 2016-05-22 11:28:07\ncomments: true\ncategories: Music\n---\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=123398028&auto=0&height=430\"></iframe>","slug":"网易music-2016-5-22","published":1,"updated":"2016-07-15T06:59:11.044Z","layout":"post","photos":[],"link":"","_id":"citbcwfzu0025gwagw5cd1vge","content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=0&id=123398028&auto=0&height=430\"></iframe>","excerpt":"","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=123398028&auto=0&height=430\"></iframe>"},{"title":"酷炫的android dialog弹出框","date":"2015-04-29T05:52:49.000Z","_content":"基于github开源框架基础上运用在自己的项目中,\n`效果如下`:\n![弹出框动图](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3dxm8t071g20cm0jqnpd.gif)\n<!-- more -->\n本演示项目 基于`Android Studio`开发,\n在对应`moudle`下的`gradle.build`中添加以下依赖\n```\ncompile 'com.nineoldandroids:library:2.4.0' \ncompile 'com.github.sd6352051.niftydialogeffects:niftydialogeffects:1.0.0@aar'\n```\n`核心代码`列出:\n\n> effect是样式(具体要根据需求来)\n\n``` \n\tString []type = {\"Fadein\", \"Slideleft\", \"Slidetop\", \"SlideBottom\", \"Slideright\", \"Fall\", \"Newspager\", \"Fliph\", \"Flipv\", \"RotateBottom\", \"RotateLeft\", \"Slit\", \"Shake\", \"Sidefill\"};\n            int i= (int) (type.length*Math.random());\n            Effectstype effect = null;\n            switch (i){\n                case 0:effect=Effectstype.Fadein;break;\n                case 1:effect=Effectstype.Slideright;break;\n                case 2:effect=Effectstype.Slideleft;break;\n                case 3:effect=Effectstype.Slidetop;break;\n                case 4:effect=Effectstype.SlideBottom;break;\n                case 5:effect=Effectstype.Newspager;break;\n                case 6:effect=Effectstype.Fall;break;\n                case 7:effect=Effectstype.Sidefill;break;\n                case 8:effect=Effectstype.Fliph;break;\n                case 9:effect=Effectstype.Flipv;break;\n                case 10:effect=Effectstype.RotateBottom;break;\n                case 11:effect=Effectstype.RotateLeft;break;\n                case 12:effect=Effectstype.Slit;break;\n                case 13:effect=Effectstype.Shake;break;\n            }\n```\n\n\n> 弹出框核心如下\n\n```\n    final NiftyDialogBuilder dialogBuilder = NiftyDialogBuilder.getInstance(this);\n\n            dialogBuilder\n                    // 重点设置\n                    .withEffect(effect)        //设置对话框弹出样式\n                    //.setCustomView(R.layout.custom, MainActivity.this) // 设置自定义对话框的布局\n                    .withDuration(700)              //动画显现的时间（时间长就类似放慢动作）\n\n                    // 基本设置\n                    .withTitle(\"Info\")         //设置对话框标题\n                    .withTitleColor(\"#FFFFFF\")          //设置标题字体颜色\n                    .withDividerColor(\"#11000000\")      //设置分隔线的颜色\n                    .withMessage(\"Are you sure logout?\")//设置对话框显示内容\n                    .withMessageColor(\"#FFFFFFFF\")       //设置消息字体的颜色\n                    .withDialogColor(\"#FFE74C3C\")        //设置对话框背景的颜色\n                    //.withIcon(getResources().getDrawable(R.drawable.logo)) //设置标题的图标\n                    // 设置是否模态，默认false，表示模态，\n                    //要求必须采取行动才能继续进行剩下的操作 | isCancelable(true)\n                    .isCancelableOnTouchOutside(true)\n                    .withButton1Text(\"Yes\")               //设置按钮1的文本\n                    .withButton2Text(\"No\")          //设置按钮2的文本\n\n                    .setButton1Click(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View v) {\n                            Toast.makeText(v.getContext(), \"I am btnYes\", Toast.LENGTH_SHORT).show();\n                            dialogBuilder.dismiss();\n                        }\n                    })\n                    .setButton2Click(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View v) {\n                            Toast.makeText(v.getContext(), \"I am btnNo\", Toast.LENGTH_SHORT).show();\n                            dialogBuilder.dismiss();\n                        }\n                    })\n                    .show();\n```\n\napp [demo](http://fir.im/NiftyDialog)下载地址: [http://fir.im/NiftyDialog](http://fir.im/NiftyDialog)","source":"_posts/酷炫的android-dialog弹出框.md","raw":"---\ntitle: 酷炫的android dialog弹出框\ndate: 2015-04-29 13:52:49\ntags: [Android,Gradle]\ncategories: Android\n---\n基于github开源框架基础上运用在自己的项目中,\n`效果如下`:\n![弹出框动图](http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3dxm8t071g20cm0jqnpd.gif)\n<!-- more -->\n本演示项目 基于`Android Studio`开发,\n在对应`moudle`下的`gradle.build`中添加以下依赖\n```\ncompile 'com.nineoldandroids:library:2.4.0' \ncompile 'com.github.sd6352051.niftydialogeffects:niftydialogeffects:1.0.0@aar'\n```\n`核心代码`列出:\n\n> effect是样式(具体要根据需求来)\n\n``` \n\tString []type = {\"Fadein\", \"Slideleft\", \"Slidetop\", \"SlideBottom\", \"Slideright\", \"Fall\", \"Newspager\", \"Fliph\", \"Flipv\", \"RotateBottom\", \"RotateLeft\", \"Slit\", \"Shake\", \"Sidefill\"};\n            int i= (int) (type.length*Math.random());\n            Effectstype effect = null;\n            switch (i){\n                case 0:effect=Effectstype.Fadein;break;\n                case 1:effect=Effectstype.Slideright;break;\n                case 2:effect=Effectstype.Slideleft;break;\n                case 3:effect=Effectstype.Slidetop;break;\n                case 4:effect=Effectstype.SlideBottom;break;\n                case 5:effect=Effectstype.Newspager;break;\n                case 6:effect=Effectstype.Fall;break;\n                case 7:effect=Effectstype.Sidefill;break;\n                case 8:effect=Effectstype.Fliph;break;\n                case 9:effect=Effectstype.Flipv;break;\n                case 10:effect=Effectstype.RotateBottom;break;\n                case 11:effect=Effectstype.RotateLeft;break;\n                case 12:effect=Effectstype.Slit;break;\n                case 13:effect=Effectstype.Shake;break;\n            }\n```\n\n\n> 弹出框核心如下\n\n```\n    final NiftyDialogBuilder dialogBuilder = NiftyDialogBuilder.getInstance(this);\n\n            dialogBuilder\n                    // 重点设置\n                    .withEffect(effect)        //设置对话框弹出样式\n                    //.setCustomView(R.layout.custom, MainActivity.this) // 设置自定义对话框的布局\n                    .withDuration(700)              //动画显现的时间（时间长就类似放慢动作）\n\n                    // 基本设置\n                    .withTitle(\"Info\")         //设置对话框标题\n                    .withTitleColor(\"#FFFFFF\")          //设置标题字体颜色\n                    .withDividerColor(\"#11000000\")      //设置分隔线的颜色\n                    .withMessage(\"Are you sure logout?\")//设置对话框显示内容\n                    .withMessageColor(\"#FFFFFFFF\")       //设置消息字体的颜色\n                    .withDialogColor(\"#FFE74C3C\")        //设置对话框背景的颜色\n                    //.withIcon(getResources().getDrawable(R.drawable.logo)) //设置标题的图标\n                    // 设置是否模态，默认false，表示模态，\n                    //要求必须采取行动才能继续进行剩下的操作 | isCancelable(true)\n                    .isCancelableOnTouchOutside(true)\n                    .withButton1Text(\"Yes\")               //设置按钮1的文本\n                    .withButton2Text(\"No\")          //设置按钮2的文本\n\n                    .setButton1Click(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View v) {\n                            Toast.makeText(v.getContext(), \"I am btnYes\", Toast.LENGTH_SHORT).show();\n                            dialogBuilder.dismiss();\n                        }\n                    })\n                    .setButton2Click(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View v) {\n                            Toast.makeText(v.getContext(), \"I am btnNo\", Toast.LENGTH_SHORT).show();\n                            dialogBuilder.dismiss();\n                        }\n                    })\n                    .show();\n```\n\napp [demo](http://fir.im/NiftyDialog)下载地址: [http://fir.im/NiftyDialog](http://fir.im/NiftyDialog)","slug":"酷炫的android-dialog弹出框","published":1,"updated":"2016-07-15T06:44:05.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbcwfzy0029gwagofsks3q8","content":"<p>基于github开源框架基础上运用在自己的项目中,<br><code>效果如下</code>:<br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3dxm8t071g20cm0jqnpd.gif\" alt=\"弹出框动图\"><br><a id=\"more\"></a><br>本演示项目 基于<code>Android Studio</code>开发,<br>在对应<code>moudle</code>下的<code>gradle.build</code>中添加以下依赖<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.nineoldandroids:library:2.4.0'</span> </span><br><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.github.sd6352051.niftydialogeffects:niftydialogeffects:1.0.0@aar'</span></span><br></pre></td></tr></table></figure></p>\n<p><code>核心代码</code>列出:</p>\n<blockquote>\n<p>effect是样式(具体要根据需求来)</p>\n</blockquote>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String []type = &#123;<span class=\"string\">\"Fadein\"</span>, <span class=\"string\">\"Slideleft\"</span>, <span class=\"string\">\"Slidetop\"</span>, <span class=\"string\">\"SlideBottom\"</span>, <span class=\"string\">\"Slideright\"</span>, <span class=\"string\">\"Fall\"</span>, <span class=\"string\">\"Newspager\"</span>, <span class=\"string\">\"Fliph\"</span>, <span class=\"string\">\"Flipv\"</span>, <span class=\"string\">\"RotateBottom\"</span>, <span class=\"string\">\"RotateLeft\"</span>, <span class=\"string\">\"Slit\"</span>, <span class=\"string\">\"Shake\"</span>, <span class=\"string\">\"Sidefill\"</span>&#125;;</span><br><span class=\"line\">           int i= (int) (type.length*Math.random());</span><br><span class=\"line\">           Effectstype effect = null;</span><br><span class=\"line\">           switch (i)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">0</span><span class=\"symbol\">:effect=Effectstype</span>.Fadein;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">1</span><span class=\"symbol\">:effect=Effectstype</span>.Slideright;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">2</span><span class=\"symbol\">:effect=Effectstype</span>.Slideleft;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">3</span><span class=\"symbol\">:effect=Effectstype</span>.Slidetop;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">4</span><span class=\"symbol\">:effect=Effectstype</span>.SlideBottom;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">5</span><span class=\"symbol\">:effect=Effectstype</span>.Newspager;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">6</span><span class=\"symbol\">:effect=Effectstype</span>.Fall;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">7</span><span class=\"symbol\">:effect=Effectstype</span>.Sidefill;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">8</span><span class=\"symbol\">:effect=Effectstype</span>.Fliph;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">9</span><span class=\"symbol\">:effect=Effectstype</span>.Flipv;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">10</span><span class=\"symbol\">:effect=Effectstype</span>.RotateBottom;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">11</span><span class=\"symbol\">:effect=Effectstype</span>.RotateLeft;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">12</span><span class=\"symbol\">:effect=Effectstype</span>.Slit;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">13</span><span class=\"symbol\">:effect=Effectstype</span>.Shake;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">           &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>弹出框核心如下</p>\n</blockquote>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> NiftyDialogBuilder dialogBuilder = NiftyDialogBuilder.getInstance(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        dialogBuilder</span><br><span class=\"line\">                <span class=\"comment\">// 重点设置</span></span><br><span class=\"line\">                .withEffect(effect)        <span class=\"comment\">//设置对话框弹出样式</span></span><br><span class=\"line\">                <span class=\"comment\">//.setCustomView(R.layout.custom, MainActivity.this) // 设置自定义对话框的布局</span></span><br><span class=\"line\">                .withDuration(<span class=\"number\">700</span>)              <span class=\"comment\">//动画显现的时间（时间长就类似放慢动作）</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 基本设置</span></span><br><span class=\"line\">                .withTitle(<span class=\"string\">\"Info\"</span>)         <span class=\"comment\">//设置对话框标题</span></span><br><span class=\"line\">                .withTitleColor(<span class=\"string\">\"#FFFFFF\"</span>)          <span class=\"comment\">//设置标题字体颜色</span></span><br><span class=\"line\">                .withDividerColor(<span class=\"string\">\"#11000000\"</span>)      <span class=\"comment\">//设置分隔线的颜色</span></span><br><span class=\"line\">                .withMessage(<span class=\"string\">\"Are you sure logout?\"</span>)<span class=\"comment\">//设置对话框显示内容</span></span><br><span class=\"line\">                .withMessageColor(<span class=\"string\">\"#FFFFFFFF\"</span>)       <span class=\"comment\">//设置消息字体的颜色</span></span><br><span class=\"line\">                .withDialogColor(<span class=\"string\">\"#FFE74C3C\"</span>)        <span class=\"comment\">//设置对话框背景的颜色</span></span><br><span class=\"line\">                <span class=\"comment\">//.withIcon(getResources().getDrawable(R.drawable.logo)) //设置标题的图标</span></span><br><span class=\"line\">                <span class=\"comment\">// 设置是否模态，默认false，表示模态，</span></span><br><span class=\"line\">                <span class=\"comment\">//要求必须采取行动才能继续进行剩下的操作 | isCancelable(true)</span></span><br><span class=\"line\">                .isCancelableOnTouchOutside(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">                .withButton1Text(<span class=\"string\">\"Yes\"</span>)               <span class=\"comment\">//设置按钮1的文本</span></span><br><span class=\"line\">                .withButton2Text(<span class=\"string\">\"No\"</span>)          <span class=\"comment\">//设置按钮2的文本</span></span><br><span class=\"line\"></span><br><span class=\"line\">                .setButton1Click(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                        Toast.makeText(v.getContext(), <span class=\"string\">\"I am btnYes\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">                        dialogBuilder.dismiss();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .setButton2Click(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                        Toast.makeText(v.getContext(), <span class=\"string\">\"I am btnNo\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">                        dialogBuilder.dismiss();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .show();</span><br></pre></td></tr></table></figure>\n<p>app <a href=\"http://fir.im/NiftyDialog\" target=\"_blank\" rel=\"external\">demo</a>下载地址: <a href=\"http://fir.im/NiftyDialog\" target=\"_blank\" rel=\"external\">http://fir.im/NiftyDialog</a></p>\n","excerpt":"<p>基于github开源框架基础上运用在自己的项目中,<br><code>效果如下</code>:<br><img src=\"http://ww2.sinaimg.cn/mw690/c05ae6b6gw1f3dxm8t071g20cm0jqnpd.gif\" alt=\"弹出框动图\"><br>","more":"<br>本演示项目 基于<code>Android Studio</code>开发,<br>在对应<code>moudle</code>下的<code>gradle.build</code>中添加以下依赖<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.nineoldandroids:library:2.4.0'</span> </span><br><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.github.sd6352051.niftydialogeffects:niftydialogeffects:1.0.0@aar'</span></span><br></pre></td></tr></table></figure></p>\n<p><code>核心代码</code>列出:</p>\n<blockquote>\n<p>effect是样式(具体要根据需求来)</p>\n</blockquote>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String []type = &#123;<span class=\"string\">\"Fadein\"</span>, <span class=\"string\">\"Slideleft\"</span>, <span class=\"string\">\"Slidetop\"</span>, <span class=\"string\">\"SlideBottom\"</span>, <span class=\"string\">\"Slideright\"</span>, <span class=\"string\">\"Fall\"</span>, <span class=\"string\">\"Newspager\"</span>, <span class=\"string\">\"Fliph\"</span>, <span class=\"string\">\"Flipv\"</span>, <span class=\"string\">\"RotateBottom\"</span>, <span class=\"string\">\"RotateLeft\"</span>, <span class=\"string\">\"Slit\"</span>, <span class=\"string\">\"Shake\"</span>, <span class=\"string\">\"Sidefill\"</span>&#125;;</span><br><span class=\"line\">           int i= (int) (type.length*Math.random());</span><br><span class=\"line\">           Effectstype effect = null;</span><br><span class=\"line\">           switch (i)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">0</span><span class=\"symbol\">:effect=Effectstype</span>.Fadein;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">1</span><span class=\"symbol\">:effect=Effectstype</span>.Slideright;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">2</span><span class=\"symbol\">:effect=Effectstype</span>.Slideleft;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">3</span><span class=\"symbol\">:effect=Effectstype</span>.Slidetop;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">4</span><span class=\"symbol\">:effect=Effectstype</span>.SlideBottom;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">5</span><span class=\"symbol\">:effect=Effectstype</span>.Newspager;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">6</span><span class=\"symbol\">:effect=Effectstype</span>.Fall;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">7</span><span class=\"symbol\">:effect=Effectstype</span>.Sidefill;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">8</span><span class=\"symbol\">:effect=Effectstype</span>.Fliph;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">9</span><span class=\"symbol\">:effect=Effectstype</span>.Flipv;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">10</span><span class=\"symbol\">:effect=Effectstype</span>.RotateBottom;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">11</span><span class=\"symbol\">:effect=Effectstype</span>.RotateLeft;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">12</span><span class=\"symbol\">:effect=Effectstype</span>.Slit;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">               <span class=\"keyword\">case</span> <span class=\"number\">13</span><span class=\"symbol\">:effect=Effectstype</span>.Shake;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">           &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>弹出框核心如下</p>\n</blockquote>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> NiftyDialogBuilder dialogBuilder = NiftyDialogBuilder.getInstance(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        dialogBuilder</span><br><span class=\"line\">                <span class=\"comment\">// 重点设置</span></span><br><span class=\"line\">                .withEffect(effect)        <span class=\"comment\">//设置对话框弹出样式</span></span><br><span class=\"line\">                <span class=\"comment\">//.setCustomView(R.layout.custom, MainActivity.this) // 设置自定义对话框的布局</span></span><br><span class=\"line\">                .withDuration(<span class=\"number\">700</span>)              <span class=\"comment\">//动画显现的时间（时间长就类似放慢动作）</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 基本设置</span></span><br><span class=\"line\">                .withTitle(<span class=\"string\">\"Info\"</span>)         <span class=\"comment\">//设置对话框标题</span></span><br><span class=\"line\">                .withTitleColor(<span class=\"string\">\"#FFFFFF\"</span>)          <span class=\"comment\">//设置标题字体颜色</span></span><br><span class=\"line\">                .withDividerColor(<span class=\"string\">\"#11000000\"</span>)      <span class=\"comment\">//设置分隔线的颜色</span></span><br><span class=\"line\">                .withMessage(<span class=\"string\">\"Are you sure logout?\"</span>)<span class=\"comment\">//设置对话框显示内容</span></span><br><span class=\"line\">                .withMessageColor(<span class=\"string\">\"#FFFFFFFF\"</span>)       <span class=\"comment\">//设置消息字体的颜色</span></span><br><span class=\"line\">                .withDialogColor(<span class=\"string\">\"#FFE74C3C\"</span>)        <span class=\"comment\">//设置对话框背景的颜色</span></span><br><span class=\"line\">                <span class=\"comment\">//.withIcon(getResources().getDrawable(R.drawable.logo)) //设置标题的图标</span></span><br><span class=\"line\">                <span class=\"comment\">// 设置是否模态，默认false，表示模态，</span></span><br><span class=\"line\">                <span class=\"comment\">//要求必须采取行动才能继续进行剩下的操作 | isCancelable(true)</span></span><br><span class=\"line\">                .isCancelableOnTouchOutside(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">                .withButton1Text(<span class=\"string\">\"Yes\"</span>)               <span class=\"comment\">//设置按钮1的文本</span></span><br><span class=\"line\">                .withButton2Text(<span class=\"string\">\"No\"</span>)          <span class=\"comment\">//设置按钮2的文本</span></span><br><span class=\"line\"></span><br><span class=\"line\">                .setButton1Click(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                        Toast.makeText(v.getContext(), <span class=\"string\">\"I am btnYes\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">                        dialogBuilder.dismiss();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .setButton2Click(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                        Toast.makeText(v.getContext(), <span class=\"string\">\"I am btnNo\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">                        dialogBuilder.dismiss();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .show();</span><br></pre></td></tr></table></figure>\n<p>app <a href=\"http://fir.im/NiftyDialog\">demo</a>下载地址: <a href=\"http://fir.im/NiftyDialog\">http://fir.im/NiftyDialog</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"citbcwfwn0001gwag939fr9kf","category_id":"citbcwfx40006gwagxh3qg6d8","_id":"citbcwfxs000ggwagpzjcfqig"},{"post_id":"citbcwfxr000fgwagopxwwu9j","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfy0000lgwagvvlun3am"},{"post_id":"citbcwfwu0003gwagbxrqvbua","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfy4000qgwagg0bytfon"},{"post_id":"citbcwfxt000hgwagg1mizdcy","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfy8000tgwagsmm83rs9"},{"post_id":"citbcwfxy000kgwagn2tdelxl","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfyg000ygwag0ts5jwns"},{"post_id":"citbcwfx50007gwag594c22of","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfyi0011gwagmt9cbsjc"},{"post_id":"citbcwfxe0009gwag5axl8y27","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfym0015gwag99naqf5e"},{"post_id":"citbcwfxm000cgwag78jfjhtv","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfyt0019gwaggm4gwf0y"},{"post_id":"citbcwfy0000mgwag0nucovtk","category_id":"citbcwfyk0013gwagg4g8h562","_id":"citbcwfz0001fgwagy7g202kw"},{"post_id":"citbcwfyq0018gwagbf2m2d55","category_id":"citbcwfyk0013gwagg4g8h562","_id":"citbcwfz4001kgwagjgz111vo"},{"post_id":"citbcwfy4000rgwaghijgapmu","category_id":"citbcwfyv001bgwagbyqfkkxw","_id":"citbcwfz7001ogwag1mzilsd0"},{"post_id":"citbcwfz2001jgwagfkkvz5mn","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfzf001tgwagnkkmfvun"},{"post_id":"citbcwfy8000ugwag5xva4s8e","category_id":"citbcwfyv001bgwagbyqfkkxw","_id":"citbcwfzk001wgwagkmzcmxfd"},{"post_id":"citbcwfz4001mgwagy3c4pzxj","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfzp0021gwagcbtlip9a"},{"post_id":"citbcwfyh000zgwag7itml8vn","category_id":"citbcwfz8001pgwagxqi14zhb","_id":"citbcwfzu0024gwagk511lmb0"},{"post_id":"citbcwfzq0022gwagf0ti0imq","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwfzz002bgwagmijn8ai9"},{"post_id":"citbcwfyi0012gwag3733zmyu","category_id":"citbcwfz8001pgwagxqi14zhb","_id":"citbcwg01002fgwagbmqxncqw"},{"post_id":"citbcwfzy0029gwagofsks3q8","category_id":"citbcwfxp000dgwagx5kb1qjz","_id":"citbcwg01002hgwagfq3oqeh8"},{"post_id":"citbcwfyn0016gwagbn86dvbz","category_id":"citbcwfzw0026gwagnzgwei08","_id":"citbcwg0e002lgwag3pyoqo1t"},{"post_id":"citbcwfyw001cgwagv0bqgbv2","category_id":"citbcwg00002cgwagrt4gj85n","_id":"citbcwg0f002ngwagnt0huagf"},{"post_id":"citbcwfyy001egwag51fjxg7i","category_id":"citbcwg02002jgwagj7v8cm13","_id":"citbcwg0h002tgwagzi4naogp"},{"post_id":"citbcwfze001rgwagkbmopmk5","category_id":"citbcwg0f002qgwag6us8ac8z","_id":"citbcwg0i002xgwag6xk9xpmu"},{"post_id":"citbcwfzh001ugwagpi9v4q6q","category_id":"citbcwg0i002vgwag0l3cjonc","_id":"citbcwg0j0032gwagzu277z9i"},{"post_id":"citbcwfzl001xgwaghxn85t1w","category_id":"citbcwg0j002zgwagdwjmhanj","_id":"citbcwg0l0037gwagno048tbq"},{"post_id":"citbcwfzu0025gwagw5cd1vge","category_id":"citbcwg0j002zgwagdwjmhanj","_id":"citbcwg0m003agwagj7idhdg9"}],"PostTag":[{"post_id":"citbcwfwn0001gwag939fr9kf","tag_id":"citbcwfwz0005gwag76bbklt3","_id":"citbcwfxq000egwagg0ykis0d"},{"post_id":"citbcwfxy000kgwagn2tdelxl","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfy2000pgwagfyfeesig"},{"post_id":"citbcwfwu0003gwagbxrqvbua","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfy7000sgwagw86yl2o6"},{"post_id":"citbcwfwu0003gwagbxrqvbua","tag_id":"citbcwfxv000igwag44tjin9z","_id":"citbcwfyg000xgwagox4ctvm3"},{"post_id":"citbcwfx50007gwag594c22of","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfyi0010gwagzqqe4sca"},{"post_id":"citbcwfxe0009gwag5axl8y27","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfyo0017gwagrm8au3wp"},{"post_id":"citbcwfxm000cgwag78jfjhtv","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfyx001dgwaglxoo201f"},{"post_id":"citbcwfyw001cgwagv0bqgbv2","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfz1001ggwag0yc2lo0s"},{"post_id":"citbcwfxr000fgwagopxwwu9j","tag_id":"citbcwfwz0005gwag76bbklt3","_id":"citbcwfz4001lgwagzunxq5to"},{"post_id":"citbcwfxr000fgwagopxwwu9j","tag_id":"citbcwfyu001agwagtjj5zfta","_id":"citbcwfz7001ngwagy5x8reet"},{"post_id":"citbcwfz2001jgwagfkkvz5mn","tag_id":"citbcwfyu001agwagtjj5zfta","_id":"citbcwfzf001sgwagl903s5c2"},{"post_id":"citbcwfz2001jgwagfkkvz5mn","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfzk001vgwagkfwwxcvm"},{"post_id":"citbcwfz2001jgwagfkkvz5mn","tag_id":"citbcwfwz0005gwag76bbklt3","_id":"citbcwfzp0020gwagahwec0o5"},{"post_id":"citbcwfz4001mgwagy3c4pzxj","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfzt0023gwag9v6h34ef"},{"post_id":"citbcwfxt000hgwagg1mizdcy","tag_id":"citbcwfz1001hgwagoj7f4b88","_id":"citbcwfzw0028gwago3k1j5qi"},{"post_id":"citbcwfxt000hgwagg1mizdcy","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwfzz002agwage7l16tvn"},{"post_id":"citbcwfy0000mgwag0nucovtk","tag_id":"citbcwfzd001qgwagxo1kw8tt","_id":"citbcwg01002egwag24up8wwa"},{"post_id":"citbcwfy0000mgwag0nucovtk","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwg01002ggwagdacuyiby"},{"post_id":"citbcwfy4000rgwaghijgapmu","tag_id":"citbcwfzo001zgwagplwniovo","_id":"citbcwg01002igwag0oh9iq7c"},{"post_id":"citbcwfzy0029gwagofsks3q8","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwg0e002mgwag2zxkif33"},{"post_id":"citbcwfzy0029gwagofsks3q8","tag_id":"citbcwfyu001agwagtjj5zfta","_id":"citbcwg0f002ogwagmk111k4u"},{"post_id":"citbcwfy8000ugwag5xva4s8e","tag_id":"citbcwfzo001zgwagplwniovo","_id":"citbcwg0g002rgwagk620ymf7"},{"post_id":"citbcwfyh000zgwag7itml8vn","tag_id":"citbcwg00002dgwag9ro0j8aj","_id":"citbcwg0h002sgwag5vlq071v"},{"post_id":"citbcwfyi0012gwag3733zmyu","tag_id":"citbcwg00002dgwag9ro0j8aj","_id":"citbcwg0i002wgwagid04wgi6"},{"post_id":"citbcwfyn0016gwagbn86dvbz","tag_id":"citbcwg0f002pgwagy94xf228","_id":"citbcwg0j0030gwageo80r66a"},{"post_id":"citbcwfyn0016gwagbn86dvbz","tag_id":"citbcwg0h002ugwagstvwzqsi","_id":"citbcwg0j0031gwagg50n44q9"},{"post_id":"citbcwfyq0018gwagbf2m2d55","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwg0k0035gwagnwtzuo7n"},{"post_id":"citbcwfyq0018gwagbf2m2d55","tag_id":"citbcwg0i002ygwagx44m2n75","_id":"citbcwg0l0036gwagtzisjfq8"},{"post_id":"citbcwfyy001egwag51fjxg7i","tag_id":"citbcwg0k0033gwaglwh37jr5","_id":"citbcwg0m0039gwagd25mtrju"},{"post_id":"citbcwfze001rgwagkbmopmk5","tag_id":"citbcwg0l0038gwagowf1sriy","_id":"citbcwg0o003cgwagn3qqbmzf"},{"post_id":"citbcwfzh001ugwagpi9v4q6q","tag_id":"citbcwg0n003bgwag8md9swdj","_id":"citbcwg0q003egwagmmxxg5s0"},{"post_id":"citbcwfzq0022gwagf0ti0imq","tag_id":"citbcwfxl000bgwag06dblfky","_id":"citbcwg0q003fgwagt5a2i21y"},{"post_id":"citbcwfzq0022gwagf0ti0imq","tag_id":"citbcwg0p003dgwag23vrpirg","_id":"citbcwg0q003ggwagk5cf4718"}],"Tag":[{"name":"Android Studio","_id":"citbcwfwz0005gwag76bbklt3"},{"name":"Android","_id":"citbcwfxl000bgwag06dblfky"},{"name":"ORMLite","_id":"citbcwfxv000igwag44tjin9z"},{"name":"Gradle","_id":"citbcwfyu001agwagtjj5zfta"},{"name":"Json","_id":"citbcwfz1001hgwagoj7f4b88"},{"name":"MI","_id":"citbcwfzd001qgwagxo1kw8tt"},{"name":"Birt","_id":"citbcwfzo001zgwagplwniovo"},{"name":"Git","_id":"citbcwg00002dgwag9ro0j8aj"},{"name":"Hexo","_id":"citbcwg0f002pgwagy94xf228"},{"name":"个人博客","_id":"citbcwg0h002ugwagstvwzqsi"},{"name":"Gank","_id":"citbcwg0i002ygwagx44m2n75"},{"name":"daocloud","_id":"citbcwg0k0033gwaglwh37jr5"},{"name":"开源收集","_id":"citbcwg0l0038gwagowf1sriy"},{"name":"文档","_id":"citbcwg0n003bgwag8md9swdj"},{"name":"自定义View","_id":"citbcwg0p003dgwag23vrpirg"}]}}